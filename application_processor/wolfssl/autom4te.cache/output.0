@%:@! /bin/sh
@%:@ Guess values for system-dependent variables and create Makefiles.
@%:@ Generated by GNU Autoconf 2.72 for wolfssl 5.6.6.
@%:@
@%:@ Report bugs to <https://github.com/wolfssl/wolfssl/issues>.
@%:@ 
@%:@ Copyright (C) 2006-2023 wolfSSL Inc.
@%:@ 
@%:@ 
@%:@ Copyright (C) 1992-1996, 1998-2017, 2020-2023 Free Software Foundation,
@%:@ Inc.
@%:@ 
@%:@ 
@%:@ This configure script is free software; the Free Software Foundation
@%:@ gives unlimited permission to copy, distribute and modify it.
## -------------------- ##
## M4sh Initialization. ##
## -------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
if test ${ZSH_VERSION+y} && (emulate sh) >/dev/null 2>&1
then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else case e in @%:@(
  e) case `(set -o) 2>/dev/null` in @%:@(
  *posix*) :
    set -o posix ;; @%:@(
  *) :
     ;;
esac ;;
esac
fi



# Reset variables that may have inherited troublesome values from
# the environment.

# IFS needs to be set, to space, tab, and newline, in precisely that order.
# (If _AS_PATH_WALK were called with IFS unset, it would have the
# side effect of setting IFS to empty, thus disabling word splitting.)
# Quoting is to prevent editors from complaining about space-tab.
as_nl='
'
export as_nl
IFS=" ""	$as_nl"

PS1='$ '
PS2='> '
PS4='+ '

# Ensure predictable behavior from utilities with locale-dependent output.
LC_ALL=C
export LC_ALL
LANGUAGE=C
export LANGUAGE

# We cannot yet rely on "unset" to work, but we need these variables
# to be unset--not just set to an empty or harmless value--now, to
# avoid bugs in old shells (e.g. pre-3.0 UWIN ksh).  This construct
# also avoids known problems related to "unset" and subshell syntax
# in other old shells (e.g. bash 2.01 and pdksh 5.2.14).
for as_var in BASH_ENV ENV MAIL MAILPATH CDPATH
do eval test \${$as_var+y} \
  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
done

# Ensure that fds 0, 1, and 2 are open.
if (exec 3>&0) 2>/dev/null; then :; else exec 0</dev/null; fi
if (exec 3>&1) 2>/dev/null; then :; else exec 1>/dev/null; fi
if (exec 3>&2)            ; then :; else exec 2>/dev/null; fi

# The user is always right.
if ${PATH_SEPARATOR+false} :; then
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
      PATH_SEPARATOR=';'
  }
fi


# Find who we are.  Look in the path if we contain no directory separator.
as_myself=
case $0 in @%:@((
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in @%:@(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    test -r "$as_dir$0" && as_myself=$as_dir$0 && break
  done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as 'sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  printf "%s\n" "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  exit 1
fi


# Use a proper internal environment variable to ensure we don't fall
  # into an infinite loop, continuously re-executing ourselves.
  if test x"${_as_can_reexec}" != xno && test "x$CONFIG_SHELL" != x; then
    _as_can_reexec=no; export _as_can_reexec;
    # We cannot yet assume a decent shell, so we have to provide a
# neutralization value for shells without unset; and this also
# works around shells that cannot unset nonexistent variables.
# Preserve -v and -x to the replacement shell.
BASH_ENV=/dev/null
ENV=/dev/null
(unset BASH_ENV) >/dev/null 2>&1 && unset BASH_ENV ENV
case $- in @%:@ ((((
  *v*x* | *x*v* ) as_opts=-vx ;;
  *v* ) as_opts=-v ;;
  *x* ) as_opts=-x ;;
  * ) as_opts= ;;
esac
exec $CONFIG_SHELL $as_opts "$as_myself" ${1+"$@"}
# Admittedly, this is quite paranoid, since all the known shells bail
# out after a failed 'exec'.
printf "%s\n" "$0: could not re-execute with $CONFIG_SHELL" >&2
exit 255
  fi
  # We don't want this to propagate to other subprocesses.
          { _as_can_reexec=; unset _as_can_reexec;}
if test "x$CONFIG_SHELL" = x; then
  as_bourne_compatible="if test \${ZSH_VERSION+y} && (emulate sh) >/dev/null 2>&1
then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on \${1+\"\$@\"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '\${1+\"\$@\"}'='\"\$@\"'
  setopt NO_GLOB_SUBST
else case e in @%:@(
  e) case \`(set -o) 2>/dev/null\` in @%:@(
  *posix*) :
    set -o posix ;; @%:@(
  *) :
     ;;
esac ;;
esac
fi
"
  as_required="as_fn_return () { (exit \$1); }
as_fn_success () { as_fn_return 0; }
as_fn_failure () { as_fn_return 1; }
as_fn_ret_success () { return 0; }
as_fn_ret_failure () { return 1; }

exitcode=0
as_fn_success || { exitcode=1; echo as_fn_success failed.; }
as_fn_failure && { exitcode=1; echo as_fn_failure succeeded.; }
as_fn_ret_success || { exitcode=1; echo as_fn_ret_success failed.; }
as_fn_ret_failure && { exitcode=1; echo as_fn_ret_failure succeeded.; }
if ( set x; as_fn_ret_success y && test x = \"\$1\" )
then :
  
else case e in @%:@(
  e) exitcode=1; echo positional parameters were not saved. ;;
esac
fi
test x\$exitcode = x0 || exit 1
blah=\$(echo \$(echo blah))
test x\"\$blah\" = xblah || exit 1
test -x / || exit 1"
  as_suggested="  as_lineno_1=";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested" as_lineno_1a=\$LINENO
  as_lineno_2=";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested" as_lineno_2a=\$LINENO
  eval 'test \"x\$as_lineno_1'\$as_run'\" != \"x\$as_lineno_2'\$as_run'\" &&
  test \"x\`expr \$as_lineno_1'\$as_run' + 1\`\" = \"x\$as_lineno_2'\$as_run'\"' || exit 1
test \$(( 1 + 1 )) = 2 || exit 1"
  if (eval "$as_required") 2>/dev/null
then :
  as_have_required=yes
else case e in @%:@(
  e) as_have_required=no ;;
esac
fi
  if test x$as_have_required = xyes && (eval "$as_suggested") 2>/dev/null
then :
  
else case e in @%:@(
  e) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_found=false
for as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH
do
  IFS=$as_save_IFS
  case $as_dir in @%:@(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
  as_found=:
  case $as_dir in @%:@(
	 /*)
	   for as_base in sh bash ksh sh5; do
	     # Try only shells that exist, to save several forks.
	     as_shell=$as_dir$as_base
	     if { test -f "$as_shell" || test -f "$as_shell.exe"; } &&
		    as_run=a "$as_shell" -c "$as_bourne_compatible""$as_required" 2>/dev/null
then :
  CONFIG_SHELL=$as_shell as_have_required=yes
		   if as_run=a "$as_shell" -c "$as_bourne_compatible""$as_suggested" 2>/dev/null
then :
  break 2
fi
fi
	   done;;
       esac
  as_found=false
done
IFS=$as_save_IFS
if $as_found
then :
  
else case e in @%:@(
  e) if { test -f "$SHELL" || test -f "$SHELL.exe"; } &&
	      as_run=a "$SHELL" -c "$as_bourne_compatible""$as_required" 2>/dev/null
then :
  CONFIG_SHELL=$SHELL as_have_required=yes
fi ;;
esac
fi


      if test "x$CONFIG_SHELL" != x
then :
  export CONFIG_SHELL
             # We cannot yet assume a decent shell, so we have to provide a
# neutralization value for shells without unset; and this also
# works around shells that cannot unset nonexistent variables.
# Preserve -v and -x to the replacement shell.
BASH_ENV=/dev/null
ENV=/dev/null
(unset BASH_ENV) >/dev/null 2>&1 && unset BASH_ENV ENV
case $- in @%:@ ((((
  *v*x* | *x*v* ) as_opts=-vx ;;
  *v* ) as_opts=-v ;;
  *x* ) as_opts=-x ;;
  * ) as_opts= ;;
esac
exec $CONFIG_SHELL $as_opts "$as_myself" ${1+"$@"}
# Admittedly, this is quite paranoid, since all the known shells bail
# out after a failed 'exec'.
printf "%s\n" "$0: could not re-execute with $CONFIG_SHELL" >&2
exit 255
fi

    if test x$as_have_required = xno
then :
  printf "%s\n" "$0: This script requires a shell more modern than all"
  printf "%s\n" "$0: the shells that I found on your system."
  if test ${ZSH_VERSION+y} ; then
    printf "%s\n" "$0: In particular, zsh $ZSH_VERSION has bugs and should"
    printf "%s\n" "$0: be upgraded to zsh 4.3.4 or later."
  else
    printf "%s\n" "$0: Please tell bug-autoconf@gnu.org and
$0: https://github.com/wolfssl/wolfssl/issues about your
$0: system, including any error possibly output before this
$0: message. Then install a modern shell, or manually run
$0: the script under such a shell if you do have one."
  fi
  exit 1
fi ;;
esac
fi
fi
SHELL=${CONFIG_SHELL-/bin/sh}
export SHELL
# Unset more variables known to interfere with behavior of common tools.
CLICOLOR_FORCE= GREP_OPTIONS=
unset CLICOLOR_FORCE GREP_OPTIONS

## --------------------- ##
## M4sh Shell Functions. ##
## --------------------- ##
@%:@ as_fn_unset VAR
@%:@ ---------------
@%:@ Portably unset VAR.
as_fn_unset ()
{
  { eval $1=; unset $1;}
}
as_unset=as_fn_unset


@%:@ as_fn_set_status STATUS
@%:@ -----------------------
@%:@ Set @S|@? to STATUS, without forking.
as_fn_set_status ()
{
  return $1
} @%:@ as_fn_set_status

@%:@ as_fn_exit STATUS
@%:@ -----------------
@%:@ Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
as_fn_exit ()
{
  set +e
  as_fn_set_status $1
  exit $1
} @%:@ as_fn_exit

@%:@ as_fn_mkdir_p
@%:@ -------------
@%:@ Create "@S|@as_dir" as a directory, including parents if necessary.
as_fn_mkdir_p ()
{

  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || eval $as_mkdir_p || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`printf "%s\n" "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || as_fn_error $? "cannot create directory $as_dir"


} @%:@ as_fn_mkdir_p

@%:@ as_fn_executable_p FILE
@%:@ -----------------------
@%:@ Test if FILE is an executable regular file.
as_fn_executable_p ()
{
  test -f "$1" && test -x "$1"
} @%:@ as_fn_executable_p
@%:@ as_fn_append VAR VALUE
@%:@ ----------------------
@%:@ Append the text in VALUE to the end of the definition contained in VAR. Take
@%:@ advantage of any shell optimizations that allow amortized linear growth over
@%:@ repeated appends, instead of the typical quadratic growth present in naive
@%:@ implementations.
if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null
then :
  eval 'as_fn_append ()
  {
    eval $1+=\$2
  }'
else case e in @%:@(
  e) as_fn_append ()
  {
    eval $1=\$$1\$2
  } ;;
esac
fi # as_fn_append

@%:@ as_fn_arith ARG...
@%:@ ------------------
@%:@ Perform arithmetic evaluation on the ARGs, and store the result in the
@%:@ global @S|@as_val. Take advantage of shells that can avoid forks. The arguments
@%:@ must be portable across @S|@(()) and expr.
if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null
then :
  eval 'as_fn_arith ()
  {
    as_val=$(( $* ))
  }'
else case e in @%:@(
  e) as_fn_arith ()
  {
    as_val=`expr "$@" || test $? -eq 1`
  } ;;
esac
fi # as_fn_arith


@%:@ as_fn_error STATUS ERROR [LINENO LOG_FD]
@%:@ ----------------------------------------
@%:@ Output "`basename @S|@0`: error: ERROR" to stderr. If LINENO and LOG_FD are
@%:@ provided, also output the error to LOG_FD, referencing LINENO. Then exit the
@%:@ script with STATUS, using 1 if that was 0.
as_fn_error ()
{
  as_status=$1; test $as_status -eq 0 && as_status=1
  if test "$4"; then
    as_lineno=${as_lineno-"$3"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: $2" >&$4
  fi
  printf "%s\n" "$as_me: error: $2" >&2
  as_fn_exit $as_status
} @%:@ as_fn_error

if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi

if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits


  as_lineno_1=$LINENO as_lineno_1a=$LINENO
  as_lineno_2=$LINENO as_lineno_2a=$LINENO
  eval 'test "x$as_lineno_1'$as_run'" != "x$as_lineno_2'$as_run'" &&
  test "x`expr $as_lineno_1'$as_run' + 1`" = "x$as_lineno_2'$as_run'"' || {
  # Blame Lee E. McMahon (1931-1989) for sed's syntax.  :-)
  sed -n '
    p
    /[$]LINENO/=
  ' <$as_myself |
    sed '
      t clear
      :clear
      s/[$]LINENO.*/&-/
      t lineno
      b
      :lineno
      N
      :loop
      s/[$]LINENO\([^'$as_cr_alnum'_].*\n\)\(.*\)/\2\1\2/
      t loop
      s/-\n.*//
    ' >$as_me.lineno &&
  chmod +x "$as_me.lineno" ||
    { printf "%s\n" "$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&2; as_fn_exit 1; }

  # If we had to re-execute with $CONFIG_SHELL, we're ensured to have
  # already done that, so ensure we don't try to do so again and fall
  # in an infinite loop.  This has already happened in practice.
  _as_can_reexec=no; export _as_can_reexec
  # Don't try to exec as it changes $[0], causing all sort of problems
  # (the dirname of $[0] is not the place where we might find the
  # original and so on.  Autoconf is especially sensitive to this).
  . "./$as_me.lineno"
  # Exit status is that of the last command.
  exit
}


# Determine whether it's possible to make 'echo' print without a newline.
# These variables are no longer used directly by Autoconf, but are AC_SUBSTed
# for compatibility with existing Makefiles.
ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in @%:@(((((
-n*)
  case `echo 'xy\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  xy)  ECHO_C='\c';;
  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
       ECHO_T='	';;
  esac;;
*)
  ECHO_N='-n';;
esac

# For backward compatibility with old third-party macros, we provide
# the shell variables $as_echo and $as_echo_n.  New code should use
# AS_ECHO(["message"]) and AS_ECHO_N(["message"]), respectively.
as_@&t@echo='printf %s\n'
as_@&t@echo_n='printf %s'

rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir 2>/dev/null
fi
if (echo >conf$$.file) 2>/dev/null; then
  if ln -s conf$$.file conf$$ 2>/dev/null; then
    as_ln_s='ln -s'
    # ... but there are two gotchas:
    # 1) On MSYS, both 'ln -s file dir' and 'ln file dir' fail.
    # 2) DJGPP < 2.04 has no symlinks; 'ln -s' creates a wrapper executable.
    # In both cases, we have to default to 'cp -pR'.
    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
      as_ln_s='cp -pR'
  elif ln conf$$.file conf$$ 2>/dev/null; then
    as_ln_s=ln
  else
    as_ln_s='cp -pR'
  fi
else
  as_ln_s='cp -pR'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null

if mkdir -p . 2>/dev/null; then
  as_mkdir_p='mkdir -p "$as_dir"'
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi

as_test_x='test -x'
as_executable_p=as_fn_executable_p

# Sed expression to map a string onto a valid CPP name.
as_sed_cpp="y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g"
as_tr_cpp="eval sed '$as_sed_cpp'" # deprecated

# Sed expression to map a string onto a valid variable name.
as_sed_sh="y%*+%pp%;s%[^_$as_cr_alnum]%_%g"
as_tr_sh="eval sed '$as_sed_sh'" # deprecated


test -n "$DJDIR" || exec 7<&0 </dev/null
exec 6>&1

# Name of the host.
# hostname on some systems (SVR3.2, old GNU/Linux) returns a bogus exit status,
# so uname gets run too.
ac_hostname=`(hostname || uname -n) 2>/dev/null | sed 1q`

#
# Initializations.
#
ac_default_prefix=/usr/local
ac_clean_files=
ac_config_libobj_dir=.
LIB@&t@OBJS=
cross_compiling=no
subdirs=
MFLAGS=
MAKEFLAGS=

# Identity of this package.
PACKAGE_NAME='wolfssl'
PACKAGE_TARNAME='wolfssl'
PACKAGE_VERSION='5.6.6'
PACKAGE_STRING='wolfssl 5.6.6'
PACKAGE_BUGREPORT='https://github.com/wolfssl/wolfssl/issues'
PACKAGE_URL='https://www.wolfssl.com'

# Factoring default headers for most tests.
ac_includes_default="\
#include <stddef.h>
#ifdef HAVE_STDIO_H
# include <stdio.h>
#endif
#ifdef HAVE_STDLIB_H
# include <stdlib.h>
#endif
#ifdef HAVE_STRING_H
# include <string.h>
#endif
#ifdef HAVE_INTTYPES_H
# include <inttypes.h>
#endif
#ifdef HAVE_STDINT_H
# include <stdint.h>
#endif
#ifdef HAVE_STRINGS_H
# include <strings.h>
#endif
#ifdef HAVE_SYS_TYPES_H
# include <sys/types.h>
#endif
#ifdef HAVE_SYS_STAT_H
# include <sys/stat.h>
#endif
#ifdef HAVE_UNISTD_H
# include <unistd.h>
#endif"

ac_header_c_list=
ac_subst_vars='LTLIBOBJS
LIB@&t@OBJS
LIBM
LIB_STATIC_ADD
LIB_ADD
AM_CCASFLAGS
AM_LDFLAGS
AM_CFLAGS
AM_CPPFLAGS
INCLUDE_SP_INT
ENABLED_FIPS
ASFLAGS_FPUSIMD_ENABLE
ASFLAGS_FPUSIMD_DISABLE
ASFLAGS_FPU_ENABLE_SIMD_DISABLE
ASFLAGS_FPU_DISABLE_SIMD_ENABLE
CFLAGS_AUTO_VECTORIZE_ENABLE
CFLAGS_AUTO_VECTORIZE_DISABLE
CFLAGS_SIMD_ENABLE
CFLAGS_SIMD_DISABLE
CFLAGS_FPU_ENABLE
CFLAGS_FPU_DISABLE
LIBSUFFIX
ENABLED_CRYPT_TESTS
HAVE_VALGRIND
HAVE_OPENSSL_CMD
WOLFSENTRY_INCLUDE
WOLFSENTRY_LIB
PSA_INCLUDE
PSA_LIB_NAME
PSA_LIB
XMSS_ROOT
KERNEL_ARCH
KERNEL_ROOT
ENABLED_LINUXKM_BENCHMARKS
ENABLED_LINUXKM_PIE
ENABLED_ASM
INSTALL_DATA
INSTALL_SCRIPT
INSTALL_PROGRAM
WOLFSSL_BUILD_DATE
WOLFSSL_LIBRARY_VERSION
WOLFSSL_LIBRARY_VERSION_THIRD
WOLFSSL_LIBRARY_VERSION_SECOND
WOLFSSL_LIBRARY_VERSION_FIRST
WOLFSSL_CONFIG_ARGS
EXTRA_LDFLAGS
EXTRA_CCASFLAGS
EXTRA_CFLAGS
EXTRA_CPPFLAGS
target_os
target_vendor
target_cpu
target
host_os
host_vendor
host_cpu
host
build_os
build_vendor
build_cpu
build
OBJEXT
EXEEXT
ac_ct_CC
CPPFLAGS
LDFLAGS
CFLAGS
CC
target_alias
host_alias
build_alias
LIBS
ECHO_T
ECHO_N
ECHO_C
DEFS
mandir
localedir
libdir
psdir
pdfdir
dvidir
htmldir
infodir
docdir
oldincludedir
includedir
runstatedir
localstatedir
sharedstatedir
sysconfdir
datadir
datarootdir
libexecdir
sbindir
bindir
program_transform_name
prefix
exec_prefix
PACKAGE_URL
PACKAGE_BUGREPORT
PACKAGE_STRING
PACKAGE_VERSION
PACKAGE_TARNAME
PACKAGE_NAME
PATH_SEPARATOR
SHELL'
ac_subst_files=''
ac_user_opts='
enable_option_checking
enable_distro
enable_threadlocal
enable_harden_tls
enable_32bit
enable_16bit
enable_64bit
enable_kdf
enable_hmac
enable_do178
enable_asm
enable_fips
enable_engine
enable_reproducible_build
enable_benchmark
enable_linuxkm
enable_linuxkm_defaults
enable_linuxkm_pie
enable_linuxkm_benchmarks
with_linux_source
with_linux_arch
enable_sp
enable_sp_math_all
enable_sp_math
enable_sp_asm
enable_fastmath
enable_fasthugemath
enable_heapmath
enable_all
enable_all_crypto
with_liboqs
enable_kyber
enable_xmss
with_libxmss
enable_lms
with_liblms
enable_singlethreaded
enable_rwlock
enable_cryptonly
enable_ech
enable_dtls
enable_dtls_mtu
enable_keylog_export
enable_tls13_draft18
enable_tls13
enable_quic
enable_postauth
enable_hrrcookie
enable_rng
enable_sctp
enable_srtp
enable_mcast
enable_bind
enable_libssh2
enable_openssh
enable_openvpn
enable_openresty
enable_nginx
enable_chrony
enable_openldap
enable_lighty
enable_rsyslog
enable_haproxy
enable_wpas
enable_wpas_dpp
enable_ntp
enable_fortress
enable_libwebsockets
enable_net_snmp
enable_krb
enable_ffmpeg
enable_ip_alt_name
enable_qt
enable_bump
enable_sniffer
enable_signal
enable_strongswan
enable_hitch
enable_memcached
enable_opensslcoexist
enable_smime
enable_psa
with_psa_include
with_psa_lib
with_psa_lib_name
enable_psa_lib_static
enable_opensslall
enable_opensslextra
enable_error_queue_per_thread
enable_maxstrength
enable_harden
enable_ipv6
enable_leanpsk
enable_leantls
enable_lowresource
enable_titancache
enable_hugecache
enable_bigcache
enable_smallcache
enable_savesession
enable_savecert
enable_writedup
enable_atomicuser
enable_pkcallbacks
with_maxq10xx
with_cryptoauthlib
with_se050
enable_aescbc
enable_aescbc_length_checks
enable_aesgcm
enable_aesgcm_stream
enable_aesccm
enable_aeseax
enable_aessiv
enable_aesctr
enable_aesofb
enable_aescfb
enable_aes_bitsliced
enable_sm4_ecb
enable_sm4_cbc
enable_sm4_ctr
enable_sm4_gcm
enable_sm4_ccm
enable_armasm
enable_xilinx
with_seco
enable_aria
enable_caam
enable_aesni
enable_intelasm
enable_aligndata
enable_intelrand
enable_amdrand
enable_afalg
enable_kcapi_hash
enable_kcapi_hmac
enable_kcapi_aes
enable_kcapi_rsa
enable_kcapi_dh
enable_kcapi_ecc
enable_kcapi
enable_devcrypto
enable_camellia
enable_md2
enable_nullcipher
enable_ripemd
enable_blake2
enable_blake2s
enable_sha224
enable_sha3
enable_shake128
enable_shake256
enable_sha512
enable_sha384
enable_sm3
enable_sessioncerts
enable_keygen
enable_certgen
enable_certreq
enable_certext
enable_certgencache
enable_sep
enable_hkdf
enable_hpke
enable_x963kdf
enable_srtp_kdf
enable_dsa
enable_eccshamir
enable_ecc
enable_sm2
enable_ecccustcurves
with_eccminsz
enable_compkey
enable_brainpool
enable_curve25519
enable_ed25519
enable_ed25519_stream
enable_curve448
enable_ed448
enable_ed448_stream
enable_fpecc
enable_eccencrypt
enable_eccsi
enable_sakke
enable_psk
enable_psk_one_id
enable_errorstrings
enable_errorqueue
enable_sslv3
enable_tlsv10
enable_oldtls
enable_tlsv12
enable_stacksize
enable_memory
enable_trackmemory
enable_memorylog
enable_stacklog
with_wolfsentry
with_wolfsentry_lib
with_wolfsentry_include
enable_wolfsentry
enable_qt_test
enable_rsa
enable_oaep
enable_rsapub
enable_rsavfy
enable_rsapss
enable_dh
enable_anon
enable_asn
enable_asn_print
enable_aes
enable_dtls13
enable_dtlscid
enable_dtls_frag_ch
enable_coding
enable_base64encode
enable_base16
enable_md4
enable_des3
enable_arc4
enable_md5
enable_sha
enable_siphash
enable_cmac
enable_aesxts
enable_xts
enable_webserver
enable_webclient
enable_rc2
enable_selftest
enable_poly1305
enable_chacha
enable_xchacha
enable_hashdrbg
enable_entropy_memuse
enable_filesystem
enable_inline
enable_ocsp
enable_ocspstapling
enable_ocspstapling2
enable_crl
enable_crl_monitor
with_wnr
enable_sni
enable_maxfragment
enable_alpn
enable_trustedca
enable_truncatedhmac
enable_renegotiation_indication
enable_secure_renegotiation
enable_secure_renegotiation_info
enable_fallback_scsv
enable_keying_material
enable_supportedcurves
enable_ffdhe_only
enable_session_ticket
enable_ticket_nonce_malloc
enable_extended_master
enable_tlsx
enable_earlydata
enable_pkcs7
enable_wolfssh
enable_ssh
enable_wolftpm
enable_wolfclu
enable_scep
enable_srp
enable_indef
enable_altcertchains
enable_smallstackcache
enable_smallstack
enable_valgrind
enable_testcert
enable_iopool
enable_certservice
enable_jni
enable_asio
enable_apachehttpd
enable_enc_then_mac
enable_stunnel
enable_curl
enable_tcpdump
enable_sblim_sfcb
enable_libest
enable_enckeys
enable_pkcs12
enable_pwdbased
enable_scrypt
enable_examples
enable_crypttests
enable_crypttests_libs
with_libz
enable_pkcs11
enable_pkcs8
with_cavium
with_cavium_v
with_octeon_sync
with_intelqa
with_intelqa_sync
with_arm_target
enable_staticmemory
enable_mcapi
enable_cryptodev
enable_cryptocb
enable_asynccrypt
enable_asynccrypt_sw
enable_asyncthreads
enable_sessionexport
enable_aeskeywrap
enable_oldnames
enable_memtest
enable_hashflags
enable_defaultdhparams
with_max_rsa_bits
with_max_ecc_bits
enable_linuxkm_lkcapi_register
with_libsuffix
enable_context_extra_user_data
enable_iotsafe
enable_iotsafe_hwrng
enable_makeclean
enable_usersettings
enable_optflags
enable_sys_ca_certs
enable_dual_alg_certs
enable_openssl_compatible_defaults
'
      ac_precious_vars='build_alias
host_alias
target_alias
CC
CFLAGS
LDFLAGS
LIBS
CPPFLAGS
EXTRA_CPPFLAGS
EXTRA_CFLAGS
EXTRA_CCASFLAGS
EXTRA_LDFLAGS'


# Initialize some variables set by options.
ac_init_help=
ac_init_version=false
ac_unrecognized_opts=
ac_unrecognized_sep=
# The variables have the same names as the options, with
# dashes changed to underlines.
cache_file=/dev/null
exec_prefix=NONE
no_create=
no_recursion=
prefix=NONE
program_prefix=NONE
program_suffix=NONE
program_transform_name=s,x,x,
silent=
site=
srcdir=
verbose=
x_includes=NONE
x_libraries=NONE

# Installation directory options.
# These are left unexpanded so users can "make install exec_prefix=/foo"
# and all the variables that are supposed to be based on exec_prefix
# by default will actually change.
# Use braces instead of parens because sh, perl, etc. also accept them.
# (The list follows the same order as the GNU Coding Standards.)
bindir='${exec_prefix}/bin'
sbindir='${exec_prefix}/sbin'
libexecdir='${exec_prefix}/libexec'
datarootdir='${prefix}/share'
datadir='${datarootdir}'
sysconfdir='${prefix}/etc'
sharedstatedir='${prefix}/com'
localstatedir='${prefix}/var'
runstatedir='${localstatedir}/run'
includedir='${prefix}/include'
oldincludedir='/usr/include'
docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'
infodir='${datarootdir}/info'
htmldir='${docdir}'
dvidir='${docdir}'
pdfdir='${docdir}'
psdir='${docdir}'
libdir='${exec_prefix}/lib'
localedir='${datarootdir}/locale'
mandir='${datarootdir}/man'

ac_prev=
ac_dashdash=
for ac_option
do
  # If the previous option needs an argument, assign it.
  if test -n "$ac_prev"; then
    eval $ac_prev=\$ac_option
    ac_prev=
    continue
  fi

  case $ac_option in
  *=?*) ac_optarg=`expr "X$ac_option" : '[^=]*=\(.*\)'` ;;
  *=)   ac_optarg= ;;
  *)    ac_optarg=yes ;;
  esac

  case $ac_dashdash$ac_option in
  --)
    ac_dashdash=yes ;;

  -bindir | --bindir | --bindi | --bind | --bin | --bi)
    ac_prev=bindir ;;
  -bindir=* | --bindir=* | --bindi=* | --bind=* | --bin=* | --bi=*)
    bindir=$ac_optarg ;;

  -build | --build | --buil | --bui | --bu)
    ac_prev=build_alias ;;
  -build=* | --build=* | --buil=* | --bui=* | --bu=*)
    build_alias=$ac_optarg ;;

  -cache-file | --cache-file | --cache-fil | --cache-fi \
  | --cache-f | --cache- | --cache | --cach | --cac | --ca | --c)
    ac_prev=cache_file ;;
  -cache-file=* | --cache-file=* | --cache-fil=* | --cache-fi=* \
  | --cache-f=* | --cache-=* | --cache=* | --cach=* | --cac=* | --ca=* | --c=*)
    cache_file=$ac_optarg ;;

  --config-cache | -C)
    cache_file=config.cache ;;

  -datadir | --datadir | --datadi | --datad)
    ac_prev=datadir ;;
  -datadir=* | --datadir=* | --datadi=* | --datad=*)
    datadir=$ac_optarg ;;

  -datarootdir | --datarootdir | --datarootdi | --datarootd | --dataroot \
  | --dataroo | --dataro | --datar)
    ac_prev=datarootdir ;;
  -datarootdir=* | --datarootdir=* | --datarootdi=* | --datarootd=* \
  | --dataroot=* | --dataroo=* | --dataro=* | --datar=*)
    datarootdir=$ac_optarg ;;

  -disable-* | --disable-*)
    ac_useropt=`expr "x$ac_option" : 'x-*disable-\(.*\)'`
    # Reject names that are not valid shell variable names.
    expr "x$ac_useropt" : ".*[^-+._$as_cr_alnum]" >/dev/null &&
      as_fn_error $? "invalid feature name: '$ac_useropt'"
    ac_useropt_orig=$ac_useropt
    ac_useropt=`printf "%s\n" "$ac_useropt" | sed 's/[-+.]/_/g'`
    case $ac_user_opts in
      *"
"enable_$ac_useropt"
"*) ;;
      *) ac_unrecognized_opts="$ac_unrecognized_opts$ac_unrecognized_sep--disable-$ac_useropt_orig"
	 ac_unrecognized_sep=', ';;
    esac
    eval enable_$ac_useropt=no ;;

  -docdir | --docdir | --docdi | --doc | --do)
    ac_prev=docdir ;;
  -docdir=* | --docdir=* | --docdi=* | --doc=* | --do=*)
    docdir=$ac_optarg ;;

  -dvidir | --dvidir | --dvidi | --dvid | --dvi | --dv)
    ac_prev=dvidir ;;
  -dvidir=* | --dvidir=* | --dvidi=* | --dvid=* | --dvi=* | --dv=*)
    dvidir=$ac_optarg ;;

  -enable-* | --enable-*)
    ac_useropt=`expr "x$ac_option" : 'x-*enable-\([^=]*\)'`
    # Reject names that are not valid shell variable names.
    expr "x$ac_useropt" : ".*[^-+._$as_cr_alnum]" >/dev/null &&
      as_fn_error $? "invalid feature name: '$ac_useropt'"
    ac_useropt_orig=$ac_useropt
    ac_useropt=`printf "%s\n" "$ac_useropt" | sed 's/[-+.]/_/g'`
    case $ac_user_opts in
      *"
"enable_$ac_useropt"
"*) ;;
      *) ac_unrecognized_opts="$ac_unrecognized_opts$ac_unrecognized_sep--enable-$ac_useropt_orig"
	 ac_unrecognized_sep=', ';;
    esac
    eval enable_$ac_useropt=\$ac_optarg ;;

  -exec-prefix | --exec_prefix | --exec-prefix | --exec-prefi \
  | --exec-pref | --exec-pre | --exec-pr | --exec-p | --exec- \
  | --exec | --exe | --ex)
    ac_prev=exec_prefix ;;
  -exec-prefix=* | --exec_prefix=* | --exec-prefix=* | --exec-prefi=* \
  | --exec-pref=* | --exec-pre=* | --exec-pr=* | --exec-p=* | --exec-=* \
  | --exec=* | --exe=* | --ex=*)
    exec_prefix=$ac_optarg ;;

  -gas | --gas | --ga | --g)
    # Obsolete; use --with-gas.
    with_gas=yes ;;

  -help | --help | --hel | --he | -h)
    ac_init_help=long ;;
  -help=r* | --help=r* | --hel=r* | --he=r* | -hr*)
    ac_init_help=recursive ;;
  -help=s* | --help=s* | --hel=s* | --he=s* | -hs*)
    ac_init_help=short ;;

  -host | --host | --hos | --ho)
    ac_prev=host_alias ;;
  -host=* | --host=* | --hos=* | --ho=*)
    host_alias=$ac_optarg ;;

  -htmldir | --htmldir | --htmldi | --htmld | --html | --htm | --ht)
    ac_prev=htmldir ;;
  -htmldir=* | --htmldir=* | --htmldi=* | --htmld=* | --html=* | --htm=* \
  | --ht=*)
    htmldir=$ac_optarg ;;

  -includedir | --includedir | --includedi | --included | --include \
  | --includ | --inclu | --incl | --inc)
    ac_prev=includedir ;;
  -includedir=* | --includedir=* | --includedi=* | --included=* | --include=* \
  | --includ=* | --inclu=* | --incl=* | --inc=*)
    includedir=$ac_optarg ;;

  -infodir | --infodir | --infodi | --infod | --info | --inf)
    ac_prev=infodir ;;
  -infodir=* | --infodir=* | --infodi=* | --infod=* | --info=* | --inf=*)
    infodir=$ac_optarg ;;

  -libdir | --libdir | --libdi | --libd)
    ac_prev=libdir ;;
  -libdir=* | --libdir=* | --libdi=* | --libd=*)
    libdir=$ac_optarg ;;

  -libexecdir | --libexecdir | --libexecdi | --libexecd | --libexec \
  | --libexe | --libex | --libe)
    ac_prev=libexecdir ;;
  -libexecdir=* | --libexecdir=* | --libexecdi=* | --libexecd=* | --libexec=* \
  | --libexe=* | --libex=* | --libe=*)
    libexecdir=$ac_optarg ;;

  -localedir | --localedir | --localedi | --localed | --locale)
    ac_prev=localedir ;;
  -localedir=* | --localedir=* | --localedi=* | --localed=* | --locale=*)
    localedir=$ac_optarg ;;

  -localstatedir | --localstatedir | --localstatedi | --localstated \
  | --localstate | --localstat | --localsta | --localst | --locals)
    ac_prev=localstatedir ;;
  -localstatedir=* | --localstatedir=* | --localstatedi=* | --localstated=* \
  | --localstate=* | --localstat=* | --localsta=* | --localst=* | --locals=*)
    localstatedir=$ac_optarg ;;

  -mandir | --mandir | --mandi | --mand | --man | --ma | --m)
    ac_prev=mandir ;;
  -mandir=* | --mandir=* | --mandi=* | --mand=* | --man=* | --ma=* | --m=*)
    mandir=$ac_optarg ;;

  -nfp | --nfp | --nf)
    # Obsolete; use --without-fp.
    with_fp=no ;;

  -no-create | --no-create | --no-creat | --no-crea | --no-cre \
  | --no-cr | --no-c | -n)
    no_create=yes ;;

  -no-recursion | --no-recursion | --no-recursio | --no-recursi \
  | --no-recurs | --no-recur | --no-recu | --no-rec | --no-re | --no-r)
    no_recursion=yes ;;

  -oldincludedir | --oldincludedir | --oldincludedi | --oldincluded \
  | --oldinclude | --oldinclud | --oldinclu | --oldincl | --oldinc \
  | --oldin | --oldi | --old | --ol | --o)
    ac_prev=oldincludedir ;;
  -oldincludedir=* | --oldincludedir=* | --oldincludedi=* | --oldincluded=* \
  | --oldinclude=* | --oldinclud=* | --oldinclu=* | --oldincl=* | --oldinc=* \
  | --oldin=* | --oldi=* | --old=* | --ol=* | --o=*)
    oldincludedir=$ac_optarg ;;

  -prefix | --prefix | --prefi | --pref | --pre | --pr | --p)
    ac_prev=prefix ;;
  -prefix=* | --prefix=* | --prefi=* | --pref=* | --pre=* | --pr=* | --p=*)
    prefix=$ac_optarg ;;

  -program-prefix | --program-prefix | --program-prefi | --program-pref \
  | --program-pre | --program-pr | --program-p)
    ac_prev=program_prefix ;;
  -program-prefix=* | --program-prefix=* | --program-prefi=* \
  | --program-pref=* | --program-pre=* | --program-pr=* | --program-p=*)
    program_prefix=$ac_optarg ;;

  -program-suffix | --program-suffix | --program-suffi | --program-suff \
  | --program-suf | --program-su | --program-s)
    ac_prev=program_suffix ;;
  -program-suffix=* | --program-suffix=* | --program-suffi=* \
  | --program-suff=* | --program-suf=* | --program-su=* | --program-s=*)
    program_suffix=$ac_optarg ;;

  -program-transform-name | --program-transform-name \
  | --program-transform-nam | --program-transform-na \
  | --program-transform-n | --program-transform- \
  | --program-transform | --program-transfor \
  | --program-transfo | --program-transf \
  | --program-trans | --program-tran \
  | --progr-tra | --program-tr | --program-t)
    ac_prev=program_transform_name ;;
  -program-transform-name=* | --program-transform-name=* \
  | --program-transform-nam=* | --program-transform-na=* \
  | --program-transform-n=* | --program-transform-=* \
  | --program-transform=* | --program-transfor=* \
  | --program-transfo=* | --program-transf=* \
  | --program-trans=* | --program-tran=* \
  | --progr-tra=* | --program-tr=* | --program-t=*)
    program_transform_name=$ac_optarg ;;

  -pdfdir | --pdfdir | --pdfdi | --pdfd | --pdf | --pd)
    ac_prev=pdfdir ;;
  -pdfdir=* | --pdfdir=* | --pdfdi=* | --pdfd=* | --pdf=* | --pd=*)
    pdfdir=$ac_optarg ;;

  -psdir | --psdir | --psdi | --psd | --ps)
    ac_prev=psdir ;;
  -psdir=* | --psdir=* | --psdi=* | --psd=* | --ps=*)
    psdir=$ac_optarg ;;

  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
  | -silent | --silent | --silen | --sile | --sil)
    silent=yes ;;

  -runstatedir | --runstatedir | --runstatedi | --runstated \
  | --runstate | --runstat | --runsta | --runst | --runs \
  | --run | --ru | --r)
    ac_prev=runstatedir ;;
  -runstatedir=* | --runstatedir=* | --runstatedi=* | --runstated=* \
  | --runstate=* | --runstat=* | --runsta=* | --runst=* | --runs=* \
  | --run=* | --ru=* | --r=*)
    runstatedir=$ac_optarg ;;

  -sbindir | --sbindir | --sbindi | --sbind | --sbin | --sbi | --sb)
    ac_prev=sbindir ;;
  -sbindir=* | --sbindir=* | --sbindi=* | --sbind=* | --sbin=* \
  | --sbi=* | --sb=*)
    sbindir=$ac_optarg ;;

  -sharedstatedir | --sharedstatedir | --sharedstatedi \
  | --sharedstated | --sharedstate | --sharedstat | --sharedsta \
  | --sharedst | --shareds | --shared | --share | --shar \
  | --sha | --sh)
    ac_prev=sharedstatedir ;;
  -sharedstatedir=* | --sharedstatedir=* | --sharedstatedi=* \
  | --sharedstated=* | --sharedstate=* | --sharedstat=* | --sharedsta=* \
  | --sharedst=* | --shareds=* | --shared=* | --share=* | --shar=* \
  | --sha=* | --sh=*)
    sharedstatedir=$ac_optarg ;;

  -site | --site | --sit)
    ac_prev=site ;;
  -site=* | --site=* | --sit=*)
    site=$ac_optarg ;;

  -srcdir | --srcdir | --srcdi | --srcd | --src | --sr)
    ac_prev=srcdir ;;
  -srcdir=* | --srcdir=* | --srcdi=* | --srcd=* | --src=* | --sr=*)
    srcdir=$ac_optarg ;;

  -sysconfdir | --sysconfdir | --sysconfdi | --sysconfd | --sysconf \
  | --syscon | --sysco | --sysc | --sys | --sy)
    ac_prev=sysconfdir ;;
  -sysconfdir=* | --sysconfdir=* | --sysconfdi=* | --sysconfd=* | --sysconf=* \
  | --syscon=* | --sysco=* | --sysc=* | --sys=* | --sy=*)
    sysconfdir=$ac_optarg ;;

  -target | --target | --targe | --targ | --tar | --ta | --t)
    ac_prev=target_alias ;;
  -target=* | --target=* | --targe=* | --targ=* | --tar=* | --ta=* | --t=*)
    target_alias=$ac_optarg ;;

  -v | -verbose | --verbose | --verbos | --verbo | --verb)
    verbose=yes ;;

  -version | --version | --versio | --versi | --vers | -V)
    ac_init_version=: ;;

  -with-* | --with-*)
    ac_useropt=`expr "x$ac_option" : 'x-*with-\([^=]*\)'`
    # Reject names that are not valid shell variable names.
    expr "x$ac_useropt" : ".*[^-+._$as_cr_alnum]" >/dev/null &&
      as_fn_error $? "invalid package name: '$ac_useropt'"
    ac_useropt_orig=$ac_useropt
    ac_useropt=`printf "%s\n" "$ac_useropt" | sed 's/[-+.]/_/g'`
    case $ac_user_opts in
      *"
"with_$ac_useropt"
"*) ;;
      *) ac_unrecognized_opts="$ac_unrecognized_opts$ac_unrecognized_sep--with-$ac_useropt_orig"
	 ac_unrecognized_sep=', ';;
    esac
    eval with_$ac_useropt=\$ac_optarg ;;

  -without-* | --without-*)
    ac_useropt=`expr "x$ac_option" : 'x-*without-\(.*\)'`
    # Reject names that are not valid shell variable names.
    expr "x$ac_useropt" : ".*[^-+._$as_cr_alnum]" >/dev/null &&
      as_fn_error $? "invalid package name: '$ac_useropt'"
    ac_useropt_orig=$ac_useropt
    ac_useropt=`printf "%s\n" "$ac_useropt" | sed 's/[-+.]/_/g'`
    case $ac_user_opts in
      *"
"with_$ac_useropt"
"*) ;;
      *) ac_unrecognized_opts="$ac_unrecognized_opts$ac_unrecognized_sep--without-$ac_useropt_orig"
	 ac_unrecognized_sep=', ';;
    esac
    eval with_$ac_useropt=no ;;

  --x)
    # Obsolete; use --with-x.
    with_x=yes ;;

  -x-includes | --x-includes | --x-include | --x-includ | --x-inclu \
  | --x-incl | --x-inc | --x-in | --x-i)
    ac_prev=x_includes ;;
  -x-includes=* | --x-includes=* | --x-include=* | --x-includ=* | --x-inclu=* \
  | --x-incl=* | --x-inc=* | --x-in=* | --x-i=*)
    x_includes=$ac_optarg ;;

  -x-libraries | --x-libraries | --x-librarie | --x-librari \
  | --x-librar | --x-libra | --x-libr | --x-lib | --x-li | --x-l)
    ac_prev=x_libraries ;;
  -x-libraries=* | --x-libraries=* | --x-librarie=* | --x-librari=* \
  | --x-librar=* | --x-libra=* | --x-libr=* | --x-lib=* | --x-li=* | --x-l=*)
    x_libraries=$ac_optarg ;;

  -*) as_fn_error $? "unrecognized option: '$ac_option'
Try '$0 --help' for more information"
    ;;

  *=*)
    ac_envvar=`expr "x$ac_option" : 'x\([^=]*\)='`
    # Reject names that are not valid shell variable names.
    case $ac_envvar in #(
      '' | [0-9]* | *[!_$as_cr_alnum]* )
      as_fn_error $? "invalid variable name: '$ac_envvar'" ;;
    esac
    eval $ac_envvar=\$ac_optarg
    export $ac_envvar ;;

  *)
    # FIXME: should be removed in autoconf 3.0.
    printf "%s\n" "$as_me: WARNING: you should use --build, --host, --target" >&2
    expr "x$ac_option" : ".*[^-._$as_cr_alnum]" >/dev/null &&
      printf "%s\n" "$as_me: WARNING: invalid host type: $ac_option" >&2
    : "${build_alias=$ac_option} ${host_alias=$ac_option} ${target_alias=$ac_option}"
    ;;

  esac
done

if test -n "$ac_prev"; then
  ac_option=--`echo $ac_prev | sed 's/_/-/g'`
  as_fn_error $? "missing argument to $ac_option"
fi

if test -n "$ac_unrecognized_opts"; then
  case $enable_option_checking in
    no) ;;
    fatal) as_fn_error $? "unrecognized options: $ac_unrecognized_opts" ;;
    *)     printf "%s\n" "$as_me: WARNING: unrecognized options: $ac_unrecognized_opts" >&2 ;;
  esac
fi

# Check all directory arguments for consistency.
for ac_var in	exec_prefix prefix bindir sbindir libexecdir datarootdir \
		datadir sysconfdir sharedstatedir localstatedir includedir \
		oldincludedir docdir infodir htmldir dvidir pdfdir psdir \
		libdir localedir mandir runstatedir
do
  eval ac_val=\$$ac_var
  # Remove trailing slashes.
  case $ac_val in
    */ )
      ac_val=`expr "X$ac_val" : 'X\(.*[^/]\)' \| "X$ac_val" : 'X\(.*\)'`
      eval $ac_var=\$ac_val;;
  esac
  # Be sure to have absolute directory names.
  case $ac_val in
    [\\/$]* | ?:[\\/]* )  continue;;
    NONE | '' ) case $ac_var in *prefix ) continue;; esac;;
  esac
  as_fn_error $? "expected an absolute directory name for --$ac_var: $ac_val"
done

# There might be people who depend on the old broken behavior: '$host'
# used to hold the argument of --host etc.
# FIXME: To remove some day.
build=$build_alias
host=$host_alias
target=$target_alias

# FIXME: To remove some day.
if test "x$host_alias" != x; then
  if test "x$build_alias" = x; then
    cross_compiling=maybe
  elif test "x$build_alias" != "x$host_alias"; then
    cross_compiling=yes
  fi
fi

ac_tool_prefix=
test -n "$host_alias" && ac_tool_prefix=$host_alias-

test "$silent" = yes && exec 6>/dev/null


ac_pwd=`pwd` && test -n "$ac_pwd" &&
ac_ls_di=`ls -di .` &&
ac_pwd_ls_di=`cd "$ac_pwd" && ls -di .` ||
  as_fn_error $? "working directory cannot be determined"
test "X$ac_ls_di" = "X$ac_pwd_ls_di" ||
  as_fn_error $? "pwd does not report name of working directory"


# Find the source files, if location was not specified.
if test -z "$srcdir"; then
  ac_srcdir_defaulted=yes
  # Try the directory containing this script, then the parent directory.
  ac_confdir=`$as_dirname -- "$as_myself" ||
$as_expr X"$as_myself" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_myself" : 'X\(//\)[^/]' \| \
	 X"$as_myself" : 'X\(//\)$' \| \
	 X"$as_myself" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X"$as_myself" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
  srcdir=$ac_confdir
  if test ! -r "$srcdir/$ac_unique_file"; then
    srcdir=..
  fi
else
  ac_srcdir_defaulted=no
fi
if test ! -r "$srcdir/$ac_unique_file"; then
  test "$ac_srcdir_defaulted" = yes && srcdir="$ac_confdir or .."
  as_fn_error $? "cannot find sources ($ac_unique_file) in $srcdir"
fi
ac_msg="sources are in $srcdir, but 'cd $srcdir' does not work"
ac_abs_confdir=`(
	cd "$srcdir" && test -r "./$ac_unique_file" || as_fn_error $? "$ac_msg"
	pwd)`
# When building in place, set srcdir=.
if test "$ac_abs_confdir" = "$ac_pwd"; then
  srcdir=.
fi
# Remove unnecessary trailing slashes from srcdir.
# Double slashes in file names in object file debugging info
# mess up M-x gdb in Emacs.
case $srcdir in
*/) srcdir=`expr "X$srcdir" : 'X\(.*[^/]\)' \| "X$srcdir" : 'X\(.*\)'`;;
esac
for ac_var in $ac_precious_vars; do
  eval ac_env_${ac_var}_set=\${${ac_var}+set}
  eval ac_env_${ac_var}_value=\$${ac_var}
  eval ac_cv_env_${ac_var}_set=\${${ac_var}+set}
  eval ac_cv_env_${ac_var}_value=\$${ac_var}
done

#
# Report the --help message.
#
if test "$ac_init_help" = "long"; then
  # Omit some internal or obsolete options to make the list less imposing.
  # This message is too long to be a string in the A/UX 3.1 sh.
  cat <<_ACEOF
'configure' configures wolfssl 5.6.6 to adapt to many kinds of systems.

Usage: $0 [OPTION]... [VAR=VALUE]...

To assign environment variables (e.g., CC, CFLAGS...), specify them as
VAR=VALUE.  See below for descriptions of some of the useful variables.

Defaults for the options are specified in brackets.

Configuration:
  -h, --help              display this help and exit
      --help=short        display options specific to this package
      --help=recursive    display the short help of all the included packages
  -V, --version           display version information and exit
  -q, --quiet, --silent   do not print 'checking ...' messages
      --cache-file=FILE   cache test results in FILE [disabled]
  -C, --config-cache      alias for '--cache-file=config.cache'
  -n, --no-create         do not create output files
      --srcdir=DIR        find the sources in DIR [configure dir or '..']

Installation directories:
  --prefix=PREFIX         install architecture-independent files in PREFIX
                          @<:@@S|@ac_default_prefix@:>@
  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
                          @<:@PREFIX@:>@

By default, 'make install' will install all the files in
'$ac_default_prefix/bin', '$ac_default_prefix/lib' etc.  You can specify
an installation prefix other than '$ac_default_prefix' using '--prefix',
for instance '--prefix=\$HOME'.

For better control, use the options below.

Fine tuning of the installation directories:
  --bindir=DIR            user executables [EPREFIX/bin]
  --sbindir=DIR           system admin executables [EPREFIX/sbin]
  --libexecdir=DIR        program executables [EPREFIX/libexec]
  --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]
  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]
  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]
  --runstatedir=DIR       modifiable per-process data [LOCALSTATEDIR/run]
  --libdir=DIR            object code libraries [EPREFIX/lib]
  --includedir=DIR        C header files [PREFIX/include]
  --oldincludedir=DIR     C header files for non-gcc [/usr/include]
  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]
  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]
  --infodir=DIR           info documentation [DATAROOTDIR/info]
  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]
  --mandir=DIR            man documentation [DATAROOTDIR/man]
  --docdir=DIR            documentation root @<:@DATAROOTDIR/doc/wolfssl@:>@
  --htmldir=DIR           html documentation [DOCDIR]
  --dvidir=DIR            dvi documentation [DOCDIR]
  --pdfdir=DIR            pdf documentation [DOCDIR]
  --psdir=DIR             ps documentation [DOCDIR]
_ACEOF

  cat <<\_ACEOF

Program names:
  --program-prefix=PREFIX            prepend PREFIX to installed program names
  --program-suffix=SUFFIX            append SUFFIX to installed program names
  --program-transform-name=PROGRAM   run sed PROGRAM on installed program names

System types:
  --build=BUILD     configure for building on BUILD [guessed]
  --host=HOST       cross-compile to build programs to run on HOST [BUILD]
  --target=TARGET   configure for building compilers for TARGET [HOST]
_ACEOF
fi

if test -n "$ac_init_help"; then
  case $ac_init_help in
     short | recursive ) echo "Configuration of wolfssl 5.6.6:";;
   esac
  cat <<\_ACEOF

Optional Features:
  --disable-option-checking  ignore unrecognized --enable/--with options
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --enable-distro         Enable wolfSSL distro build (default: disabled)
  --enable-threadlocal    Enable thread local support (default: enabled)
  --enable-harden-tls     Enable requirements from RFC9325. Possible values
                          are <yes>, <112>, or <128>. <yes> is equivalent to
                          <112>. (default: disabled)
  --enable-32bit          Enables 32-bit support (default: disabled)
  --enable-16bit          Enables 16-bit support (default: disabled)
  --enable-64bit          Enables 64-bit support (default: disabled)
  --enable-kdf            Enables kdf support (default: enabled)
  --enable-hmac           Enables HMAC support (default: enabled)
  --enable-do178          Enable DO-178, Will NOT work w/o DO178 license
                          (default: disabled)
  --enable-asm            Enables option for assembly (default: enabled)
  --enable-fips           Enable FIPS 140-2, Will NOT work w/o FIPS license
                          (default: disabled)
  --enable-engine         Enable wolfEngine options (default: disabled)
  --enable-reproducible-build 
                          Enable maximally reproducible build (default:
                          disabled)
  --enable-benchmark      Build benchmark when building crypttests (default:
                          enabled)
  --enable-linuxkm        Enable Linux Kernel Module (default: disabled)
  --enable-linuxkm-defaults 
                          Enable feature defaults for Linux Kernel Module
                          (default: disabled)
  --enable-linuxkm-pie    Enable relocatable object build of Linux kernel
                          module (default: disabled)
  --enable-linuxkm-benchmarks 
                          Enable crypto benchmarking autorun at module load
                          time for Linux kernel module (default: disabled)
  --enable-sp             Enable Single Precision maths implementation
                          (default: disabled)
  --enable-sp-math-all    Enable Single Precision math implementation for full
                          algorithm suite (default: enabled)
  --enable-sp-math        Enable Single Precision math implementation with
                          restricted algorithm suite (default: disabled)
  --enable-sp-asm         Enable Single Precision assembly implementation
                          (default: enabled on x86_64/aarch64/amd64)
  --enable-fastmath       Enable fast math ops (default: disabled)
  --enable-fasthugemath   Enable fast math + huge code (default: disabled)
  --enable-heapmath       Enable heap based integer.c math ops (default:
                          disabled)
  --enable-all            Enable all wolfSSL features, except SSLv3 (default:
                          disabled)
  --enable-all-crypto     Enable all wolfcrypt algorithms (default: disabled)
  --enable-kyber          Enable KYBER (default: disabled)
  --enable-xmss           Enable stateful XMSS/XMSS^MT signatures (default:
                          disabled)
  --enable-lms            Enable stateful LMS/HSS signatures (default:
                          disabled)
  --enable-singlethreaded Enable wolfSSL single threaded (default: disabled)
  --enable-rwlock         Enable use of rwlock (default: disabled)
  --enable-cryptonly      Enable wolfCrypt Only build (default: disabled)
  --enable-ech            Enable ECH (default: disabled)
  --enable-dtls           Enable wolfSSL DTLS (default: disabled)
  --enable-dtls-mtu       Enable setting the MTU size for wolfSSL DTLS
                          (default: disabled)
  --enable-keylog-export  Enable insecure export of TLS secrets to an NSS
                          keylog file (default: disabled)
  --enable-tls13-draft18  Enable wolfSSL TLS v1.3 Draft 18 (default: disabled)
  --enable-tls13          Enable wolfSSL TLS v1.3 (default: enabled)
  --enable-quic           Enable QUIC API with wolfSSL TLS v1.3 (default:
                          disabled)
  --enable-postauth       Enable wolfSSL Post-handshake Authentication
                          (default: disabled)
  --enable-hrrcookie      Enable the server to send Cookie Extension in HRR
                          with state (default: disabled)
  --enable-rng            Enable compiling and using RNG (default: enabled)
  --enable-sctp           Enable wolfSSL DTLS-SCTP support (default: disabled)
  --enable-srtp           Enable wolfSSL DTLS-SRTP support (default: disabled)
  --enable-mcast          Enable wolfSSL DTLS multicast support (default:
                          disabled)
  --enable-bind           Enable Bind DNS compatibility build (default:
                          disabled)
  --enable-libssh2        Enable libssh2 compatibility build (default:
                          disabled)
  --enable-openssh        Enable OpenSSH compatibility build (default:
                          disabled)
  --enable-openvpn        Enable OpenVPN compatibility build (default:
                          disabled)
  --enable-openresty      Enable openresty (default: disabled)
  --enable-nginx          Enable nginx (default: disabled)
  --enable-chrony         Enable chrony support (default: disabled)
  --enable-openldap       Enable OpenLDAP support (default: disabled)
  --enable-lighty         Enable lighttpd/lighty (default: disabled)
  --enable-rsyslog        Enable rsyslog (default: disabled)
  --enable-haproxy        Enable haproxy (default: disabled)
  --enable-wpas           Enable wpa_supplicant support (default: disabled)
  --enable-wpas-dpp       Enable wpa_supplicant support with dpp (default:
                          disabled)
  --enable-ntp            Enable ntp support (default: disabled)
  --enable-fortress       Enable SSL fortress build (default: disabled)
  --enable-libwebsockets  Enable libwebsockets (default: disabled)
  --enable-net-snmp       Enable net-snmp (default: disabled)
  --enable-krb            Enable kerberos 5 support (default: disabled)
  --enable-ffmpeg         Enable FFmpeg support (default: disabled)
  --enable-ip-alt-name    Enable IP subject alternative name (default:
                          disabled)
  --enable-qt             Enable qt (default: disabled)
  --enable-bump           Enable SSL Bump build (default: disabled)
  --enable-sniffer        Enable wolfSSL sniffer support (default: disabled)
  --enable-signal         Enable signal (default: disabled)
  --enable-strongswan     Enable strongSwan support (default: disabled)
  --enable-hitch          Enable hitch support (default: disabled)
  --enable-memcached      Enable memcached support (default: disabled)
  --enable-opensslcoexist Enable coexistence of wolfssl/openssl (default:
                          disabled)
  --enable-smime          Enable S/MIME (default: disabled)
  --enable-psa            use Platform Security Architecture (PSA) interface
                          (default: disabled)
  --enable-psa-lib-static Link PSA as static library (default: disable)
  --enable-opensslall     Enable all OpenSSL API, size++ (default: disabled)
  --enable-opensslextra   Enable extra OpenSSL API, size+ (default: disabled)
  --enable-error-queue-per-thread 
                          Enable one error queue per thread. Requires thread
                          local storage. (default: disabled)
  --enable-maxstrength    Enable Max Strength build, allows TLSv1.2-AEAD-PFS
                          ciphers only (default: disabled)
  --enable-harden         Enable Hardened build, Enables Timing Resistance and
                          Blinding (default: enabled)
  --enable-ipv6           Enable testing of IPV6 (default: disabled)
  --enable-leanpsk        Enable Lean PSK build (default: disabled)
  --enable-leantls        Enable Lean TLS build (default: disabled)
  --enable-lowresource    Enable low resource options for memory/flash
                          (default: disabled)
  --enable-titancache     Enable titan session cache (default: disabled)
  --enable-hugecache      Enable huge session cache (default: disabled)
  --enable-bigcache       Enable big session cache (default: disabled)
  --enable-smallcache     Enable small session cache (default: disabled)
  --enable-savesession    Enable persistent session cache (default: disabled)
  --enable-savecert       Enable persistent cert cache (default: disabled)
  --enable-writedup       Enable write duplication of WOLFSSL objects
                          (default: disabled)
  --enable-atomicuser     Enable Atomic User Record Layer (default: disabled)
  --enable-pkcallbacks    Enable Public Key Callbacks (default: disabled)
  --enable-aescbc         Enable wolfSSL AES-CBC support (default: enabled)
  --enable-aescbc-length-checks 
                          Enable AES-CBC length validity checks (default:
                          disabled)
  --enable-aesgcm         Enable wolfSSL AES-GCM support (default: enabled)
  --enable-aesgcm-stream  Enable wolfSSL AES-GCM support with streaming APIs
                          (default: disabled)
  --enable-aesccm         Enable wolfSSL AES-CCM support (default: disabled)
  --enable-aeseax         Enable wolfSSL AES-EAX support (default: disabled)
  --enable-aessiv         Enable AES-SIV (RFC 5297) (default: disabled)
  --enable-aesctr         Enable wolfSSL AES-CTR support (default: disabled)
  --enable-aesofb         Enable wolfSSL AES-OFB support (default: disabled)
  --enable-aescfb         Enable wolfSSL AES-CFB support (default: disabled)
  --enable-aes-bitsliced  Enable bitsliced implementation of AES (default:
                          disabled)
  --enable-sm4-ecb        Enable wolfSSL SM4-ECB support (default: disabled)
  --enable-sm4-cbc        Enable wolfSSL SM4-CBC support (default: disabled)
  --enable-sm4-ctr        Enable wolfSSL SM4-CTR support (default: disabled)
  --enable-sm4-gcm        Enable wolfSSL SM4-GCM support (default: disabled)
  --enable-sm4-ccm        Enable wolfSSL SM4-CCM support (default: disabled)
  --enable-armasm         Enable wolfSSL ARMv8 ASM support (default:
                          disabled). Set to sha512-crypto or sha3-crypto to
                          use SHA512 and SHA3 instructions with Aarch64 CPU.
  --enable-xilinx         Enable wolfSSL support for Xilinx hardened
                          crypto(default: disabled)
  --enable-aria           Enable wolfSSL support for ARIA (default: disabled)
  --enable-caam           Enable wolfSSL support for CAAM (default: disabled)
  --enable-aesni          Enable wolfSSL AES-NI support (default: disabled)
  --enable-intelasm       Enable All Intel ASM speedups (default: disabled)
  --enable-aligndata      align data for ciphers (default: enabled)
  --enable-intelrand      Enable Intel rdrand as preferred RNG source
                          (default: disabled)
  --enable-amdrand        Enable AMD rdseed as preferred RNG seeding source
                          (default: disabled)
  --enable-afalg          Enable Linux af_alg use for crypto (default:
                          disabled)
  --enable-kcapi-hash     Enable libkcapi use for hashing (default: disabled)
  --enable-kcapi-hmac     Enable libkcapi use for HMAC (default: disabled)
  --enable-kcapi-aes      Enable libkcapi use for AES (default: disabled)
  --enable-kcapi-rsa      Enable libkcapi use for RSA (default: disabled)
  --enable-kcapi-dh       Enable libkcapi use for DH (default: disabled)
  --enable-kcapi-ecc      Enable libkcapi use for ECC (default: disabled)
  --enable-kcapi          Enable libkcapi use for crypto (default: disabled)
  --enable-devcrypto      Enable Linux dev crypto calls: all | aes (all aes
                          support) | hash (all hash algos) | cbc (aes-cbc
                          only) (default: disabled)
  --enable-camellia       Enable wolfSSL Camellia support (default: disabled)
  --enable-md2            Enable wolfSSL MD2 support (default: disabled)
  --enable-nullcipher     Enable wolfSSL NULL cipher support (default:
                          disabled)
  --enable-ripemd         Enable wolfSSL RIPEMD-160 support (default:
                          disabled)
  --enable-blake2         Enable wolfSSL BLAKE2b support (default: disabled)
  --enable-blake2s        Enable wolfSSL BLAKE2s support (default: disabled)
  --enable-sha224         Enable wolfSSL SHA-224 support (default: enabled on
                          x86_64/amd64/aarch64)
  --enable-sha3           Enable wolfSSL SHA-3 support (default: enabled on
                          x86_64/amd64/aarch64)
  --enable-shake128       Enable wolfSSL SHAKE128 support (default: disabled)
  --enable-shake256       Enable wolfSSL SHAKE256 support (default: disabled)
  --enable-sha512         Enable wolfSSL SHA-512 support (default: enabled)
  --enable-sha384         Enable wolfSSL SHA-384 support (default: enabled)
  --enable-sm3            Enable wolfSSL SM3 support (default: disabled)
  --enable-sessioncerts   Enable session cert storing (default: disabled)
  --enable-keygen         Enable key generation (default: disabled)
  --enable-certgen        Enable cert generation (default: disabled)
  --enable-certreq        Enable cert request generation (default: disabled)
  --enable-certext        Enable cert request extensions (default: disabled)
  --enable-certgencache   Enable decoded cert caching (default: disabled)
  --enable-sep            Enable sep extensions (default: disabled)
  --enable-hkdf           Enable HKDF (HMAC-KDF) support (default: disabled)
  --enable-hpke           Enable HKPE support (default: disabled)
  --enable-x963kdf        Enable X9.63 KDF support (default: disabled)
  --enable-srtp-kdf       Enable SRTP-KDF support (default: disabled)
  --enable-dsa            Enable DSA (default: disabled)
  --enable-eccshamir      Enable ECC Shamir (default: enabled)
  --enable-ecc            Enable ECC (default: enabled)
  --enable-sm2            Enable wolfSSL SM2 support (default: disabled)
  --enable-ecccustcurves  Enable ECC custom curves (default: disabled)
  --enable-compkey        Enable compressed keys support (default: disabled)
  --enable-brainpool      Enable Brainpool ECC curves (default: enabled with
                          ECC custom curves)
  --enable-curve25519     Enable Curve25519 (default: disabled)
  --enable-ed25519        Enable ED25519 (default: disabled)
  --enable-ed25519-stream Enable wolfSSL ED25519 support with streaming verify
                          APIs (default: disabled)
  --enable-curve448       Enable Curve448 (default: disabled)
  --enable-ed448          Enable ED448 (default: disabled)
  --enable-ed448-stream   Enable wolfSSL ED448 support with streaming verify
                          APIs (default: disabled)
  --enable-fpecc          Enable Fixed Point cache ECC (default: disabled)
  --enable-eccencrypt     Enable ECC encrypt (default: disabled). yes = SEC1
                          standard, geniv = Generate IV, iso18033 = ISO 18033
                          standard, old = original wolfSSL algorithm
  --enable-eccsi          Enable ECCSI (default: disabled)
  --enable-sakke          Enable SAKKE - paring based crypto (default:
                          disabled)
  --enable-psk            Enable PSK (default: disabled)
  --enable-psk-one-id     Enable PSK (default: disabled)
  --enable-errorstrings   Enable error strings table (default: enabled)
  --enable-errorqueue     Disables adding nodes to error queue when compiled
                          with OPENSSL_EXTRA (default: enabled)
  --enable-sslv3          Enable SSL version 3.0 (default: disabled)
  --enable-tlsv10         Enable old TLS versions 1.0 (default: disabled)
  --enable-oldtls         Enable old TLS versions < 1.2 (default: disabled)
  --enable-tlsv12         Enable TLS versions 1.2 (default: enabled)
  --enable-stacksize      Enable stack size info on examples (default:
                          disabled)
  --enable-memory         Enable memory callbacks (default: enabled)
  --enable-trackmemory    Enable memory use info on wolfCrypt and wolfSSL
                          cleanup (default: disabled)
  --enable-memorylog      Enable dynamic memory logging (default: disabled)
  --enable-stacklog       Enable stack logging (default: disabled)
  --enable-wolfsentry     Enable wolfSentry hooks and plugins (default:
                          disabled)
  --enable-qt-test        Enable qt tests (default: disabled)
  --enable-rsa            Enable RSA (default: enabled)
  --enable-oaep           Enable RSA OAEP (default: enabled)
  --enable-rsapub         Enable RSA Public Only (default: disabled)
  --enable-rsavfy         Enable RSA Verify Inline Only (default: disabled)
  --enable-rsapss         Enable RSA-PSS (default: disabled)
  --enable-dh             Enable DH (default: enabled)
  --enable-anon           Enable Anonymous (default: disabled)
  --enable-asn            Enable ASN (default: enabled)
  --enable-asn-print      Enable ASN Print API (default: enabled)
  --enable-aes            Enable AES (default: enabled)
  --enable-dtls13         Enable wolfSSL DTLS v1.3 (default: disabled)
  --enable-dtlscid        Enable wolfSSL DTLS ConnectionID (default: disabled)
  --enable-dtls-frag-ch   Enable wolfSSL DTLS 1.3 ClientHello fragmenting
                          (default: disabled)
  --enable-coding         Enable Coding base 16/64 (default: enabled)
  --enable-base64encode   Enable Base64 encoding (default: enabled on
                          x86_64/amd64)
  --enable-base16         Enable Base16 encoding/decoding (default: disabled)
  --enable-md4            Enable MD4 (default: disabled)
  --enable-des3           Enable DES3 (default: disabled)
  --enable-arc4           Enable ARC4 (default: disabled)
  --enable-md5            Enable MD5 (default: enabled)
  --enable-sha            Enable SHA (default: enabled)
  --enable-siphash        Enable SipHash (default: disabled)
  --enable-cmac           Enable CMAC (default: disabled)
  --enable-aesxts         Enable AES XTS (default: disabled)
  --enable-xts            Please use --enable-aesxts
  --enable-webserver      Enable Web Server (default: disabled)
  --enable-webclient      Enable Web Client (HTTP) (default: disabled)
  --enable-rc2            Enable RC2 encryption (default: disabled)
  --enable-selftest       Enable selftest, Will NOT work w/o CAVP selftest
                          license (default: disabled)
  --enable-poly1305       Enable wolfSSL POLY1305 support (default: enabled)
  --enable-chacha         Enable CHACHA (default: enabled). Use `=noasm` to
                          disable ASM AVX/AVX2 speedups
  --enable-xchacha        Enable XCHACHA (default: disabled).
  --enable-hashdrbg       Enable Hash DRBG support (default: enabled)
  --enable-entropy-memuse Enable memuse entropy support (default: disabled)
  --enable-filesystem     Enable Filesystem support (default: enabled)
  --enable-inline         Enable inline functions (default: enabled)
  --enable-ocsp           Enable OCSP (default: disabled)
  --enable-ocspstapling   Enable OCSP Stapling (default: disabled)
  --enable-ocspstapling2  Enable OCSP Stapling v2 (default: disabled)
  --enable-crl            Enable CRL (Use =io for inline CRL HTTP GET)
                          (default: disabled)
  --enable-crl-monitor    Enable CRL Monitor (default: disabled)
  --enable-sni            Enable SNI (default: enabled on
                          x86_64/x86/aarch64/amd64)
  --enable-maxfragment    Enable Maximum Fragment Length (default: disabled)
  --enable-alpn           Enable ALPN (default: disabled)
  --enable-trustedca      Enable Trusted CA Indication (default: disabled)
  --enable-truncatedhmac  Enable Truncated HMAC (default: disabled)
  --enable-renegotiation-indication 
                          Enable Renegotiation Indication for client via empty
                          cipher (default: disabled)
  --enable-secure-renegotiation 
                          Enable Secure Renegotiation (default: disabled)
  --enable-secure-renegotiation-info 
                          Enable Secure Renegotiation info extension (default:
                          enabled)
  --enable-fallback-scsv  Enable Fallback SCSV (default: disabled)
  --enable-keying-material 
                          Enable Keying Material Exporters (default: disabled)
  --enable-supportedcurves 
                          Enable Supported Elliptic Curves (default: enabled)
  --enable-ffdhe-only     Enable using only FFDHE in client (default:
                          disabled)
  --enable-session-ticket Enable Session Ticket (default: disabled)
  --enable-ticket-nonce-malloc 
                          Enable dynamic allocation of ticket nonces (default:
                          disabled)
  --enable-extended-master 
                          Enable Extended Master Secret (default: enabled)
  --enable-tlsx           Enable all TLS Extensions (default: disabled)
  --enable-earlydata      Enable Early Data handshake with wolfSSL TLS v1.3
                          (default: disabled)
  --enable-pkcs7          Enable PKCS7 (default: disabled)
  --enable-wolfssh        Enable wolfSSH options (default: disabled)
  --enable-ssh            Enable wolfSSH options (default: disabled)
  --enable-wolftpm        Enable wolfTPM options (default: disabled)
  --enable-wolfclu        Enable wolfCLU options (default: disabled)
  --enable-scep           Enable wolfSCEP (default: disabled)
  --enable-srp            Enable Secure Remote Password (default: disabled)
  --enable-indef          Enable parsing of indefinite length encoded msgs
                          (default: disabled)
  --enable-altcertchains  Enable using alternative certificate chains, only
                          require leaf certificate to validate to trust root
                          (default: disabled)
  --enable-smallstackcache 
                          Enable Small Stack Usage Caching (default: disabled)
  --enable-smallstack     Enable Small Stack Usage (default: disabled)
  --enable-valgrind       Enable valgrind for unit tests (default: disabled)
  --enable-testcert       Enable Test Cert (default: disabled)
  --enable-iopool         Enable I/O Pool example (default: disabled)
  --enable-certservice    Enable cert service (default: disabled)
  --enable-jni            Enable wolfSSL JNI (default: disabled)
  --enable-asio           Enable asio (default: disabled)
  --enable-apachehttpd    Enable Apache httpd (default: disabled)
  --enable-enc-then-mac   Enable Encrypt-Then-Mac extension (default: enabled)
  --enable-stunnel        Enable stunnel (default: disabled)
  --enable-curl           Enable curl (default: disabled)
  --enable-tcpdump        Enable tcpdump (default: disabled)
  --enable-sblim-sfcb     Enable sblim-sfcb support (default: disabled)
  --enable-libest         Enable libest (default: disabled)
  --enable-enckeys        Enable PEM encrypted private key support (default:
                          disabled)
  --enable-pkcs12         Enable pkcs12 (default: enabled)
  --enable-pwdbased       Enable PWDBASED (default: disabled)
  --enable-scrypt         Enable SCRYPT (default: disabled)
  --enable-examples       Enable Examples (default: enabled)
  --enable-crypttests     Enable Crypt Bench/Test (default: enabled)
  --enable-crypttests-libs 
                          Enable wolfcrypt test and benchmark libraries
                          (default: disabled)
  --enable-pkcs11         Enable pkcs11 access (default: disabled)
  --enable-pkcs8          Enable PKCS @%:@8 key packages (default: enabled)
  --enable-staticmemory   Enable static memory use (default: disabled)
  --enable-mcapi          Enable Microchip API (default: disabled)
  --enable-cryptodev      DEPRECATED, use cryptocb instead
  --enable-cryptocb       Enable crypto callbacks (default: disabled)
  --enable-asynccrypt     Enable Asynchronous Crypto (default: disabled)
  --enable-asynccrypt-sw  Enable asynchronous software-based crypto (default:
                          disabled)
  --enable-asyncthreads   Enable Asynchronous Threading (default: enabled)
  --enable-sessionexport  Enable export and import of sessions (default:
                          disabled)
  --enable-aeskeywrap     Enable AES key wrap support (default: disabled)
  --enable-oldnames       Keep backwards compat with old names (default:
                          enabled)
  --enable-memtest        Memory testing option, for internal use (default:
                          disabled)
  --enable-hashflags      Enable support for hash flags (default: disabled)
  --enable-defaultdhparams 
                          Enables option for default dh parameters (default:
                          disabled)
  --enable-linuxkm-lkcapi-register 
                          Register wolfCrypt implementations with the Linux
                          Kernel Crypto API backplane. Possible values are
                          "none", "all", "cbc(aes)", "cfb(aes)", "gcm(aes)",
                          and "xts(aes)", or a comma-separate combination.
                          (default: none)
  --enable-context-extra-user-data 
                          Enables option for storing user-defined data in TLS
                          API contexts, with optional argument the number of
                          slots to allocate (default: disabled)
  --enable-iotsafe        Enables support for IoT-Safe secure applet (default:
                          disabled)
  --enable-iotsafe-hwrng  Enables support for IoT-Safe RNG (default: disabled)
  --enable-makeclean      Enables forced "make clean" at the end of configure
                          (default: enabled)
  --enable-usersettings   Use your own user_settings.h and do not add Makefile
                          CFLAGS (default: disabled)
  --enable-optflags       Enable default optimization CFLAGS for the compiler
                          (default: enabled)
  --enable-sys-ca-certs   Enable ability to load CA certs from OS (default:
                          enabled)
  --enable-dual-alg-certs Enable support for dual key/signature certificates
                          in TLS 1.3 as defined in X9.146 (default: disabled)
  --disable-openssl-compatible-defaults 
                          Disable OpenSSL compatible defaults when enabled by
                          other options (default: enabled)

Optional Packages:
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
  --with-linux-source=PATH 
                          PATH to root of Linux kernel build tree
  --with-linux-arch=arch  built arch (SRCARCH) of Linux kernel build tree
  --with-liboqs=PATH      Path to liboqs install (default /usr/local)
                          EXPERIMENTAL!
  --with-libxmss=PATH     PATH to xmss-reference root dir. EXPERIMENTAL!
  --with-liblms=PATH      PATH to hash-sigs LMS/HSS install (default
                          /usr/local) EXPERIMENTAL!
  --with-psa-include=PATH PATH to directory with PSA header files
  --with-psa-lib=PATH     PATH to directory with the PSA library
  --with-psa-lib-name=NAME 
                          NAME of PSA library
  --with-maxq10xx=PART    MAXQ10XX PART Number
  --with-cryptoauthlib=PATH 
                          PATH to CryptoAuthLib install (default /usr/)
  --with-se050=PATH       PATH to SE050 install (default /usr/local)
  --with-seco=PATH        PATH to SECO install (default /usr/lib/)
  --with-eccminsz=BITS    Sets the ECC minimum key size (default: 224 bits)
  --with-wolfsentry=PATH  PATH to directory with wolfSentry installation
  --with-wolfsentry-lib=PATH 
                          PATH to directory with wolfSentry library
  --with-wolfsentry-include=PATH 
                          PATH to directory with wolfSentry header files
  --with-wnr=PATH         Path to Whitewood netRandom install (default
                          /usr/local)
  --with-libz=PATH        PATH to libz install (default /usr/) 
  --with-cavium=PATH      PATH to cavium/software dir 
  --with-cavium-v=PATH    PATH to Cavium V/software dir 
  --with-octeon-sync=PATH PATH to Cavium Octeon SDK dir (sync)
  --with-intelqa=PATH     PATH to Intel QuickAssist (QAT) driver dir
  --with-intelqa-sync=PATH 
                          PATH to Intel QuickAssist (QAT) driver dir (sync)
  --with-arm-target=x     x can be "thumb" or "cortex"
  --with-max-rsa-bits=number 
                          number of bits to support for RSA, DH, and DSA keys
  --with-max-ecc-bits=number 
                          number of bits to support for ECC algorithms
  --with-libsuffix=SUFFIX Library artifact SUFFIX, ie libwolfsslSUFFIX.so

Some influential environment variables:
  CC          C compiler command
  CFLAGS      C compiler flags
  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
              nonstandard directory <lib dir>
  LIBS        libraries to pass to the linker, e.g. -l<library>
  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if
              you have headers in a nonstandard directory <include dir>
  EXTRA_CPPFLAGS 
              Extra CPPFLAGS to add to end of autoconf-computed arg list. Can
              also supply directly to make.
  EXTRA_CFLAGS 
              Extra CFLAGS to add to end of autoconf-computed arg list. Can
              also supply directly to make.
  EXTRA_CCASFLAGS 
              Extra CCASFLAGS to add to end of autoconf-computed arg list. Can
              also supply directly to make.
  EXTRA_LDFLAGS 
              Extra LDFLAGS to add to end of autoconf-computed arg list. Can
              also supply directly to make.

Use these variables to override the choices made by 'configure' or to help
it to find libraries and programs with nonstandard names/locations.

Report bugs to <https://github.com/wolfssl/wolfssl/issues>.
wolfssl home page: <https://www.wolfssl.com>.
_ACEOF
ac_status=$?
fi

if test "$ac_init_help" = "recursive"; then
  # If there are subdirs, report their specific --help.
  for ac_dir in : $ac_subdirs_all; do test "x$ac_dir" = x: && continue
    test -d "$ac_dir" ||
      { cd "$srcdir" && ac_pwd=`pwd` && srcdir=. && test -d "$ac_dir"; } ||
      continue
    ac_builddir=.

case "$ac_dir" in
.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
*)
  ac_dir_suffix=/`printf "%s\n" "$ac_dir" | sed 's|^\.[\\/]||'`
  # A ".." for each directory in $ac_dir_suffix.
  ac_top_builddir_sub=`printf "%s\n" "$ac_dir_suffix" | sed 's|/[^\\/]*|/..|g;s|/||'`
  case $ac_top_builddir_sub in
  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
  esac ;;
esac
ac_abs_top_builddir=$ac_pwd
ac_abs_builddir=$ac_pwd$ac_dir_suffix
# for backward compatibility:
ac_top_builddir=$ac_top_build_prefix

case $srcdir in
  .)  # We are building in place.
    ac_srcdir=.
    ac_top_srcdir=$ac_top_builddir_sub
    ac_abs_top_srcdir=$ac_pwd ;;
  [\\/]* | ?:[\\/]* )  # Absolute name.
    ac_srcdir=$srcdir$ac_dir_suffix;
    ac_top_srcdir=$srcdir
    ac_abs_top_srcdir=$srcdir ;;
  *) # Relative name.
    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
    ac_top_srcdir=$ac_top_build_prefix$srcdir
    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
esac
ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix

    cd "$ac_dir" || { ac_status=$?; continue; }
    # Check for configure.gnu first; this name is used for a wrapper for
    # Metaconfig's "Configure" on case-insensitive file systems.
    if test -f "$ac_srcdir/configure.gnu"; then
      echo &&
      $SHELL "$ac_srcdir/configure.gnu" --help=recursive
    elif test -f "$ac_srcdir/configure"; then
      echo &&
      $SHELL "$ac_srcdir/configure" --help=recursive
    else
      printf "%s\n" "$as_me: WARNING: no configuration information is in $ac_dir" >&2
    fi || ac_status=$?
    cd "$ac_pwd" || { ac_status=$?; break; }
  done
fi

test -n "$ac_init_help" && exit $ac_status
if $ac_init_version; then
  cat <<\_ACEOF
wolfssl configure 5.6.6
generated by GNU Autoconf 2.72

Copyright (C) 2023 Free Software Foundation, Inc.
This configure script is free software; the Free Software Foundation
gives unlimited permission to copy, distribute and modify it.

Copyright (C) 2006-2023 wolfSSL Inc.
_ACEOF
  exit
fi

## ------------------------ ##
## Autoconf initialization. ##
## ------------------------ ##

@%:@ ac_fn_c_try_compile LINENO
@%:@ --------------------------
@%:@ Try to compile conftest.@S|@ac_ext, and return whether this succeeded.
ac_fn_c_try_compile ()
{
  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
  rm -f conftest.$ac_objext conftest.beam
  if { { ac_try="$ac_compile"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
printf "%s\n" "$ac_try_echo"; } >&5
  (eval "$ac_compile") 2>conftest.err
  ac_status=$?
  if test -s conftest.err; then
    grep -v '^ *+' conftest.err >conftest.er1
    cat conftest.er1 >&5
    mv -f conftest.er1 conftest.err
  fi
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; } && {
	 test -z "$ac_c_werror_flag" ||
	 test ! -s conftest.err
       } && test -s conftest.$ac_objext
then :
  ac_retval=0
else case e in @%:@(
  e) printf "%s\n" "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

	ac_retval=1 ;;
esac
fi
  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno
  as_fn_set_status $ac_retval

} @%:@ ac_fn_c_try_compile

@%:@ ac_fn_c_try_run LINENO
@%:@ ----------------------
@%:@ Try to run conftest.@S|@ac_ext, and return whether this succeeded. Assumes that
@%:@ executables *can* be run.
ac_fn_c_try_run ()
{
  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
  if { { ac_try="$ac_link"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
printf "%s\n" "$ac_try_echo"; } >&5
  (eval "$ac_link") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; } && { ac_try='./conftest$ac_exeext'
  { { case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
printf "%s\n" "$ac_try_echo"; } >&5
  (eval "$ac_try") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :
  ac_retval=0
else case e in @%:@(
  e) printf "%s\n" "$as_me: program exited with status $ac_status" >&5
       printf "%s\n" "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

       ac_retval=$ac_status ;;
esac
fi
  rm -rf conftest.dSYM conftest_ipa8_conftest.oo
  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno
  as_fn_set_status $ac_retval

} @%:@ ac_fn_c_try_run

@%:@ ac_fn_c_compute_int LINENO EXPR VAR INCLUDES
@%:@ --------------------------------------------
@%:@ Tries to find the compile-time value of EXPR in a program that includes
@%:@ INCLUDES, setting VAR accordingly. Returns whether the value could be
@%:@ computed
ac_fn_c_compute_int ()
{
  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
  if test "$cross_compiling" = yes; then
    # Depending upon the size, compute the lo and hi bounds.
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$4
int
main (void)
{
static int test_array @<:@1 - 2 * !(($2) >= 0)@:>@;
test_array @<:@0@:>@ = 0;
return test_array @<:@0@:>@;

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  ac_lo=0 ac_mid=0
  while :; do
    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$4
int
main (void)
{
static int test_array @<:@1 - 2 * !(($2) <= $ac_mid)@:>@;
test_array @<:@0@:>@ = 0;
return test_array @<:@0@:>@;

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  ac_hi=$ac_mid; break
else case e in @%:@(
  e) as_fn_arith $ac_mid + 1 && ac_lo=$as_val
			if test $ac_lo -le $ac_mid; then
			  ac_lo= ac_hi=
			  break
			fi
			as_fn_arith 2 '*' $ac_mid + 1 && ac_mid=$as_val ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
  done
else case e in @%:@(
  e) cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$4
int
main (void)
{
static int test_array @<:@1 - 2 * !(($2) < 0)@:>@;
test_array @<:@0@:>@ = 0;
return test_array @<:@0@:>@;

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  ac_hi=-1 ac_mid=-1
  while :; do
    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$4
int
main (void)
{
static int test_array @<:@1 - 2 * !(($2) >= $ac_mid)@:>@;
test_array @<:@0@:>@ = 0;
return test_array @<:@0@:>@;

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  ac_lo=$ac_mid; break
else case e in @%:@(
  e) as_fn_arith '(' $ac_mid ')' - 1 && ac_hi=$as_val
			if test $ac_mid -le $ac_hi; then
			  ac_lo= ac_hi=
			  break
			fi
			as_fn_arith 2 '*' $ac_mid && ac_mid=$as_val ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
  done
else case e in @%:@(
  e) ac_lo= ac_hi= ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
# Binary search between lo and hi bounds.
while test "x$ac_lo" != "x$ac_hi"; do
  as_fn_arith '(' $ac_hi - $ac_lo ')' / 2 + $ac_lo && ac_mid=$as_val
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$4
int
main (void)
{
static int test_array @<:@1 - 2 * !(($2) <= $ac_mid)@:>@;
test_array @<:@0@:>@ = 0;
return test_array @<:@0@:>@;

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  ac_hi=$ac_mid
else case e in @%:@(
  e) as_fn_arith '(' $ac_mid ')' + 1 && ac_lo=$as_val ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
done
case $ac_lo in @%:@((
?*) eval "$3=\$ac_lo"; ac_retval=0 ;;
'') ac_retval=1 ;;
esac
  else
    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$4
static long int longval (void) { return $2; }
static unsigned long int ulongval (void) { return $2; }
@%:@include <stdio.h>
@%:@include <stdlib.h>
int
main (void)
{

  FILE *f = fopen ("conftest.val", "w");
  if (! f)
    return 1;
  if (($2) < 0)
    {
      long int i = longval ();
      if (i != ($2))
	return 1;
      fprintf (f, "%ld", i);
    }
  else
    {
      unsigned long int i = ulongval ();
      if (i != ($2))
	return 1;
      fprintf (f, "%lu", i);
    }
  /* Do not output a trailing newline, as this causes \r\n confusion
     on some platforms.  */
  return ferror (f) || fclose (f) != 0;

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_run "$LINENO"
then :
  echo >>conftest.val; read $3 <conftest.val; ac_retval=0
else case e in @%:@(
  e) ac_retval=1 ;;
esac
fi
rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
  conftest.$ac_objext conftest.beam conftest.$ac_ext
rm -f conftest.val

  fi
  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno
  as_fn_set_status $ac_retval

} @%:@ ac_fn_c_compute_int

@%:@ ac_fn_c_check_header_compile LINENO HEADER VAR INCLUDES
@%:@ -------------------------------------------------------
@%:@ Tests whether HEADER exists and can be compiled using the include files in
@%:@ INCLUDES, setting the cache variable VAR accordingly.
ac_fn_c_check_header_compile ()
{
  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $2" >&5
printf %s "checking for $2... " >&6; }
if eval test \${$3+y}
then :
  printf %s "(cached) " >&6
else case e in @%:@(
  e) cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$4
@%:@include <$2>
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  eval "$3=yes"
else case e in @%:@(
  e) eval "$3=no" ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext ;;
esac
fi
eval ac_res=\$$3
	       { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
printf "%s\n" "$ac_res" >&6; }
  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno

} @%:@ ac_fn_c_check_header_compile

@%:@ ac_fn_c_check_type LINENO TYPE VAR INCLUDES
@%:@ -------------------------------------------
@%:@ Tests whether TYPE exists after having included INCLUDES, setting cache
@%:@ variable VAR accordingly.
ac_fn_c_check_type ()
{
  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $2" >&5
printf %s "checking for $2... " >&6; }
if eval test \${$3+y}
then :
  printf %s "(cached) " >&6
else case e in @%:@(
  e) eval "$3=no"
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$4
int
main (void)
{
if (sizeof ($2))
	 return 0;
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$4
int
main (void)
{
if (sizeof (($2)))
	    return 0;
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  
else case e in @%:@(
  e) eval "$3=yes" ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext ;;
esac
fi
eval ac_res=\$$3
	       { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
printf "%s\n" "$ac_res" >&6; }
  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno

} @%:@ ac_fn_c_check_type

@%:@ ac_fn_c_try_link LINENO
@%:@ -----------------------
@%:@ Try to link conftest.@S|@ac_ext, and return whether this succeeded.
ac_fn_c_try_link ()
{
  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
  rm -f conftest.$ac_objext conftest.beam conftest$ac_exeext
  if { { ac_try="$ac_link"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
printf "%s\n" "$ac_try_echo"; } >&5
  (eval "$ac_link") 2>conftest.err
  ac_status=$?
  if test -s conftest.err; then
    grep -v '^ *+' conftest.err >conftest.er1
    cat conftest.er1 >&5
    mv -f conftest.er1 conftest.err
  fi
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; } && {
	 test -z "$ac_c_werror_flag" ||
	 test ! -s conftest.err
       } && test -s conftest$ac_exeext && {
	 test "$cross_compiling" = yes ||
	 test -x conftest$ac_exeext
       }
then :
  ac_retval=0
else case e in @%:@(
  e) printf "%s\n" "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

	ac_retval=1 ;;
esac
fi
  # Delete the IPA/IPO (Inter Procedural Analysis/Optimization) information
  # created by the PGI compiler (conftest_ipa8_conftest.oo), as it would
  # interfere with the next link command; also delete a directory that is
  # left behind by Apple's compiler.  We do this before executing the actions.
  rm -rf conftest.dSYM conftest_ipa8_conftest.oo
  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno
  as_fn_set_status $ac_retval

} @%:@ ac_fn_c_try_link

@%:@ ac_fn_c_check_func LINENO FUNC VAR
@%:@ ----------------------------------
@%:@ Tests whether FUNC exists, setting the cache variable VAR accordingly
ac_fn_c_check_func ()
{
  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $2" >&5
printf %s "checking for $2... " >&6; }
if eval test \${$3+y}
then :
  printf %s "(cached) " >&6
else case e in @%:@(
  e) cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
/* Define $2 to an innocuous variant, in case <limits.h> declares $2.
   For example, HP-UX 11i <limits.h> declares gettimeofday.  */
#define $2 innocuous_$2

/* System header to define __stub macros and hopefully few prototypes,
   which can conflict with char $2 (void); below.  */

#include <limits.h>
#undef $2

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char $2 (void);
/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined __stub_$2 || defined __stub___$2
choke me
#endif

int
main (void)
{
return $2 ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  eval "$3=yes"
else case e in @%:@(
  e) eval "$3=no" ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext ;;
esac
fi
eval ac_res=\$$3
	       { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
printf "%s\n" "$ac_res" >&6; }
  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno

} @%:@ ac_fn_c_check_func

@%:@ ac_fn_check_decl LINENO SYMBOL VAR INCLUDES EXTRA-OPTIONS FLAG-VAR
@%:@ ------------------------------------------------------------------
@%:@ Tests whether SYMBOL is declared in INCLUDES, setting cache variable VAR
@%:@ accordingly. Pass EXTRA-OPTIONS to the compiler, using FLAG-VAR.
ac_fn_check_decl ()
{
  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
  as_decl_name=`echo $2|sed 's/ *(.*//'`
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether $as_decl_name is declared" >&5
printf %s "checking whether $as_decl_name is declared... " >&6; }
if eval test \${$3+y}
then :
  printf %s "(cached) " >&6
else case e in @%:@(
  e) as_decl_use=`echo $2|sed -e 's/(/((/' -e 's/)/) 0&/' -e 's/,/) 0& (/g'`
  eval ac_save_FLAGS=\$$6
  as_fn_append $6 " $5"
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$4
int
main (void)
{
#ifndef $as_decl_name
#ifdef __cplusplus
  (void) $as_decl_use;
#else
  (void) $as_decl_name;
#endif
#endif

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  eval "$3=yes"
else case e in @%:@(
  e) eval "$3=no" ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
  eval $6=\$ac_save_FLAGS
 ;;
esac
fi
eval ac_res=\$$3
	       { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
printf "%s\n" "$ac_res" >&6; }
  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno

} @%:@ ac_fn_check_decl

@%:@ ac_fn_c_find_uintX_t LINENO BITS VAR
@%:@ ------------------------------------
@%:@ Finds an unsigned integer type with width BITS, setting cache variable VAR
@%:@ accordingly.
ac_fn_c_find_uintX_t ()
{
  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for uint$2_t" >&5
printf %s "checking for uint$2_t... " >&6; }
if eval test \${$3+y}
then :
  printf %s "(cached) " >&6
else case e in @%:@(
  e) eval "$3=no"
     # Order is important - never check a type that is potentially smaller
     # than half of the expected target width.
     for ac_type in uint$2_t 'unsigned int' 'unsigned long int' \
	 'unsigned long long int' 'unsigned short int' 'unsigned char'; do
       cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$ac_includes_default
int
main (void)
{
static int test_array @<:@1 - 2 * !((($ac_type) -1 >> ($2 / 2 - 1)) >> ($2 / 2 - 1) == 3)@:>@;
test_array @<:@0@:>@ = 0;
return test_array @<:@0@:>@;

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  case $ac_type in @%:@(
  uint$2_t) :
    eval "$3=yes" ;; @%:@(
  *) :
    eval "$3=\$ac_type" ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
       if eval test \"x\$"$3"\" = x"no"
then :
  
else case e in @%:@(
  e) break ;;
esac
fi
     done ;;
esac
fi
eval ac_res=\$$3
	       { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
printf "%s\n" "$ac_res" >&6; }
  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno

} @%:@ ac_fn_c_find_uintX_t
ac_configure_args_raw=
for ac_arg
do
  case $ac_arg in
  *\'*)
    ac_arg=`printf "%s\n" "$ac_arg" | sed "s/'/'\\\\\\\\''/g"` ;;
  esac
  as_fn_append ac_configure_args_raw " '$ac_arg'"
done

case $ac_configure_args_raw in
  *$as_nl*)
    ac_safe_unquote= ;;
  *)
    ac_unsafe_z='|&;<>()$`\\"*?@<:@ ''	' # This string ends in space, tab.
    ac_unsafe_a="$ac_unsafe_z#~"
    ac_safe_unquote="s/ '\\([^$ac_unsafe_a][^$ac_unsafe_z]*\\)'/ \\1/g"
    ac_configure_args_raw=`      printf "%s\n" "$ac_configure_args_raw" | sed "$ac_safe_unquote"`;;
esac

cat >config.log <<_ACEOF
This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by wolfssl $as_me 5.6.6, which was
generated by GNU Autoconf 2.72.  Invocation command line was

  $ $0$ac_configure_args_raw

_ACEOF
exec 5>>config.log
{
cat <<_ASUNAME
## --------- ##
## Platform. ##
## --------- ##

hostname = `(hostname || uname -n) 2>/dev/null | sed 1q`
uname -m = `(uname -m) 2>/dev/null || echo unknown`
uname -r = `(uname -r) 2>/dev/null || echo unknown`
uname -s = `(uname -s) 2>/dev/null || echo unknown`
uname -v = `(uname -v) 2>/dev/null || echo unknown`

/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`
/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`

/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`
/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`
/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`
/usr/bin/hostinfo      = `(/usr/bin/hostinfo) 2>/dev/null      || echo unknown`
/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`
/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`
/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`

_ASUNAME

as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in @%:@(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    printf "%s\n" "PATH: $as_dir"
  done
IFS=$as_save_IFS

} >&5

cat >&5 <<_ACEOF


## ----------- ##
## Core tests. ##
## ----------- ##

_ACEOF


# Keep a trace of the command line.
# Strip out --no-create and --no-recursion so they do not pile up.
# Strip out --silent because we don't want to record it for future runs.
# Also quote any args containing shell meta-characters.
# Make two passes to allow for proper duplicate-argument suppression.
ac_configure_args=
ac_configure_args0=
ac_configure_args1=
ac_must_keep_next=false
for ac_pass in 1 2
do
  for ac_arg
  do
    case $ac_arg in
    -no-create | --no-c* | -n | -no-recursion | --no-r*) continue ;;
    -q | -quiet | --quiet | --quie | --qui | --qu | --q \
    | -silent | --silent | --silen | --sile | --sil)
      continue ;;
    *\'*)
      ac_arg=`printf "%s\n" "$ac_arg" | sed "s/'/'\\\\\\\\''/g"` ;;
    esac
    case $ac_pass in
    1) as_fn_append ac_configure_args0 " '$ac_arg'" ;;
    2)
      as_fn_append ac_configure_args1 " '$ac_arg'"
      if test $ac_must_keep_next = true; then
	ac_must_keep_next=false # Got value, back to normal.
      else
	case $ac_arg in
	  *=* | --config-cache | -C | -disable-* | --disable-* \
	  | -enable-* | --enable-* | -gas | --g* | -nfp | --nf* \
	  | -q | -quiet | --q* | -silent | --sil* | -v | -verb* \
	  | -with-* | --with-* | -without-* | --without-* | --x)
	    case "$ac_configure_args0 " in
	      "$ac_configure_args1"*" '$ac_arg' "* ) continue ;;
	    esac
	    ;;
	  -* ) ac_must_keep_next=true ;;
	esac
      fi
      as_fn_append ac_configure_args " '$ac_arg'"
      ;;
    esac
  done
done
{ ac_configure_args0=; unset ac_configure_args0;}
{ ac_configure_args1=; unset ac_configure_args1;}

# When interrupted or exit'd, cleanup temporary files, and complete
# config.log.  We remove comments because anyway the quotes in there
# would cause problems or look ugly.
# WARNING: Use '\'' to represent an apostrophe within the trap.
# WARNING: Do not start the trap code with a newline, due to a FreeBSD 4.0 bug.
trap 'exit_status=$?
  # Sanitize IFS.
  IFS=" ""	$as_nl"
  # Save into config.log some information that might help in debugging.
  {
    echo

    printf "%s\n" "## ---------------- ##
## Cache variables. ##
## ---------------- ##"
    echo
    # The following way of writing the cache mishandles newlines in values,
(
  for ac_var in `(set) 2>&1 | sed -n '\''s/^\([a-zA-Z_][a-zA-Z0-9_]*\)=.*/\1/p'\''`; do
    eval ac_val=\$$ac_var
    case $ac_val in #(
    *${as_nl}*)
      case $ac_var in #(
      *_cv_*) { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: cache variable $ac_var contains a newline" >&5
printf "%s\n" "$as_me: WARNING: cache variable $ac_var contains a newline" >&2;} ;;
      esac
      case $ac_var in #(
      _ | IFS | as_nl) ;; #(
      BASH_ARGV | BASH_SOURCE) eval $ac_var= ;; #(
      *) { eval $ac_var=; unset $ac_var;} ;;
      esac ;;
    esac
  done
  (set) 2>&1 |
    case $as_nl`(ac_space='\'' '\''; set) 2>&1` in #(
    *${as_nl}ac_space=\ *)
      sed -n \
	"s/'\''/'\''\\\\'\'''\''/g;
	  s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1='\''\\2'\''/p"
      ;; #(
    *)
      sed -n "/^[_$as_cr_alnum]*_cv_[_$as_cr_alnum]*=/p"
      ;;
    esac |
    sort
)
    echo

    printf "%s\n" "## ----------------- ##
## Output variables. ##
## ----------------- ##"
    echo
    for ac_var in $ac_subst_vars
    do
      eval ac_val=\$$ac_var
      case $ac_val in
      *\'\''*) ac_val=`printf "%s\n" "$ac_val" | sed "s/'\''/'\''\\\\\\\\'\'''\''/g"`;;
      esac
      printf "%s\n" "$ac_var='\''$ac_val'\''"
    done | sort
    echo

    if test -n "$ac_subst_files"; then
      printf "%s\n" "## ------------------- ##
## File substitutions. ##
## ------------------- ##"
      echo
      for ac_var in $ac_subst_files
      do
	eval ac_val=\$$ac_var
	case $ac_val in
	*\'\''*) ac_val=`printf "%s\n" "$ac_val" | sed "s/'\''/'\''\\\\\\\\'\'''\''/g"`;;
	esac
	printf "%s\n" "$ac_var='\''$ac_val'\''"
      done | sort
      echo
    fi

    if test -s confdefs.h; then
      printf "%s\n" "## ----------- ##
## confdefs.h. ##
## ----------- ##"
      echo
      cat confdefs.h
      echo
    fi
    test "$ac_signal" != 0 &&
      printf "%s\n" "$as_me: caught signal $ac_signal"
    printf "%s\n" "$as_me: exit $exit_status"
  } >&5
  rm -f core *.core core.conftest.* &&
    rm -f -r conftest* confdefs* conf$$* $ac_clean_files &&
    exit $exit_status
' 0
for ac_signal in 1 2 13 15; do
  trap 'ac_signal='$ac_signal'; as_fn_exit 1' $ac_signal
done
ac_signal=0

# confdefs.h avoids OS command line length limits that DEFS can exceed.
rm -f -r conftest* confdefs.h

printf "%s\n" "/* confdefs.h */" > confdefs.h

# Predefined preprocessor variables.

printf "%s\n" "@%:@define PACKAGE_NAME \"$PACKAGE_NAME\"" >>confdefs.h

printf "%s\n" "@%:@define PACKAGE_TARNAME \"$PACKAGE_TARNAME\"" >>confdefs.h

printf "%s\n" "@%:@define PACKAGE_VERSION \"$PACKAGE_VERSION\"" >>confdefs.h

printf "%s\n" "@%:@define PACKAGE_STRING \"$PACKAGE_STRING\"" >>confdefs.h

printf "%s\n" "@%:@define PACKAGE_BUGREPORT \"$PACKAGE_BUGREPORT\"" >>confdefs.h

printf "%s\n" "@%:@define PACKAGE_URL \"$PACKAGE_URL\"" >>confdefs.h


# Let the site file select an alternate cache file if it wants to.
# Prefer an explicitly selected file to automatically selected ones.
if test -n "$CONFIG_SITE"; then
  ac_site_files="$CONFIG_SITE"
elif test "x$prefix" != xNONE; then
  ac_site_files="$prefix/share/config.site $prefix/etc/config.site"
else
  ac_site_files="$ac_default_prefix/share/config.site $ac_default_prefix/etc/config.site"
fi

for ac_site_file in $ac_site_files
do
  case $ac_site_file in @%:@(
  */*) :
     ;; @%:@(
  *) :
    ac_site_file=./$ac_site_file ;;
esac
  if test -f "$ac_site_file" && test -r "$ac_site_file"; then
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: loading site script $ac_site_file" >&5
printf "%s\n" "$as_me: loading site script $ac_site_file" >&6;}
    sed 's/^/| /' "$ac_site_file" >&5
    . "$ac_site_file" \
      || { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in '$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in '$ac_pwd':" >&2;}
as_fn_error $? "failed to load site script $ac_site_file
See 'config.log' for more details" "$LINENO" 5; }
  fi
done

if test -r "$cache_file"; then
  # Some versions of bash will fail to source /dev/null (special files
  # actually), so we avoid doing that.  DJGPP emulates it as a regular file.
  if test /dev/null != "$cache_file" && test -f "$cache_file"; then
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: loading cache $cache_file" >&5
printf "%s\n" "$as_me: loading cache $cache_file" >&6;}
    case $cache_file in
      [\\/]* | ?:[\\/]* ) . "$cache_file";;
      *)                      . "./$cache_file";;
    esac
  fi
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: creating cache $cache_file" >&5
printf "%s\n" "$as_me: creating cache $cache_file" >&6;}
  >$cache_file
fi

# Test code for whether the C compiler supports C89 (global declarations)
ac_c_conftest_c89_globals='
/* Does the compiler advertise C89 conformance?
   Do not test the value of __STDC__, because some compilers set it to 0
   while being otherwise adequately conformant. */
#if !defined __STDC__
# error "Compiler does not advertise C89 conformance"
#endif

#include <stddef.h>
#include <stdarg.h>
struct stat;
/* Most of the following tests are stolen from RCS 5.7 src/conf.sh.  */
struct buf { int x; };
struct buf * (*rcsopen) (struct buf *, struct stat *, int);
static char *e (char **p, int i)
{
  return p[i];
}
static char *f (char * (*g) (char **, int), char **p, ...)
{
  char *s;
  va_list v;
  va_start (v,p);
  s = g (p, va_arg (v,int));
  va_end (v);
  return s;
}

/* C89 style stringification. */
#define noexpand_stringify(a) #a
const char *stringified = noexpand_stringify(arbitrary+token=sequence);

/* C89 style token pasting.  Exercises some of the corner cases that
   e.g. old MSVC gets wrong, but not very hard. */
#define noexpand_concat(a,b) a##b
#define expand_concat(a,b) noexpand_concat(a,b)
extern int vA;
extern int vbee;
#define aye A
#define bee B
int *pvA = &expand_concat(v,aye);
int *pvbee = &noexpand_concat(v,bee);

/* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
   function prototypes and stuff, but not \xHH hex character constants.
   These do not provoke an error unfortunately, instead are silently treated
   as an "x".  The following induces an error, until -std is added to get
   proper ANSI mode.  Curiously \x00 != x always comes out true, for an
   array size at least.  It is necessary to write \x00 == 0 to get something
   that is true only with -std.  */
int osf4_cc_array ['\''\x00'\'' == 0 ? 1 : -1];

/* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
   inside strings and character constants.  */
#define FOO(x) '\''x'\''
int xlc6_cc_array[FOO(a) == '\''x'\'' ? 1 : -1];

int test (int i, double x);
struct s1 {int (*f) (int a);};
struct s2 {int (*f) (double a);};
int pairnames (int, char **, int *(*)(struct buf *, struct stat *, int),
               int, int);'

# Test code for whether the C compiler supports C89 (body of main).
ac_c_conftest_c89_main='
ok |= (argc == 0 || f (e, argv, 0) != argv[0] || f (e, argv, 1) != argv[1]);
'

# Test code for whether the C compiler supports C99 (global declarations)
ac_c_conftest_c99_globals='
/* Does the compiler advertise C99 conformance? */
#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 199901L
# error "Compiler does not advertise C99 conformance"
#endif

// See if C++-style comments work.

#include <stdbool.h>
extern int puts (const char *);
extern int printf (const char *, ...);
extern int dprintf (int, const char *, ...);
extern void *malloc (size_t);
extern void free (void *);

// Check varargs macros.  These examples are taken from C99 6.10.3.5.
// dprintf is used instead of fprintf to avoid needing to declare
// FILE and stderr.
#define debug(...) dprintf (2, __VA_ARGS__)
#define showlist(...) puts (#__VA_ARGS__)
#define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))
static void
test_varargs_macros (void)
{
  int x = 1234;
  int y = 5678;
  debug ("Flag");
  debug ("X = %d\n", x);
  showlist (The first, second, and third items.);
  report (x>y, "x is %d but y is %d", x, y);
}

// Check long long types.
#define BIG64 18446744073709551615ull
#define BIG32 4294967295ul
#define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)
#if !BIG_OK
  #error "your preprocessor is broken"
#endif
#if BIG_OK
#else
  #error "your preprocessor is broken"
#endif
static long long int bignum = -9223372036854775807LL;
static unsigned long long int ubignum = BIG64;

struct incomplete_array
{
  int datasize;
  double data[];
};

struct named_init {
  int number;
  const wchar_t *name;
  double average;
};

typedef const char *ccp;

static inline int
test_restrict (ccp restrict text)
{
  // Iterate through items via the restricted pointer.
  // Also check for declarations in for loops.
  for (unsigned int i = 0; *(text+i) != '\''\0'\''; ++i)
    continue;
  return 0;
}

// Check varargs and va_copy.
static bool
test_varargs (const char *format, ...)
{
  va_list args;
  va_start (args, format);
  va_list args_copy;
  va_copy (args_copy, args);

  const char *str = "";
  int number = 0;
  float fnumber = 0;

  while (*format)
    {
      switch (*format++)
	{
	case '\''s'\'': // string
	  str = va_arg (args_copy, const char *);
	  break;
	case '\''d'\'': // int
	  number = va_arg (args_copy, int);
	  break;
	case '\''f'\'': // float
	  fnumber = va_arg (args_copy, double);
	  break;
	default:
	  break;
	}
    }
  va_end (args_copy);
  va_end (args);

  return *str && number && fnumber;
}
'

# Test code for whether the C compiler supports C99 (body of main).
ac_c_conftest_c99_main='
  // Check bool.
  _Bool success = false;
  success |= (argc != 0);

  // Check restrict.
  if (test_restrict ("String literal") == 0)
    success = true;
  char *restrict newvar = "Another string";

  // Check varargs.
  success &= test_varargs ("s, d'\'' f .", "string", 65, 34.234);
  test_varargs_macros ();

  // Check flexible array members.
  struct incomplete_array *ia =
    malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));
  ia->datasize = 10;
  for (int i = 0; i < ia->datasize; ++i)
    ia->data[i] = i * 1.234;
  // Work around memory leak warnings.
  free (ia);

  // Check named initializers.
  struct named_init ni = {
    .number = 34,
    .name = L"Test wide string",
    .average = 543.34343,
  };

  ni.number = 58;

  int dynamic_array[ni.number];
  dynamic_array[0] = argv[0][0];
  dynamic_array[ni.number - 1] = 543;

  // work around unused variable warnings
  ok |= (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == '\''x'\''
	 || dynamic_array[ni.number - 1] != 543);
'

# Test code for whether the C compiler supports C11 (global declarations)
ac_c_conftest_c11_globals='
/* Does the compiler advertise C11 conformance? */
#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L
# error "Compiler does not advertise C11 conformance"
#endif

// Check _Alignas.
char _Alignas (double) aligned_as_double;
char _Alignas (0) no_special_alignment;
extern char aligned_as_int;
char _Alignas (0) _Alignas (int) aligned_as_int;

// Check _Alignof.
enum
{
  int_alignment = _Alignof (int),
  int_array_alignment = _Alignof (int[100]),
  char_alignment = _Alignof (char)
};
_Static_assert (0 < -_Alignof (int), "_Alignof is signed");

// Check _Noreturn.
int _Noreturn does_not_return (void) { for (;;) continue; }

// Check _Static_assert.
struct test_static_assert
{
  int x;
  _Static_assert (sizeof (int) <= sizeof (long int),
                  "_Static_assert does not work in struct");
  long int y;
};

// Check UTF-8 literals.
#define u8 syntax error!
char const utf8_literal[] = u8"happens to be ASCII" "another string";

// Check duplicate typedefs.
typedef long *long_ptr;
typedef long int *long_ptr;
typedef long_ptr long_ptr;

// Anonymous structures and unions -- taken from C11 6.7.2.1 Example 1.
struct anonymous
{
  union {
    struct { int i; int j; };
    struct { int k; long int l; } w;
  };
  int m;
} v1;
'

# Test code for whether the C compiler supports C11 (body of main).
ac_c_conftest_c11_main='
  _Static_assert ((offsetof (struct anonymous, i)
		   == offsetof (struct anonymous, w.k)),
		  "Anonymous union alignment botch");
  v1.i = 2;
  v1.w.k = 5;
  ok |= v1.i != 5;
'

# Test code for whether the C compiler supports C11 (complete).
ac_c_conftest_c11_program="${ac_c_conftest_c89_globals}
${ac_c_conftest_c99_globals}
${ac_c_conftest_c11_globals}

int
main (int argc, char **argv)
{
  int ok = 0;
  ${ac_c_conftest_c89_main}
  ${ac_c_conftest_c99_main}
  ${ac_c_conftest_c11_main}
  return ok;
}
"

# Test code for whether the C compiler supports C99 (complete).
ac_c_conftest_c99_program="${ac_c_conftest_c89_globals}
${ac_c_conftest_c99_globals}

int
main (int argc, char **argv)
{
  int ok = 0;
  ${ac_c_conftest_c89_main}
  ${ac_c_conftest_c99_main}
  return ok;
}
"

# Test code for whether the C compiler supports C89 (complete).
ac_c_conftest_c89_program="${ac_c_conftest_c89_globals}

int
main (int argc, char **argv)
{
  int ok = 0;
  ${ac_c_conftest_c89_main}
  return ok;
}
"

as_fn_append ac_header_c_list " stdio.h stdio_h HAVE_STDIO_H"
as_fn_append ac_header_c_list " stdlib.h stdlib_h HAVE_STDLIB_H"
as_fn_append ac_header_c_list " string.h string_h HAVE_STRING_H"
as_fn_append ac_header_c_list " inttypes.h inttypes_h HAVE_INTTYPES_H"
as_fn_append ac_header_c_list " stdint.h stdint_h HAVE_STDINT_H"
as_fn_append ac_header_c_list " strings.h strings_h HAVE_STRINGS_H"
as_fn_append ac_header_c_list " sys/stat.h sys_stat_h HAVE_SYS_STAT_H"
as_fn_append ac_header_c_list " sys/types.h sys_types_h HAVE_SYS_TYPES_H"
as_fn_append ac_header_c_list " unistd.h unistd_h HAVE_UNISTD_H"

# Auxiliary files required by this configure script.
ac_aux_files="install-sh config.guess config.sub"

# Locations in which to look for auxiliary files.
ac_aux_dir_candidates="${srcdir}/build-aux"

# Search for a directory containing all of the required auxiliary files,
# $ac_aux_files, from the $PATH-style list $ac_aux_dir_candidates.
# If we don't find one directory that contains all the files we need,
# we report the set of missing files from the *first* directory in
# $ac_aux_dir_candidates and give up.
ac_missing_aux_files=""
ac_first_candidate=:
printf "%s\n" "$as_me:${as_lineno-$LINENO}: looking for aux files: $ac_aux_files" >&5
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_found=false
for as_dir in $ac_aux_dir_candidates
do
  IFS=$as_save_IFS
  case $as_dir in @%:@(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
  as_found=:
  
  printf "%s\n" "$as_me:${as_lineno-$LINENO}:  trying $as_dir" >&5
  ac_aux_dir_found=yes
  ac_install_sh=
  for ac_aux in $ac_aux_files
  do
    # As a special case, if "install-sh" is required, that requirement
    # can be satisfied by any of "install-sh", "install.sh", or "shtool",
    # and $ac_install_sh is set appropriately for whichever one is found.
    if test x"$ac_aux" = x"install-sh"
    then
      if test -f "${as_dir}install-sh"; then
        printf "%s\n" "$as_me:${as_lineno-$LINENO}:   ${as_dir}install-sh found" >&5
        ac_install_sh="${as_dir}install-sh -c"
      elif test -f "${as_dir}install.sh"; then
        printf "%s\n" "$as_me:${as_lineno-$LINENO}:   ${as_dir}install.sh found" >&5
        ac_install_sh="${as_dir}install.sh -c"
      elif test -f "${as_dir}shtool"; then
        printf "%s\n" "$as_me:${as_lineno-$LINENO}:   ${as_dir}shtool found" >&5
        ac_install_sh="${as_dir}shtool install -c"
      else
        ac_aux_dir_found=no
        if $ac_first_candidate; then
          ac_missing_aux_files="${ac_missing_aux_files} install-sh"
        else
          break
        fi
      fi
    else
      if test -f "${as_dir}${ac_aux}"; then
        printf "%s\n" "$as_me:${as_lineno-$LINENO}:   ${as_dir}${ac_aux} found" >&5
      else
        ac_aux_dir_found=no
        if $ac_first_candidate; then
          ac_missing_aux_files="${ac_missing_aux_files} ${ac_aux}"
        else
          break
        fi
      fi
    fi
  done
  if test "$ac_aux_dir_found" = yes; then
    ac_aux_dir="$as_dir"
    break
  fi
  ac_first_candidate=false

  as_found=false
done
IFS=$as_save_IFS
if $as_found
then :
  
else case e in @%:@(
  e) as_fn_error $? "cannot find required auxiliary files:$ac_missing_aux_files" "$LINENO" 5 ;;
esac
fi


# These three variables are undocumented and unsupported,
# and are intended to be withdrawn in a future Autoconf release.
# They can cause serious problems if a builder's source tree is in a directory
# whose full name contains unusual characters.
if test -f "${ac_aux_dir}config.guess"; then
  ac_@&t@config_guess="$SHELL ${ac_aux_dir}config.guess"
fi
if test -f "${ac_aux_dir}config.sub"; then
  ac_@&t@config_sub="$SHELL ${ac_aux_dir}config.sub"
fi
if test -f "$ac_aux_dir/configure"; then
  ac_@&t@configure="$SHELL ${ac_aux_dir}configure"
fi

# Check that the precious variables saved in the cache have kept the same
# value.
ac_cache_corrupted=false
for ac_var in $ac_precious_vars; do
  eval ac_old_set=\$ac_cv_env_${ac_var}_set
  eval ac_new_set=\$ac_env_${ac_var}_set
  eval ac_old_val=\$ac_cv_env_${ac_var}_value
  eval ac_new_val=\$ac_env_${ac_var}_value
  case $ac_old_set,$ac_new_set in
    set,)
      { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: '$ac_var' was set to '$ac_old_val' in the previous run" >&5
printf "%s\n" "$as_me: error: '$ac_var' was set to '$ac_old_val' in the previous run" >&2;}
      ac_cache_corrupted=: ;;
    ,set)
      { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: '$ac_var' was not set in the previous run" >&5
printf "%s\n" "$as_me: error: '$ac_var' was not set in the previous run" >&2;}
      ac_cache_corrupted=: ;;
    ,);;
    *)
      if test "x$ac_old_val" != "x$ac_new_val"; then
	# differences in whitespace do not lead to failure.
	ac_old_val_w=`echo x $ac_old_val`
	ac_new_val_w=`echo x $ac_new_val`
	if test "$ac_old_val_w" != "$ac_new_val_w"; then
	  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: '$ac_var' has changed since the previous run:" >&5
printf "%s\n" "$as_me: error: '$ac_var' has changed since the previous run:" >&2;}
	  ac_cache_corrupted=:
	else
	  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: warning: ignoring whitespace changes in '$ac_var' since the previous run:" >&5
printf "%s\n" "$as_me: warning: ignoring whitespace changes in '$ac_var' since the previous run:" >&2;}
	  eval $ac_var=\$ac_old_val
	fi
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}:   former value:  '$ac_old_val'" >&5
printf "%s\n" "$as_me:   former value:  '$ac_old_val'" >&2;}
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}:   current value: '$ac_new_val'" >&5
printf "%s\n" "$as_me:   current value: '$ac_new_val'" >&2;}
      fi;;
  esac
  # Pass precious variables to config.status.
  if test "$ac_new_set" = set; then
    case $ac_new_val in
    *\'*) ac_arg=$ac_var=`printf "%s\n" "$ac_new_val" | sed "s/'/'\\\\\\\\''/g"` ;;
    *) ac_arg=$ac_var=$ac_new_val ;;
    esac
    case " $ac_configure_args " in
      *" '$ac_arg' "*) ;; # Avoid dups.  Use of quotes ensures accuracy.
      *) as_fn_append ac_configure_args " '$ac_arg'" ;;
    esac
  fi
done
if $ac_cache_corrupted; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in '$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in '$ac_pwd':" >&2;}
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: changes in the environment can compromise the build" >&5
printf "%s\n" "$as_me: error: changes in the environment can compromise the build" >&2;}
  as_fn_error $? "run '${MAKE-make} distclean' and/or 'rm $cache_file'
	    and start over" "$LINENO" 5
fi
## -------------------- ##
## Main body of script. ##
## -------------------- ##

ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu




# The following sets CFLAGS to empty if unset on command line.  We do not
# want the default "-g -O2" that AC_PROG_CC sets automatically.
: ${CFLAGS=""}

# Capture user C_EXTRA_FLAGS from configure line.
# Use of C_EXTRA_FLAGS is deprecated because CFLAGS was fixed but someone
# might still be using it.
CFLAGS="$CFLAGS $C_EXTRA_FLAGS $C_FLAGS"










ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu
if test -n "$ac_tool_prefix"; then
  # Extract the first word of "${ac_tool_prefix}gcc", so it can be a program name with args.
set dummy ${ac_tool_prefix}gcc; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_CC+y}
then :
  printf %s "(cached) " >&6
else case e in @%:@(
  e) if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in @%:@(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_CC="${ac_tool_prefix}gcc"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi ;;
esac
fi
CC=$ac_cv_prog_CC
if test -n "$CC"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
printf "%s\n" "$CC" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


fi
if test -z "$ac_cv_prog_CC"; then
  ac_ct_CC=$CC
  # Extract the first word of "gcc", so it can be a program name with args.
set dummy gcc; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_ac_ct_CC+y}
then :
  printf %s "(cached) " >&6
else case e in @%:@(
  e) if test -n "$ac_ct_CC"; then
  ac_cv_prog_ac_ct_CC="$ac_ct_CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in @%:@(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_ac_ct_CC="gcc"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi ;;
esac
fi
ac_ct_CC=$ac_cv_prog_ac_ct_CC
if test -n "$ac_ct_CC"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC" >&5
printf "%s\n" "$ac_ct_CC" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi

  if test "x$ac_ct_CC" = x; then
    CC=""
  else
    case $cross_compiling:$ac_tool_warned in
yes:)
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
printf "%s\n" "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
ac_tool_warned=yes ;;
esac
    CC=$ac_ct_CC
  fi
else
  CC="$ac_cv_prog_CC"
fi

if test -z "$CC"; then
          if test -n "$ac_tool_prefix"; then
    # Extract the first word of "${ac_tool_prefix}cc", so it can be a program name with args.
set dummy ${ac_tool_prefix}cc; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_CC+y}
then :
  printf %s "(cached) " >&6
else case e in @%:@(
  e) if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in @%:@(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_CC="${ac_tool_prefix}cc"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi ;;
esac
fi
CC=$ac_cv_prog_CC
if test -n "$CC"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
printf "%s\n" "$CC" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


  fi
fi
if test -z "$CC"; then
  # Extract the first word of "cc", so it can be a program name with args.
set dummy cc; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_CC+y}
then :
  printf %s "(cached) " >&6
else case e in @%:@(
  e) if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
  ac_prog_rejected=no
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in @%:@(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    if test "$as_dir$ac_word$ac_exec_ext" = "/usr/ucb/cc"; then
       ac_prog_rejected=yes
       continue
     fi
    ac_cv_prog_CC="cc"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

if test $ac_prog_rejected = yes; then
  # We found a bogon in the path, so make sure we never use it.
  set dummy $ac_cv_prog_CC
  shift
  if test $@%:@ != 0; then
    # We chose a different compiler from the bogus one.
    # However, it has the same basename, so the bogon will be chosen
    # first if we set CC to just the basename; use the full file name.
    shift
    ac_cv_prog_CC="$as_dir$ac_word${1+' '}$@"
  fi
fi
fi ;;
esac
fi
CC=$ac_cv_prog_CC
if test -n "$CC"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
printf "%s\n" "$CC" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


fi
if test -z "$CC"; then
  if test -n "$ac_tool_prefix"; then
  for ac_prog in cl.exe
  do
    # Extract the first word of "$ac_tool_prefix$ac_prog", so it can be a program name with args.
set dummy $ac_tool_prefix$ac_prog; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_CC+y}
then :
  printf %s "(cached) " >&6
else case e in @%:@(
  e) if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in @%:@(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_CC="$ac_tool_prefix$ac_prog"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi ;;
esac
fi
CC=$ac_cv_prog_CC
if test -n "$CC"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
printf "%s\n" "$CC" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


    test -n "$CC" && break
  done
fi
if test -z "$CC"; then
  ac_ct_CC=$CC
  for ac_prog in cl.exe
do
  # Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_ac_ct_CC+y}
then :
  printf %s "(cached) " >&6
else case e in @%:@(
  e) if test -n "$ac_ct_CC"; then
  ac_cv_prog_ac_ct_CC="$ac_ct_CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in @%:@(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_ac_ct_CC="$ac_prog"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi ;;
esac
fi
ac_ct_CC=$ac_cv_prog_ac_ct_CC
if test -n "$ac_ct_CC"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC" >&5
printf "%s\n" "$ac_ct_CC" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


  test -n "$ac_ct_CC" && break
done

  if test "x$ac_ct_CC" = x; then
    CC=""
  else
    case $cross_compiling:$ac_tool_warned in
yes:)
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
printf "%s\n" "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
ac_tool_warned=yes ;;
esac
    CC=$ac_ct_CC
  fi
fi

fi
if test -z "$CC"; then
  if test -n "$ac_tool_prefix"; then
  # Extract the first word of "${ac_tool_prefix}clang", so it can be a program name with args.
set dummy ${ac_tool_prefix}clang; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_CC+y}
then :
  printf %s "(cached) " >&6
else case e in @%:@(
  e) if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in @%:@(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_CC="${ac_tool_prefix}clang"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi ;;
esac
fi
CC=$ac_cv_prog_CC
if test -n "$CC"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
printf "%s\n" "$CC" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


fi
if test -z "$ac_cv_prog_CC"; then
  ac_ct_CC=$CC
  # Extract the first word of "clang", so it can be a program name with args.
set dummy clang; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_ac_ct_CC+y}
then :
  printf %s "(cached) " >&6
else case e in @%:@(
  e) if test -n "$ac_ct_CC"; then
  ac_cv_prog_ac_ct_CC="$ac_ct_CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in @%:@(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_ac_ct_CC="clang"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi ;;
esac
fi
ac_ct_CC=$ac_cv_prog_ac_ct_CC
if test -n "$ac_ct_CC"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC" >&5
printf "%s\n" "$ac_ct_CC" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi

  if test "x$ac_ct_CC" = x; then
    CC=""
  else
    case $cross_compiling:$ac_tool_warned in
yes:)
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
printf "%s\n" "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
ac_tool_warned=yes ;;
esac
    CC=$ac_ct_CC
  fi
else
  CC="$ac_cv_prog_CC"
fi

fi


test -z "$CC" && { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in '$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in '$ac_pwd':" >&2;}
as_fn_error $? "no acceptable C compiler found in \$PATH
See 'config.log' for more details" "$LINENO" 5; }

# Provide some information about the compiler.
printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for C compiler version" >&5
set X $ac_compile
ac_compiler=$2
for ac_option in --version -v -V -qversion -version; do
  { { ac_try="$ac_compiler $ac_option >&5"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
printf "%s\n" "$ac_try_echo"; } >&5
  (eval "$ac_compiler $ac_option >&5") 2>conftest.err
  ac_status=$?
  if test -s conftest.err; then
    sed '10a\
... rest of stderr output deleted ...
         10q' conftest.err >conftest.er1
    cat conftest.er1 >&5
  fi
  rm -f conftest.er1 conftest.err
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }
done

cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{

  ;
  return 0;
}
_ACEOF
ac_clean_files_save=$ac_clean_files
ac_clean_files="$ac_clean_files a.out a.out.dSYM a.exe b.out"
# Try to create an executable without -o first, disregard a.out.
# It will help us diagnose broken compilers, and finding out an intuition
# of exeext.
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether the C compiler works" >&5
printf %s "checking whether the C compiler works... " >&6; }
ac_link_default=`printf "%s\n" "$ac_link" | sed 's/ -o *conftest[^ ]*//'`

# The possible output files:
ac_files="a.out conftest.exe conftest a.exe a_out.exe b.out conftest.*"

ac_rmfiles=
for ac_file in $ac_files
do
  case $ac_file in
    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj ) ;;
    * ) ac_rmfiles="$ac_rmfiles $ac_file";;
  esac
done
rm -f $ac_rmfiles

if { { ac_try="$ac_link_default"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
printf "%s\n" "$ac_try_echo"; } >&5
  (eval "$ac_link_default") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }
then :
  # Autoconf-2.13 could set the ac_cv_exeext variable to 'no'.
# So ignore a value of 'no', otherwise this would lead to 'EXEEXT = no'
# in a Makefile.  We should not override ac_cv_exeext if it was cached,
# so that the user can short-circuit this test for compilers unknown to
# Autoconf.
for ac_file in $ac_files ''
do
  test -f "$ac_file" || continue
  case $ac_file in
    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj )
	;;
    [ab].out )
	# We found the default executable, but exeext='' is most
	# certainly right.
	break;;
    *.* )
	if test ${ac_cv_exeext+y} && test "$ac_cv_exeext" != no;
	then :; else
	   ac_cv_exeext=`expr "$ac_file" : '[^.]*\(\..*\)'`
	fi
	# We set ac_cv_exeext here because the later test for it is not
	# safe: cross compilers may not add the suffix if given an '-o'
	# argument, so we may need to know it at that point already.
	# Even if this section looks crufty: it has the advantage of
	# actually working.
	break;;
    * )
	break;;
  esac
done
test "$ac_cv_exeext" = no && ac_cv_exeext=

else case e in @%:@(
  e) ac_file='' ;;
esac
fi
if test -z "$ac_file"
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
printf "%s\n" "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

{ { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in '$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in '$ac_pwd':" >&2;}
as_fn_error 77 "C compiler cannot create executables
See 'config.log' for more details" "$LINENO" 5; }
else case e in @%:@(
  e) { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; } ;;
esac
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for C compiler default output file name" >&5
printf %s "checking for C compiler default output file name... " >&6; }
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_file" >&5
printf "%s\n" "$ac_file" >&6; }
ac_exeext=$ac_cv_exeext

rm -f -r a.out a.out.dSYM a.exe conftest$ac_cv_exeext b.out
ac_clean_files=$ac_clean_files_save
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for suffix of executables" >&5
printf %s "checking for suffix of executables... " >&6; }
if { { ac_try="$ac_link"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
printf "%s\n" "$ac_try_echo"; } >&5
  (eval "$ac_link") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }
then :
  # If both 'conftest.exe' and 'conftest' are 'present' (well, observable)
# catch 'conftest.exe'.  For instance with Cygwin, 'ls conftest' will
# work properly (i.e., refer to 'conftest.exe'), while it won't with
# 'rm'.
for ac_file in conftest.exe conftest conftest.*; do
  test -f "$ac_file" || continue
  case $ac_file in
    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj ) ;;
    *.* ) ac_cv_exeext=`expr "$ac_file" : '[^.]*\(\..*\)'`
	  break;;
    * ) break;;
  esac
done
else case e in @%:@(
  e) { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in '$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in '$ac_pwd':" >&2;}
as_fn_error $? "cannot compute suffix of executables: cannot compile and link
See 'config.log' for more details" "$LINENO" 5; } ;;
esac
fi
rm -f conftest conftest$ac_cv_exeext
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_exeext" >&5
printf "%s\n" "$ac_cv_exeext" >&6; }

rm -f conftest.$ac_ext
EXEEXT=$ac_cv_exeext
ac_exeext=$EXEEXT
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
@%:@include <stdio.h>
int
main (void)
{
FILE *f = fopen ("conftest.out", "w");
 if (!f)
  return 1;
 return ferror (f) || fclose (f) != 0;

  ;
  return 0;
}
_ACEOF
ac_clean_files="$ac_clean_files conftest.out"
# Check that the compiler produces executables we can run.  If not, either
# the compiler is broken, or we cross compile.
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether we are cross compiling" >&5
printf %s "checking whether we are cross compiling... " >&6; }
if test "$cross_compiling" != yes; then
  { { ac_try="$ac_link"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
printf "%s\n" "$ac_try_echo"; } >&5
  (eval "$ac_link") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }
  if { ac_try='./conftest$ac_cv_exeext'
  { { case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
printf "%s\n" "$ac_try_echo"; } >&5
  (eval "$ac_try") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }; then
    cross_compiling=no
  else
    if test "$cross_compiling" = maybe; then
	cross_compiling=yes
    else
	{ { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in '$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in '$ac_pwd':" >&2;}
as_fn_error 77 "cannot run C compiled programs.
If you meant to cross compile, use '--host'.
See 'config.log' for more details" "$LINENO" 5; }
    fi
  fi
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $cross_compiling" >&5
printf "%s\n" "$cross_compiling" >&6; }

rm -f conftest.$ac_ext conftest$ac_cv_exeext \
  conftest.o conftest.obj conftest.out
ac_clean_files=$ac_clean_files_save
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for suffix of object files" >&5
printf %s "checking for suffix of object files... " >&6; }
if test ${ac_cv_objext+y}
then :
  printf %s "(cached) " >&6
else case e in @%:@(
  e) cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.o conftest.obj
if { { ac_try="$ac_compile"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
printf "%s\n" "$ac_try_echo"; } >&5
  (eval "$ac_compile") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }
then :
  for ac_file in conftest.o conftest.obj conftest.*; do
  test -f "$ac_file" || continue;
  case $ac_file in
    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM ) ;;
    *) ac_cv_objext=`expr "$ac_file" : '.*\.\(.*\)'`
       break;;
  esac
done
else case e in @%:@(
  e) printf "%s\n" "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

{ { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in '$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in '$ac_pwd':" >&2;}
as_fn_error $? "cannot compute suffix of object files: cannot compile
See 'config.log' for more details" "$LINENO" 5; } ;;
esac
fi
rm -f conftest.$ac_cv_objext conftest.$ac_ext ;;
esac
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_objext" >&5
printf "%s\n" "$ac_cv_objext" >&6; }
OBJEXT=$ac_cv_objext
ac_objext=$OBJEXT
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether the compiler supports GNU C" >&5
printf %s "checking whether the compiler supports GNU C... " >&6; }
if test ${ac_cv_c_compiler_gnu+y}
then :
  printf %s "(cached) " >&6
else case e in @%:@(
  e) cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{
#ifndef __GNUC__
       choke me
#endif

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  ac_compiler_gnu=yes
else case e in @%:@(
  e) ac_compiler_gnu=no ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
ac_cv_c_compiler_gnu=$ac_compiler_gnu
 ;;
esac
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_compiler_gnu" >&5
printf "%s\n" "$ac_cv_c_compiler_gnu" >&6; }
ac_compiler_gnu=$ac_cv_c_compiler_gnu

if test $ac_compiler_gnu = yes; then
  GCC=yes
else
  GCC=
fi
ac_test_CFLAGS=${CFLAGS+y}
ac_save_CFLAGS=$CFLAGS
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether $CC accepts -g" >&5
printf %s "checking whether $CC accepts -g... " >&6; }
if test ${ac_cv_prog_cc_g+y}
then :
  printf %s "(cached) " >&6
else case e in @%:@(
  e) ac_save_c_werror_flag=$ac_c_werror_flag
   ac_c_werror_flag=yes
   ac_cv_prog_cc_g=no
   CFLAGS="-g"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  ac_cv_prog_cc_g=yes
else case e in @%:@(
  e) CFLAGS=""
      cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  
else case e in @%:@(
  e) ac_c_werror_flag=$ac_save_c_werror_flag
	 CFLAGS="-g"
	 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  ac_cv_prog_cc_g=yes
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
   ac_c_werror_flag=$ac_save_c_werror_flag ;;
esac
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_g" >&5
printf "%s\n" "$ac_cv_prog_cc_g" >&6; }
if test $ac_test_CFLAGS; then
  CFLAGS=$ac_save_CFLAGS
elif test $ac_cv_prog_cc_g = yes; then
  if test "$GCC" = yes; then
    CFLAGS="-g -O2"
  else
    CFLAGS="-g"
  fi
else
  if test "$GCC" = yes; then
    CFLAGS="-O2"
  else
    CFLAGS=
  fi
fi
ac_prog_cc_stdc=no
if test x$ac_prog_cc_stdc = xno
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $CC option to enable C11 features" >&5
printf %s "checking for $CC option to enable C11 features... " >&6; }
if test ${ac_cv_prog_cc_c11+y}
then :
  printf %s "(cached) " >&6
else case e in @%:@(
  e) ac_cv_prog_cc_c11=no
ac_save_CC=$CC
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$ac_c_conftest_c11_program
_ACEOF
for ac_arg in '' -std=gnu11
do
  CC="$ac_save_CC $ac_arg"
  if ac_fn_c_try_compile "$LINENO"
then :
  ac_cv_prog_cc_c11=$ac_arg
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam
  test "x$ac_cv_prog_cc_c11" != "xno" && break
done
rm -f conftest.$ac_ext
CC=$ac_save_CC ;;
esac
fi

if test "x$ac_cv_prog_cc_c11" = xno
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: unsupported" >&5
printf "%s\n" "unsupported" >&6; }
else case e in @%:@(
  e) if test "x$ac_cv_prog_cc_c11" = x
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: none needed" >&5
printf "%s\n" "none needed" >&6; }
else case e in @%:@(
  e) { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c11" >&5
printf "%s\n" "$ac_cv_prog_cc_c11" >&6; }
     CC="$CC $ac_cv_prog_cc_c11" ;;
esac
fi
  ac_cv_prog_cc_stdc=$ac_cv_prog_cc_c11
  ac_prog_cc_stdc=c11 ;;
esac
fi
fi
if test x$ac_prog_cc_stdc = xno
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $CC option to enable C99 features" >&5
printf %s "checking for $CC option to enable C99 features... " >&6; }
if test ${ac_cv_prog_cc_c99+y}
then :
  printf %s "(cached) " >&6
else case e in @%:@(
  e) ac_cv_prog_cc_c99=no
ac_save_CC=$CC
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$ac_c_conftest_c99_program
_ACEOF
for ac_arg in '' -std=gnu99 -std=c99 -c99 -qlanglvl=extc1x -qlanglvl=extc99 -AC99 -D_STDC_C99=
do
  CC="$ac_save_CC $ac_arg"
  if ac_fn_c_try_compile "$LINENO"
then :
  ac_cv_prog_cc_c99=$ac_arg
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam
  test "x$ac_cv_prog_cc_c99" != "xno" && break
done
rm -f conftest.$ac_ext
CC=$ac_save_CC ;;
esac
fi

if test "x$ac_cv_prog_cc_c99" = xno
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: unsupported" >&5
printf "%s\n" "unsupported" >&6; }
else case e in @%:@(
  e) if test "x$ac_cv_prog_cc_c99" = x
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: none needed" >&5
printf "%s\n" "none needed" >&6; }
else case e in @%:@(
  e) { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c99" >&5
printf "%s\n" "$ac_cv_prog_cc_c99" >&6; }
     CC="$CC $ac_cv_prog_cc_c99" ;;
esac
fi
  ac_cv_prog_cc_stdc=$ac_cv_prog_cc_c99
  ac_prog_cc_stdc=c99 ;;
esac
fi
fi
if test x$ac_prog_cc_stdc = xno
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $CC option to enable C89 features" >&5
printf %s "checking for $CC option to enable C89 features... " >&6; }
if test ${ac_cv_prog_cc_c89+y}
then :
  printf %s "(cached) " >&6
else case e in @%:@(
  e) ac_cv_prog_cc_c89=no
ac_save_CC=$CC
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$ac_c_conftest_c89_program
_ACEOF
for ac_arg in '' -qlanglvl=extc89 -qlanglvl=ansi -std -Ae "-Aa -D_HPUX_SOURCE" "-Xc -D__EXTENSIONS__"
do
  CC="$ac_save_CC $ac_arg"
  if ac_fn_c_try_compile "$LINENO"
then :
  ac_cv_prog_cc_c89=$ac_arg
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam
  test "x$ac_cv_prog_cc_c89" != "xno" && break
done
rm -f conftest.$ac_ext
CC=$ac_save_CC ;;
esac
fi

if test "x$ac_cv_prog_cc_c89" = xno
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: unsupported" >&5
printf "%s\n" "unsupported" >&6; }
else case e in @%:@(
  e) if test "x$ac_cv_prog_cc_c89" = x
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: none needed" >&5
printf "%s\n" "none needed" >&6; }
else case e in @%:@(
  e) { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c89" >&5
printf "%s\n" "$ac_cv_prog_cc_c89" >&6; }
     CC="$CC $ac_cv_prog_cc_c89" ;;
esac
fi
  ac_cv_prog_cc_stdc=$ac_cv_prog_cc_c89
  ac_prog_cc_stdc=c89 ;;
esac
fi
fi

ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu

AM_PROG_CC_C_O


  
  # Make sure we can run config.sub.
$SHELL "${ac_aux_dir}config.sub" sun4 >/dev/null 2>&1 ||
  as_fn_error $? "cannot run $SHELL ${ac_aux_dir}config.sub" "$LINENO" 5

{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking build system type" >&5
printf %s "checking build system type... " >&6; }
if test ${ac_cv_build+y}
then :
  printf %s "(cached) " >&6
else case e in @%:@(
  e) ac_build_alias=$build_alias
test "x$ac_build_alias" = x &&
  ac_build_alias=`$SHELL "${ac_aux_dir}config.guess"`
test "x$ac_build_alias" = x &&
  as_fn_error $? "cannot guess build type; you must specify one" "$LINENO" 5
ac_cv_build=`$SHELL "${ac_aux_dir}config.sub" $ac_build_alias` ||
  as_fn_error $? "$SHELL ${ac_aux_dir}config.sub $ac_build_alias failed" "$LINENO" 5
 ;;
esac
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_build" >&5
printf "%s\n" "$ac_cv_build" >&6; }
case $ac_cv_build in
*-*-*) ;;
*) as_fn_error $? "invalid value of canonical build" "$LINENO" 5;;
esac
build=$ac_cv_build
ac_save_IFS=$IFS; IFS='-'
set x $ac_cv_build
shift
build_cpu=$1
build_vendor=$2
shift; shift
# Remember, the first character of IFS is used to create $*,
# except with old shells:
build_os=$*
IFS=$ac_save_IFS
case $build_os in *\ *) build_os=`echo "$build_os" | sed 's/ /-/g'`;; esac


{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking host system type" >&5
printf %s "checking host system type... " >&6; }
if test ${ac_cv_host+y}
then :
  printf %s "(cached) " >&6
else case e in @%:@(
  e) if test "x$host_alias" = x; then
  ac_cv_host=$ac_cv_build
else
  ac_cv_host=`$SHELL "${ac_aux_dir}config.sub" $host_alias` ||
    as_fn_error $? "$SHELL ${ac_aux_dir}config.sub $host_alias failed" "$LINENO" 5
fi
 ;;
esac
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_host" >&5
printf "%s\n" "$ac_cv_host" >&6; }
case $ac_cv_host in
*-*-*) ;;
*) as_fn_error $? "invalid value of canonical host" "$LINENO" 5;;
esac
host=$ac_cv_host
ac_save_IFS=$IFS; IFS='-'
set x $ac_cv_host
shift
host_cpu=$1
host_vendor=$2
shift; shift
# Remember, the first character of IFS is used to create $*,
# except with old shells:
host_os=$*
IFS=$ac_save_IFS
case $host_os in *\ *) host_os=`echo "$host_os" | sed 's/ /-/g'`;; esac


{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking target system type" >&5
printf %s "checking target system type... " >&6; }
if test ${ac_cv_target+y}
then :
  printf %s "(cached) " >&6
else case e in @%:@(
  e) if test "x$target_alias" = x; then
  ac_cv_target=$ac_cv_host
else
  ac_cv_target=`$SHELL "${ac_aux_dir}config.sub" $target_alias` ||
    as_fn_error $? "$SHELL ${ac_aux_dir}config.sub $target_alias failed" "$LINENO" 5
fi
 ;;
esac
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_target" >&5
printf "%s\n" "$ac_cv_target" >&6; }
case $ac_cv_target in
*-*-*) ;;
*) as_fn_error $? "invalid value of canonical target" "$LINENO" 5;;
esac
target=$ac_cv_target
ac_save_IFS=$IFS; IFS='-'
set x $ac_cv_target
shift
target_cpu=$1
target_vendor=$2
shift; shift
# Remember, the first character of IFS is used to create $*,
# except with old shells:
target_os=$*
IFS=$ac_save_IFS
case $target_os in *\ *) target_os=`echo "$target_os" | sed 's/ /-/g'`;; esac


# The aliases save the names the user supplied, while $host etc.
# will get canonicalized.
test -n "$target_alias" &&
  test "$program_prefix$program_suffix$program_transform_name" = \
    NONENONEs,x,x, &&
  program_prefix=${target_alias}-


AM_INIT_AUTOMAKE(1.14.1 -Wall -Werror -Wno-portability foreign tar-ustar subdir-objects no-define color-tests)


test "$program_prefix" != NONE &&
  program_transform_name="s&^&$program_prefix&;$program_transform_name"
# Use a double $ so make ignores it.
test "$program_suffix" != NONE &&
  program_transform_name="s&\$&$program_suffix&;$program_transform_name"
# Double any \ or $.
# By default was 's,x,x', remove it if useless.
ac_script='s/[\\$]/&&/g;s/;s,x,x,$//'
program_transform_name=`printf "%s\n" "$program_transform_name" | sed "$ac_script"`


ac_config_headers="$ac_config_headers config.h:config.in"


LT_PREREQ(2.4.2)
LT_INIT(disable-static win32-dll)






WOLFSSL_CONFIG_ARGS=$ac_configure_args


# shared library versioning
# The three numbers in the libwolfssl.so.*.*.* file name. Unfortunately
# these numbers don't always line up nicely with the library version.
WOLFSSL_LIBRARY_VERSION_FIRST=42
WOLFSSL_LIBRARY_VERSION_SECOND=0
WOLFSSL_LIBRARY_VERSION_THIRD=0
WOLFSSL_LIBRARY_VERSION=42:0:0
#                        | | |
#                 +------+ | +---+
#                 |        |     |
#                current:revision:age
#                 |        |     |
#                 |        |     +- increment if interfaces have been added
#                 |        |        set to zero if interfaces have been removed
#                 |        |        or changed
#                 |        +- increment if source code has changed
#                 |           set to zero if current is incremented
#                 +- increment if interfaces have been added, removed or changed





gl_VISIBILITY
if  test -n "$CFLAG_VISIBILITY" 
then :
  
       AM_CFLAGS="$AM_CFLAGS $CFLAG_VISIBILITY"
       
fi

WOLFSSL_BUILD_DATE=$(date -R)



# Moved these size of and type checks before the library checks.
# The library checks add the library to subsequent test compiles
# and in some rare cases, the networking check causes these sizeof
# checks to fail.

ac_header= ac_cache=
for ac_item in $ac_header_c_list
do
  if test $ac_cache; then
    ac_fn_c_check_header_compile "$LINENO" $ac_header ac_cv_header_$ac_cache "$ac_includes_default"
    if eval test \"x\$ac_cv_header_$ac_cache\" = xyes; then
      printf "%s\n" "#define $ac_item 1" >> confdefs.h
    fi
    ac_header= ac_cache=
  elif test $ac_header; then
    ac_cache=$ac_item
  else
    ac_header=$ac_item
  fi
done








if test $ac_cv_header_stdlib_h = yes && test $ac_cv_header_string_h = yes
then :
  
printf "%s\n" "@%:@define STDC_HEADERS 1" >>confdefs.h

fi
# The cast to long int works around a bug in the HP C Compiler
# version HP92453-01 B.11.11.23709.GP, which incorrectly rejects
# declarations like 'int a3[[(sizeof (unsigned char)) >= 0]];'.
# This bug is HP SR number 8606223364.
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking size of long long" >&5
printf %s "checking size of long long... " >&6; }
if test ${ac_cv_sizeof_long_long+y}
then :
  printf %s "(cached) " >&6
else case e in @%:@(
  e) if ac_fn_c_compute_int "$LINENO" "(long int) (sizeof (long long))" "ac_cv_sizeof_long_long"        "$ac_includes_default"
then :
  
else case e in @%:@(
  e) if test "$ac_cv_type_long_long" = yes; then
     { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in '$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in '$ac_pwd':" >&2;}
as_fn_error 77 "cannot compute sizeof (long long)
See 'config.log' for more details" "$LINENO" 5; }
   else
     ac_cv_sizeof_long_long=0
   fi ;;
esac
fi
 ;;
esac
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_sizeof_long_long" >&5
printf "%s\n" "$ac_cv_sizeof_long_long" >&6; }



printf "%s\n" "@%:@define SIZEOF_LONG_LONG $ac_cv_sizeof_long_long" >>confdefs.h


# The cast to long int works around a bug in the HP C Compiler
# version HP92453-01 B.11.11.23709.GP, which incorrectly rejects
# declarations like 'int a3[[(sizeof (unsigned char)) >= 0]];'.
# This bug is HP SR number 8606223364.
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking size of long" >&5
printf %s "checking size of long... " >&6; }
if test ${ac_cv_sizeof_long+y}
then :
  printf %s "(cached) " >&6
else case e in @%:@(
  e) if ac_fn_c_compute_int "$LINENO" "(long int) (sizeof (long))" "ac_cv_sizeof_long"        "$ac_includes_default"
then :
  
else case e in @%:@(
  e) if test "$ac_cv_type_long" = yes; then
     { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in '$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in '$ac_pwd':" >&2;}
as_fn_error 77 "cannot compute sizeof (long)
See 'config.log' for more details" "$LINENO" 5; }
   else
     ac_cv_sizeof_long=0
   fi ;;
esac
fi
 ;;
esac
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_sizeof_long" >&5
printf "%s\n" "$ac_cv_sizeof_long" >&6; }



printf "%s\n" "@%:@define SIZEOF_LONG $ac_cv_sizeof_long" >>confdefs.h


# The cast to long int works around a bug in the HP C Compiler
# version HP92453-01 B.11.11.23709.GP, which incorrectly rejects
# declarations like 'int a3[[(sizeof (unsigned char)) >= 0]];'.
# This bug is HP SR number 8606223364.
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking size of time_t" >&5
printf %s "checking size of time_t... " >&6; }
if test ${ac_cv_sizeof_time_t+y}
then :
  printf %s "(cached) " >&6
else case e in @%:@(
  e) if ac_fn_c_compute_int "$LINENO" "(long int) (sizeof (time_t))" "ac_cv_sizeof_time_t"        "$ac_includes_default"
then :
  
else case e in @%:@(
  e) if test "$ac_cv_type_time_t" = yes; then
     { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in '$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in '$ac_pwd':" >&2;}
as_fn_error 77 "cannot compute sizeof (time_t)
See 'config.log' for more details" "$LINENO" 5; }
   else
     ac_cv_sizeof_time_t=0
   fi ;;
esac
fi
 ;;
esac
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_sizeof_time_t" >&5
printf "%s\n" "$ac_cv_sizeof_time_t" >&6; }



printf "%s\n" "@%:@define SIZEOF_TIME_T $ac_cv_sizeof_time_t" >>confdefs.h


ac_fn_c_check_type "$LINENO" "__uint128_t" "ac_cv_type___uint128_t" "$ac_includes_default"
if test "x$ac_cv_type___uint128_t" = xyes
then :
  
printf "%s\n" "@%:@define HAVE___UINT128_T 1" >>confdefs.h


fi



# Distro build feature subset (Debian, Ubuntu, etc.)
@%:@ Check whether --enable-distro was given.
if test ${enable_distro+y}
then :
  enableval=$enable_distro;  ENABLED_DISTRO=$enableval 
else case e in @%:@(
  e)  ENABLED_DISTRO=no 
     ;;
esac
fi

if test "$ENABLED_DISTRO" = "yes"
then
    enable_shared=yes
    enable_static=yes
    enable_all=yes
    enable_earlydata=no
    REPRODUCIBLE_BUILD_DEFAULT=yes
else
    REPRODUCIBLE_BUILD_DEFAULT=no
fi


ac_fn_c_check_header_compile "$LINENO" "arpa/inet.h" "ac_cv_header_arpa_inet_h" "$ac_includes_default"
if test "x$ac_cv_header_arpa_inet_h" = xyes
then :
  printf "%s\n" "@%:@define HAVE_ARPA_INET_H 1" >>confdefs.h

fi
ac_fn_c_check_header_compile "$LINENO" "fcntl.h" "ac_cv_header_fcntl_h" "$ac_includes_default"
if test "x$ac_cv_header_fcntl_h" = xyes
then :
  printf "%s\n" "@%:@define HAVE_FCNTL_H 1" >>confdefs.h

fi
ac_fn_c_check_header_compile "$LINENO" "limits.h" "ac_cv_header_limits_h" "$ac_includes_default"
if test "x$ac_cv_header_limits_h" = xyes
then :
  printf "%s\n" "@%:@define HAVE_LIMITS_H 1" >>confdefs.h

fi
ac_fn_c_check_header_compile "$LINENO" "netdb.h" "ac_cv_header_netdb_h" "$ac_includes_default"
if test "x$ac_cv_header_netdb_h" = xyes
then :
  printf "%s\n" "@%:@define HAVE_NETDB_H 1" >>confdefs.h

fi
ac_fn_c_check_header_compile "$LINENO" "netinet/in.h" "ac_cv_header_netinet_in_h" "$ac_includes_default"
if test "x$ac_cv_header_netinet_in_h" = xyes
then :
  printf "%s\n" "@%:@define HAVE_NETINET_IN_H 1" >>confdefs.h

fi
ac_fn_c_check_header_compile "$LINENO" "stddef.h" "ac_cv_header_stddef_h" "$ac_includes_default"
if test "x$ac_cv_header_stddef_h" = xyes
then :
  printf "%s\n" "@%:@define HAVE_STDDEF_H 1" >>confdefs.h

fi
ac_fn_c_check_header_compile "$LINENO" "time.h" "ac_cv_header_time_h" "$ac_includes_default"
if test "x$ac_cv_header_time_h" = xyes
then :
  printf "%s\n" "@%:@define HAVE_TIME_H 1" >>confdefs.h

fi
ac_fn_c_check_header_compile "$LINENO" "sys/ioctl.h" "ac_cv_header_sys_ioctl_h" "$ac_includes_default"
if test "x$ac_cv_header_sys_ioctl_h" = xyes
then :
  printf "%s\n" "@%:@define HAVE_SYS_IOCTL_H 1" >>confdefs.h

fi
ac_fn_c_check_header_compile "$LINENO" "sys/socket.h" "ac_cv_header_sys_socket_h" "$ac_includes_default"
if test "x$ac_cv_header_sys_socket_h" = xyes
then :
  printf "%s\n" "@%:@define HAVE_SYS_SOCKET_H 1" >>confdefs.h

fi
ac_fn_c_check_header_compile "$LINENO" "sys/time.h" "ac_cv_header_sys_time_h" "$ac_includes_default"
if test "x$ac_cv_header_sys_time_h" = xyes
then :
  printf "%s\n" "@%:@define HAVE_SYS_TIME_H 1" >>confdefs.h

fi
ac_fn_c_check_header_compile "$LINENO" "errno.h" "ac_cv_header_errno_h" "$ac_includes_default"
if test "x$ac_cv_header_errno_h" = xyes
then :
  printf "%s\n" "@%:@define HAVE_ERRNO_H 1" >>confdefs.h

fi
ac_fn_c_check_header_compile "$LINENO" "sys/un.h" "ac_cv_header_sys_un_h" "$ac_includes_default"
if test "x$ac_cv_header_sys_un_h" = xyes
then :
  printf "%s\n" "@%:@define HAVE_SYS_UN_H 1" >>confdefs.h

fi

{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for socket in -lnetwork" >&5
printf %s "checking for socket in -lnetwork... " >&6; }
if test ${ac_cv_lib_network_socket+y}
then :
  printf %s "(cached) " >&6
else case e in @%:@(
  e) ac_check_lib_save_LIBS=$LIBS
LIBS="-lnetwork  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.
   The 'extern "C"' is for builds by C++ compilers;
   although this is not generally supported in C code supporting it here
   has little cost and some practical benefit (sr 110532).  */
#ifdef __cplusplus
extern "C"
#endif
char socket (void);
int
main (void)
{
return socket ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_lib_network_socket=yes
else case e in @%:@(
  e) ac_cv_lib_network_socket=no ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS ;;
esac
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_network_socket" >&5
printf "%s\n" "$ac_cv_lib_network_socket" >&6; }
if test "x$ac_cv_lib_network_socket" = xyes
then :
  printf "%s\n" "@%:@define HAVE_LIBNETWORK 1" >>confdefs.h

  LIBS="-lnetwork $LIBS"

fi

 { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether byte ordering is bigendian" >&5
printf %s "checking whether byte ordering is bigendian... " >&6; }
if test ${ac_cv_c_bigendian+y}
then :
  printf %s "(cached) " >&6
else case e in @%:@(
  e) ac_cv_c_bigendian=unknown
    # See if we're dealing with a universal compiler.
    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#ifndef __APPLE_CC__
	       not a universal capable compiler
	     #endif
	     typedef int dummy;
	    
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  
	# Check for potential -arch flags.  It is not universal unless
	# there are at least two -arch flags with different values.
	ac_arch=
	ac_prev=
	for ac_word in $CC $CFLAGS $CPPFLAGS $LDFLAGS; do
	 if test -n "$ac_prev"; then
	   case $ac_word in
	     i?86 | x86_64 | ppc | ppc64)
	       if test -z "$ac_arch" || test "$ac_arch" = "$ac_word"; then
		 ac_arch=$ac_word
	       else
		 ac_cv_c_bigendian=universal
		 break
	       fi
	       ;;
	   esac
	   ac_prev=
	 elif test "x$ac_word" = "x-arch"; then
	   ac_prev=arch
	 fi
       done
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
    if test $ac_cv_c_bigendian = unknown; then
      # See if sys/param.h defines the BYTE_ORDER macro.
      cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <sys/types.h>
	     #include <sys/param.h>
	   
int
main (void)
{
#if ! (defined BYTE_ORDER && defined BIG_ENDIAN \\
		     && defined LITTLE_ENDIAN && BYTE_ORDER && BIG_ENDIAN \\
		     && LITTLE_ENDIAN)
	      bogus endian macros
	     #endif
	   
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  # It does; now see whether it defined to BIG_ENDIAN or not.
	 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <sys/types.h>
		#include <sys/param.h>
	      
int
main (void)
{
#if BYTE_ORDER != BIG_ENDIAN
		 not big endian
		#endif
	      
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  ac_cv_c_bigendian=yes
else case e in @%:@(
  e) ac_cv_c_bigendian=no ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
    fi
    if test $ac_cv_c_bigendian = unknown; then
      # See if <limits.h> defines _LITTLE_ENDIAN or _BIG_ENDIAN (e.g., Solaris).
      cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <limits.h>
	   
int
main (void)
{
#if ! (defined _LITTLE_ENDIAN || defined _BIG_ENDIAN)
	      bogus endian macros
	     #endif
	   
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  # It does; now see whether it defined to _BIG_ENDIAN or not.
	 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <limits.h>
	      
int
main (void)
{
#ifndef _BIG_ENDIAN
		 not big endian
		#endif
	      
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  ac_cv_c_bigendian=yes
else case e in @%:@(
  e) ac_cv_c_bigendian=no ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
    fi
    if test $ac_cv_c_bigendian = unknown; then
      # Compile a test program.
      if test "$cross_compiling" = yes
then :
  # Try to guess by grepping values from an object file.
	 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
unsigned short int ascii_mm[] =
		  { 0x4249, 0x4765, 0x6E44, 0x6961, 0x6E53, 0x7953, 0 };
		unsigned short int ascii_ii[] =
		  { 0x694C, 0x5454, 0x656C, 0x6E45, 0x6944, 0x6E61, 0 };
		int use_ascii (int i) {
		  return ascii_mm[i] + ascii_ii[i];
		}
		unsigned short int ebcdic_ii[] =
		  { 0x89D3, 0xE3E3, 0x8593, 0x95C5, 0x89C4, 0x9581, 0 };
		unsigned short int ebcdic_mm[] =
		  { 0xC2C9, 0xC785, 0x95C4, 0x8981, 0x95E2, 0xA8E2, 0 };
		int use_ebcdic (int i) {
		  return ebcdic_mm[i] + ebcdic_ii[i];
		}
		int
		main (int argc, char **argv)
		{
		  /* Intimidate the compiler so that it does not
		     optimize the arrays away.  */
		  char *p = argv[0];
		  ascii_mm[1] = *p++; ebcdic_mm[1] = *p++;
		  ascii_ii[1] = *p++; ebcdic_ii[1] = *p++;
		  return use_ascii (argc) == use_ebcdic (*p);
		}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  if grep BIGenDianSyS conftest$ac_exeext >/dev/null; then
	      ac_cv_c_bigendian=yes
	    fi
	    if grep LiTTleEnDian conftest$ac_exeext >/dev/null ; then
	      if test "$ac_cv_c_bigendian" = unknown; then
		ac_cv_c_bigendian=no
	      else
		# finding both strings is unlikely to happen, but who knows?
		ac_cv_c_bigendian=unknown
	      fi
	    fi
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
else case e in @%:@(
  e) cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$ac_includes_default
int
main (void)
{

	     /* Are we little or big endian?  From Harbison&Steele.  */
	     union
	     {
	       long int l;
	       char c[sizeof (long int)];
	     } u;
	     u.l = 1;
	     return u.c[sizeof (long int) - 1] == 1;
	   
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_run "$LINENO"
then :
  ac_cv_c_bigendian=no
else case e in @%:@(
  e) ac_cv_c_bigendian=yes ;;
esac
fi
rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
  conftest.$ac_objext conftest.beam conftest.$ac_ext ;;
esac
fi

    fi ;;
esac
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_bigendian" >&5
printf "%s\n" "$ac_cv_c_bigendian" >&6; }
 case $ac_cv_c_bigendian in #(
   yes)
     printf "%s\n" "@%:@define WORDS_BIGENDIAN 1" >>confdefs.h
;; #(
   no)
      ;; #(
   universal)
     	
printf "%s\n" "@%:@define AC_APPLE_UNIVERSAL_BUILD 1" >>confdefs.h

     ;; #(
   *)
     as_fn_error $? "unknown endianness
 presetting ac_cv_c_bigendian=no (or yes) will help" "$LINENO" 5 ;;
 esac

AC_C___ATOMIC
ac_fn_c_check_header_compile "$LINENO" "stdatomic.h" "ac_cv_header_stdatomic_h" "$ac_includes_default"
if test "x$ac_cv_header_stdatomic_h" = xyes
then :
  AM_CPPFLAGS="$AM_CPPFLAGS -DWOLFSSL_HAVE_ATOMIC_H"
fi


# check if functions of interest are linkable, but also check if
# they're declared by the expected headers, and if not, supersede the
# unusable positive from AC_CHECK_FUNCS().
ac_fn_c_check_func "$LINENO" "gethostbyname" "ac_cv_func_gethostbyname"
if test "x$ac_cv_func_gethostbyname" = xyes
then :
  printf "%s\n" "@%:@define HAVE_GETHOSTBYNAME 1" >>confdefs.h

fi
ac_fn_c_check_func "$LINENO" "getaddrinfo" "ac_cv_func_getaddrinfo"
if test "x$ac_cv_func_getaddrinfo" = xyes
then :
  printf "%s\n" "@%:@define HAVE_GETADDRINFO 1" >>confdefs.h

fi
ac_fn_c_check_func "$LINENO" "gettimeofday" "ac_cv_func_gettimeofday"
if test "x$ac_cv_func_gettimeofday" = xyes
then :
  printf "%s\n" "@%:@define HAVE_GETTIMEOFDAY 1" >>confdefs.h

fi
ac_fn_c_check_func "$LINENO" "gmtime_r" "ac_cv_func_gmtime_r"
if test "x$ac_cv_func_gmtime_r" = xyes
then :
  printf "%s\n" "@%:@define HAVE_GMTIME_R 1" >>confdefs.h

fi
ac_fn_c_check_func "$LINENO" "gmtime_s" "ac_cv_func_gmtime_s"
if test "x$ac_cv_func_gmtime_s" = xyes
then :
  printf "%s\n" "@%:@define HAVE_GMTIME_S 1" >>confdefs.h

fi
ac_fn_c_check_func "$LINENO" "inet_ntoa" "ac_cv_func_inet_ntoa"
if test "x$ac_cv_func_inet_ntoa" = xyes
then :
  printf "%s\n" "@%:@define HAVE_INET_NTOA 1" >>confdefs.h

fi
ac_fn_c_check_func "$LINENO" "memset" "ac_cv_func_memset"
if test "x$ac_cv_func_memset" = xyes
then :
  printf "%s\n" "@%:@define HAVE_MEMSET 1" >>confdefs.h

fi
ac_fn_c_check_func "$LINENO" "socket" "ac_cv_func_socket"
if test "x$ac_cv_func_socket" = xyes
then :
  printf "%s\n" "@%:@define HAVE_SOCKET 1" >>confdefs.h

fi
ac_fn_c_check_func "$LINENO" "strftime" "ac_cv_func_strftime"
if test "x$ac_cv_func_strftime" = xyes
then :
  printf "%s\n" "@%:@define HAVE_STRFTIME 1" >>confdefs.h

fi
ac_fn_c_check_func "$LINENO" "atexit" "ac_cv_func_atexit"
if test "x$ac_cv_func_atexit" = xyes
then :
  printf "%s\n" "@%:@define HAVE_ATEXIT 1" >>confdefs.h

fi

{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $CC options needed to detect all undeclared functions" >&5
printf %s "checking for $CC options needed to detect all undeclared functions... " >&6; }
if test ${ac_cv_c_undeclared_builtin_options+y}
then :
  printf %s "(cached) " >&6
else case e in @%:@(
  e) ac_save_CFLAGS=$CFLAGS
   ac_cv_c_undeclared_builtin_options='cannot detect'
   for ac_arg in '' -fno-builtin; do
     CFLAGS="$ac_save_CFLAGS $ac_arg"
     # This test program should *not* compile successfully.
     cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{
(void) strchr;
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  
else case e in @%:@(
  e) # This test program should compile successfully.
        # No library function is consistently available on
        # freestanding implementations, so test against a dummy
        # declaration.  Include always-available headers on the
        # off chance that they somehow elicit warnings.
        cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <float.h>
#include <limits.h>
#include <stdarg.h>
#include <stddef.h>
extern void ac_decl (int, char *);

int
main (void)
{
(void) ac_decl (0, (char *) 0);
  (void) ac_decl;

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  if test x"$ac_arg" = x
then :
  ac_cv_c_undeclared_builtin_options='none needed'
else case e in @%:@(
  e) ac_cv_c_undeclared_builtin_options=$ac_arg ;;
esac
fi
          break
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
    done
    CFLAGS=$ac_save_CFLAGS
   ;;
esac
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_undeclared_builtin_options" >&5
printf "%s\n" "$ac_cv_c_undeclared_builtin_options" >&6; }
  case $ac_cv_c_undeclared_builtin_options in @%:@(
  'cannot detect') :
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in '$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in '$ac_pwd':" >&2;}
as_fn_error $? "cannot make $CC report undeclared builtins
See 'config.log' for more details" "$LINENO" 5; } ;; @%:@(
  'none needed') :
    ac_c_undeclared_builtin_options='' ;; @%:@(
  *) :
    ac_c_undeclared_builtin_options=$ac_cv_c_undeclared_builtin_options ;;
esac

ac_fn_check_decl "$LINENO" "gethostbyname" "ac_cv_have_decl_gethostbyname" "
#ifdef HAVE_SYS_SOCKET_H
    #include <sys/socket.h>
#endif
#ifdef HAVE_STRING_H
    #include <string.h>
#endif
#ifdef HAVE_NETDB_H
    #include <netdb.h>
#endif
#ifdef HAVE_ARPA_INET_H
    #include <arpa/inet.h>
#endif
#ifdef HAVE_SYS_TIME_H
    #include <sys/time.h>
#endif
#ifdef HAVE_TIME_H
    #include <time.h>
#endif
#ifdef HAVE_STDLIB_H
    #include <stdlib.h>
#endif

" "$ac_c_undeclared_builtin_options" "CFLAGS"
if test "x$ac_cv_have_decl_gethostbyname" = xyes
then :
  ac_have_decl=1
else case e in @%:@(
  e) ac_have_decl=0 ;;
esac
fi
printf "%s\n" "@%:@define HAVE_DECL_GETHOSTBYNAME $ac_have_decl" >>confdefs.h
if test $ac_have_decl = 1
then :
  
else case e in @%:@(
  e) 
if test "$(eval echo \$"$(eval 'echo ac_cv_func_${as_decl_name}')")" = "yes"
then
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}:     note: earlier check for $(eval 'echo ${as_decl_name}') superseded." >&5
printf "%s\n" "$as_me:     note: earlier check for $(eval 'echo ${as_decl_name}') superseded." >&6;}
    eval "ac_cv_func_${as_decl_name}=no"
    _mask_varname=HAVE_`eval "echo '${as_decl_name}'" | tr 'a-z' 'A-Z'`
    sed --in-place "s~^#define ${_mask_varname} 1$~~" confdefs.h
fi
 ;;
esac
fi
ac_fn_check_decl "$LINENO" "getaddrinfo" "ac_cv_have_decl_getaddrinfo" "
#ifdef HAVE_SYS_SOCKET_H
    #include <sys/socket.h>
#endif
#ifdef HAVE_STRING_H
    #include <string.h>
#endif
#ifdef HAVE_NETDB_H
    #include <netdb.h>
#endif
#ifdef HAVE_ARPA_INET_H
    #include <arpa/inet.h>
#endif
#ifdef HAVE_SYS_TIME_H
    #include <sys/time.h>
#endif
#ifdef HAVE_TIME_H
    #include <time.h>
#endif
#ifdef HAVE_STDLIB_H
    #include <stdlib.h>
#endif

" "$ac_c_undeclared_builtin_options" "CFLAGS"
if test "x$ac_cv_have_decl_getaddrinfo" = xyes
then :
  ac_have_decl=1
else case e in @%:@(
  e) ac_have_decl=0 ;;
esac
fi
printf "%s\n" "@%:@define HAVE_DECL_GETADDRINFO $ac_have_decl" >>confdefs.h
if test $ac_have_decl = 1
then :
  
else case e in @%:@(
  e) 
if test "$(eval echo \$"$(eval 'echo ac_cv_func_${as_decl_name}')")" = "yes"
then
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}:     note: earlier check for $(eval 'echo ${as_decl_name}') superseded." >&5
printf "%s\n" "$as_me:     note: earlier check for $(eval 'echo ${as_decl_name}') superseded." >&6;}
    eval "ac_cv_func_${as_decl_name}=no"
    _mask_varname=HAVE_`eval "echo '${as_decl_name}'" | tr 'a-z' 'A-Z'`
    sed --in-place "s~^#define ${_mask_varname} 1$~~" confdefs.h
fi
 ;;
esac
fi
ac_fn_check_decl "$LINENO" "gettimeofday" "ac_cv_have_decl_gettimeofday" "
#ifdef HAVE_SYS_SOCKET_H
    #include <sys/socket.h>
#endif
#ifdef HAVE_STRING_H
    #include <string.h>
#endif
#ifdef HAVE_NETDB_H
    #include <netdb.h>
#endif
#ifdef HAVE_ARPA_INET_H
    #include <arpa/inet.h>
#endif
#ifdef HAVE_SYS_TIME_H
    #include <sys/time.h>
#endif
#ifdef HAVE_TIME_H
    #include <time.h>
#endif
#ifdef HAVE_STDLIB_H
    #include <stdlib.h>
#endif

" "$ac_c_undeclared_builtin_options" "CFLAGS"
if test "x$ac_cv_have_decl_gettimeofday" = xyes
then :
  ac_have_decl=1
else case e in @%:@(
  e) ac_have_decl=0 ;;
esac
fi
printf "%s\n" "@%:@define HAVE_DECL_GETTIMEOFDAY $ac_have_decl" >>confdefs.h
if test $ac_have_decl = 1
then :
  
else case e in @%:@(
  e) 
if test "$(eval echo \$"$(eval 'echo ac_cv_func_${as_decl_name}')")" = "yes"
then
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}:     note: earlier check for $(eval 'echo ${as_decl_name}') superseded." >&5
printf "%s\n" "$as_me:     note: earlier check for $(eval 'echo ${as_decl_name}') superseded." >&6;}
    eval "ac_cv_func_${as_decl_name}=no"
    _mask_varname=HAVE_`eval "echo '${as_decl_name}'" | tr 'a-z' 'A-Z'`
    sed --in-place "s~^#define ${_mask_varname} 1$~~" confdefs.h
fi
 ;;
esac
fi
ac_fn_check_decl "$LINENO" "gmtime_r" "ac_cv_have_decl_gmtime_r" "
#ifdef HAVE_SYS_SOCKET_H
    #include <sys/socket.h>
#endif
#ifdef HAVE_STRING_H
    #include <string.h>
#endif
#ifdef HAVE_NETDB_H
    #include <netdb.h>
#endif
#ifdef HAVE_ARPA_INET_H
    #include <arpa/inet.h>
#endif
#ifdef HAVE_SYS_TIME_H
    #include <sys/time.h>
#endif
#ifdef HAVE_TIME_H
    #include <time.h>
#endif
#ifdef HAVE_STDLIB_H
    #include <stdlib.h>
#endif

" "$ac_c_undeclared_builtin_options" "CFLAGS"
if test "x$ac_cv_have_decl_gmtime_r" = xyes
then :
  ac_have_decl=1
else case e in @%:@(
  e) ac_have_decl=0 ;;
esac
fi
printf "%s\n" "@%:@define HAVE_DECL_GMTIME_R $ac_have_decl" >>confdefs.h
if test $ac_have_decl = 1
then :
  
else case e in @%:@(
  e) 
if test "$(eval echo \$"$(eval 'echo ac_cv_func_${as_decl_name}')")" = "yes"
then
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}:     note: earlier check for $(eval 'echo ${as_decl_name}') superseded." >&5
printf "%s\n" "$as_me:     note: earlier check for $(eval 'echo ${as_decl_name}') superseded." >&6;}
    eval "ac_cv_func_${as_decl_name}=no"
    _mask_varname=HAVE_`eval "echo '${as_decl_name}'" | tr 'a-z' 'A-Z'`
    sed --in-place "s~^#define ${_mask_varname} 1$~~" confdefs.h
fi
 ;;
esac
fi
ac_fn_check_decl "$LINENO" "gmtime_s" "ac_cv_have_decl_gmtime_s" "
#ifdef HAVE_SYS_SOCKET_H
    #include <sys/socket.h>
#endif
#ifdef HAVE_STRING_H
    #include <string.h>
#endif
#ifdef HAVE_NETDB_H
    #include <netdb.h>
#endif
#ifdef HAVE_ARPA_INET_H
    #include <arpa/inet.h>
#endif
#ifdef HAVE_SYS_TIME_H
    #include <sys/time.h>
#endif
#ifdef HAVE_TIME_H
    #include <time.h>
#endif
#ifdef HAVE_STDLIB_H
    #include <stdlib.h>
#endif

" "$ac_c_undeclared_builtin_options" "CFLAGS"
if test "x$ac_cv_have_decl_gmtime_s" = xyes
then :
  ac_have_decl=1
else case e in @%:@(
  e) ac_have_decl=0 ;;
esac
fi
printf "%s\n" "@%:@define HAVE_DECL_GMTIME_S $ac_have_decl" >>confdefs.h
if test $ac_have_decl = 1
then :
  
else case e in @%:@(
  e) 
if test "$(eval echo \$"$(eval 'echo ac_cv_func_${as_decl_name}')")" = "yes"
then
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}:     note: earlier check for $(eval 'echo ${as_decl_name}') superseded." >&5
printf "%s\n" "$as_me:     note: earlier check for $(eval 'echo ${as_decl_name}') superseded." >&6;}
    eval "ac_cv_func_${as_decl_name}=no"
    _mask_varname=HAVE_`eval "echo '${as_decl_name}'" | tr 'a-z' 'A-Z'`
    sed --in-place "s~^#define ${_mask_varname} 1$~~" confdefs.h
fi
 ;;
esac
fi
ac_fn_check_decl "$LINENO" "inet_ntoa" "ac_cv_have_decl_inet_ntoa" "
#ifdef HAVE_SYS_SOCKET_H
    #include <sys/socket.h>
#endif
#ifdef HAVE_STRING_H
    #include <string.h>
#endif
#ifdef HAVE_NETDB_H
    #include <netdb.h>
#endif
#ifdef HAVE_ARPA_INET_H
    #include <arpa/inet.h>
#endif
#ifdef HAVE_SYS_TIME_H
    #include <sys/time.h>
#endif
#ifdef HAVE_TIME_H
    #include <time.h>
#endif
#ifdef HAVE_STDLIB_H
    #include <stdlib.h>
#endif

" "$ac_c_undeclared_builtin_options" "CFLAGS"
if test "x$ac_cv_have_decl_inet_ntoa" = xyes
then :
  ac_have_decl=1
else case e in @%:@(
  e) ac_have_decl=0 ;;
esac
fi
printf "%s\n" "@%:@define HAVE_DECL_INET_NTOA $ac_have_decl" >>confdefs.h
if test $ac_have_decl = 1
then :
  
else case e in @%:@(
  e) 
if test "$(eval echo \$"$(eval 'echo ac_cv_func_${as_decl_name}')")" = "yes"
then
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}:     note: earlier check for $(eval 'echo ${as_decl_name}') superseded." >&5
printf "%s\n" "$as_me:     note: earlier check for $(eval 'echo ${as_decl_name}') superseded." >&6;}
    eval "ac_cv_func_${as_decl_name}=no"
    _mask_varname=HAVE_`eval "echo '${as_decl_name}'" | tr 'a-z' 'A-Z'`
    sed --in-place "s~^#define ${_mask_varname} 1$~~" confdefs.h
fi
 ;;
esac
fi
ac_fn_check_decl "$LINENO" "memset" "ac_cv_have_decl_memset" "
#ifdef HAVE_SYS_SOCKET_H
    #include <sys/socket.h>
#endif
#ifdef HAVE_STRING_H
    #include <string.h>
#endif
#ifdef HAVE_NETDB_H
    #include <netdb.h>
#endif
#ifdef HAVE_ARPA_INET_H
    #include <arpa/inet.h>
#endif
#ifdef HAVE_SYS_TIME_H
    #include <sys/time.h>
#endif
#ifdef HAVE_TIME_H
    #include <time.h>
#endif
#ifdef HAVE_STDLIB_H
    #include <stdlib.h>
#endif

" "$ac_c_undeclared_builtin_options" "CFLAGS"
if test "x$ac_cv_have_decl_memset" = xyes
then :
  ac_have_decl=1
else case e in @%:@(
  e) ac_have_decl=0 ;;
esac
fi
printf "%s\n" "@%:@define HAVE_DECL_MEMSET $ac_have_decl" >>confdefs.h
if test $ac_have_decl = 1
then :
  
else case e in @%:@(
  e) 
if test "$(eval echo \$"$(eval 'echo ac_cv_func_${as_decl_name}')")" = "yes"
then
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}:     note: earlier check for $(eval 'echo ${as_decl_name}') superseded." >&5
printf "%s\n" "$as_me:     note: earlier check for $(eval 'echo ${as_decl_name}') superseded." >&6;}
    eval "ac_cv_func_${as_decl_name}=no"
    _mask_varname=HAVE_`eval "echo '${as_decl_name}'" | tr 'a-z' 'A-Z'`
    sed --in-place "s~^#define ${_mask_varname} 1$~~" confdefs.h
fi
 ;;
esac
fi
ac_fn_check_decl "$LINENO" "socket" "ac_cv_have_decl_socket" "
#ifdef HAVE_SYS_SOCKET_H
    #include <sys/socket.h>
#endif
#ifdef HAVE_STRING_H
    #include <string.h>
#endif
#ifdef HAVE_NETDB_H
    #include <netdb.h>
#endif
#ifdef HAVE_ARPA_INET_H
    #include <arpa/inet.h>
#endif
#ifdef HAVE_SYS_TIME_H
    #include <sys/time.h>
#endif
#ifdef HAVE_TIME_H
    #include <time.h>
#endif
#ifdef HAVE_STDLIB_H
    #include <stdlib.h>
#endif

" "$ac_c_undeclared_builtin_options" "CFLAGS"
if test "x$ac_cv_have_decl_socket" = xyes
then :
  ac_have_decl=1
else case e in @%:@(
  e) ac_have_decl=0 ;;
esac
fi
printf "%s\n" "@%:@define HAVE_DECL_SOCKET $ac_have_decl" >>confdefs.h
if test $ac_have_decl = 1
then :
  
else case e in @%:@(
  e) 
if test "$(eval echo \$"$(eval 'echo ac_cv_func_${as_decl_name}')")" = "yes"
then
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}:     note: earlier check for $(eval 'echo ${as_decl_name}') superseded." >&5
printf "%s\n" "$as_me:     note: earlier check for $(eval 'echo ${as_decl_name}') superseded." >&6;}
    eval "ac_cv_func_${as_decl_name}=no"
    _mask_varname=HAVE_`eval "echo '${as_decl_name}'" | tr 'a-z' 'A-Z'`
    sed --in-place "s~^#define ${_mask_varname} 1$~~" confdefs.h
fi
 ;;
esac
fi
ac_fn_check_decl "$LINENO" "strftime" "ac_cv_have_decl_strftime" "
#ifdef HAVE_SYS_SOCKET_H
    #include <sys/socket.h>
#endif
#ifdef HAVE_STRING_H
    #include <string.h>
#endif
#ifdef HAVE_NETDB_H
    #include <netdb.h>
#endif
#ifdef HAVE_ARPA_INET_H
    #include <arpa/inet.h>
#endif
#ifdef HAVE_SYS_TIME_H
    #include <sys/time.h>
#endif
#ifdef HAVE_TIME_H
    #include <time.h>
#endif
#ifdef HAVE_STDLIB_H
    #include <stdlib.h>
#endif

" "$ac_c_undeclared_builtin_options" "CFLAGS"
if test "x$ac_cv_have_decl_strftime" = xyes
then :
  ac_have_decl=1
else case e in @%:@(
  e) ac_have_decl=0 ;;
esac
fi
printf "%s\n" "@%:@define HAVE_DECL_STRFTIME $ac_have_decl" >>confdefs.h
if test $ac_have_decl = 1
then :
  
else case e in @%:@(
  e) 
if test "$(eval echo \$"$(eval 'echo ac_cv_func_${as_decl_name}')")" = "yes"
then
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}:     note: earlier check for $(eval 'echo ${as_decl_name}') superseded." >&5
printf "%s\n" "$as_me:     note: earlier check for $(eval 'echo ${as_decl_name}') superseded." >&6;}
    eval "ac_cv_func_${as_decl_name}=no"
    _mask_varname=HAVE_`eval "echo '${as_decl_name}'" | tr 'a-z' 'A-Z'`
    sed --in-place "s~^#define ${_mask_varname} 1$~~" confdefs.h
fi
 ;;
esac
fi
ac_fn_check_decl "$LINENO" "atexit" "ac_cv_have_decl_atexit" "
#ifdef HAVE_SYS_SOCKET_H
    #include <sys/socket.h>
#endif
#ifdef HAVE_STRING_H
    #include <string.h>
#endif
#ifdef HAVE_NETDB_H
    #include <netdb.h>
#endif
#ifdef HAVE_ARPA_INET_H
    #include <arpa/inet.h>
#endif
#ifdef HAVE_SYS_TIME_H
    #include <sys/time.h>
#endif
#ifdef HAVE_TIME_H
    #include <time.h>
#endif
#ifdef HAVE_STDLIB_H
    #include <stdlib.h>
#endif

" "$ac_c_undeclared_builtin_options" "CFLAGS"
if test "x$ac_cv_have_decl_atexit" = xyes
then :
  ac_have_decl=1
else case e in @%:@(
  e) ac_have_decl=0 ;;
esac
fi
printf "%s\n" "@%:@define HAVE_DECL_ATEXIT $ac_have_decl" >>confdefs.h
if test $ac_have_decl = 1
then :
  
else case e in @%:@(
  e) 
if test "$(eval echo \$"$(eval 'echo ac_cv_func_${as_decl_name}')")" = "yes"
then
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}:     note: earlier check for $(eval 'echo ${as_decl_name}') superseded." >&5
printf "%s\n" "$as_me:     note: earlier check for $(eval 'echo ${as_decl_name}') superseded." >&6;}
    eval "ac_cv_func_${as_decl_name}=no"
    _mask_varname=HAVE_`eval "echo '${as_decl_name}'" | tr 'a-z' 'A-Z'`
    sed --in-place "s~^#define ${_mask_varname} 1$~~" confdefs.h
fi
 ;;
esac
fi



  # Find a good install program.  We prefer a C program (faster),
# so one script is as good as another.  But avoid the broken or
# incompatible versions:
# SysV /etc/install, /usr/sbin/install
# SunOS /usr/etc/install
# IRIX /sbin/install
# AIX /bin/install
# AmigaOS /C/install, which installs bootblocks on floppy discs
# AIX 4 /usr/bin/installbsd, which doesn't work without a -g flag
# AFS /usr/afsws/bin/install, which mishandles nonexistent args
# SVR4 /usr/ucb/install, which tries to use the nonexistent group "staff"
# OS/2's system install, which has a completely different semantic
# ./install, which can be erroneously created by make from ./install.sh.
# Reject install programs that cannot install multiple files.
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for a BSD-compatible install" >&5
printf %s "checking for a BSD-compatible install... " >&6; }
if test -z "$INSTALL"; then
if test ${ac_cv_path_install+y}
then :
  printf %s "(cached) " >&6
else case e in @%:@(
  e) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in @%:@(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    # Account for fact that we put trailing slashes in our PATH walk.
case $as_dir in @%:@((
  ./ | /[cC]/* | \
  /etc/* | /usr/sbin/* | /usr/etc/* | /sbin/* | /usr/afsws/bin/* | \
  ?:[\\/]os2[\\/]install[\\/]* | ?:[\\/]OS2[\\/]INSTALL[\\/]* | \
  /usr/ucb/* ) ;;
  *)
    # OSF1 and SCO ODT 3.0 have their own names for install.
    # Don't use installbsd from OSF since it installs stuff as root
    # by default.
    for ac_prog in ginstall scoinst install; do
      for ac_exec_ext in '' $ac_executable_extensions; do
	if as_fn_executable_p "$as_dir$ac_prog$ac_exec_ext"; then
	  if test $ac_prog = install &&
	    grep dspmsg "$as_dir$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
	    # AIX install.  It has an incompatible calling convention.
	    :
	  elif test $ac_prog = install &&
	    grep pwplus "$as_dir$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
	    # program-specific install script used by HP pwplus--don't use.
	    :
	  else
	    rm -rf conftest.one conftest.two conftest.dir
	    echo one > conftest.one
	    echo two > conftest.two
	    mkdir conftest.dir
	    if "$as_dir$ac_prog$ac_exec_ext" -c conftest.one conftest.two "`pwd`/conftest.dir/" &&
	      test -s conftest.one && test -s conftest.two &&
	      test -s conftest.dir/conftest.one &&
	      test -s conftest.dir/conftest.two
	    then
	      ac_cv_path_install="$as_dir$ac_prog$ac_exec_ext -c"
	      break 3
	    fi
	  fi
	fi
      done
    done
    ;;
esac

  done
IFS=$as_save_IFS

rm -rf conftest.one conftest.two conftest.dir
 ;;
esac
fi
  if test ${ac_cv_path_install+y}; then
    INSTALL=$ac_cv_path_install
  else
    # As a last resort, use the slow shell script.  Don't cache a
    # value for INSTALL within a source directory, because that will
    # break other packages using the cache if that directory is
    # removed, or if the value is a relative name.
    INSTALL=$ac_install_sh
  fi
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $INSTALL" >&5
printf "%s\n" "$INSTALL" >&6; }

# Use test -z because SunOS4 sh mishandles braces in ${var-val}.
# It thinks the first close brace ends the variable substitution.
test -z "$INSTALL_PROGRAM" && INSTALL_PROGRAM='${INSTALL}'

test -z "$INSTALL_SCRIPT" && INSTALL_SCRIPT='${INSTALL}'

test -z "$INSTALL_DATA" && INSTALL_DATA='${INSTALL} -m 644'

ac_fn_c_check_type "$LINENO" "size_t" "ac_cv_type_size_t" "$ac_includes_default"
if test "x$ac_cv_type_size_t" = xyes
then :
  
else case e in @%:@(
  e) 
printf "%s\n" "@%:@define size_t unsigned int" >>confdefs.h
 ;;
esac
fi

ac_fn_c_find_uintX_t "$LINENO" "8" "ac_cv_c_uint8_t"
case $ac_cv_c_uint8_t in #(
  no|yes) ;; #(
  *)
    
printf "%s\n" "@%:@define _UINT8_T 1" >>confdefs.h

    
printf "%s\n" "@%:@define uint8_t $ac_cv_c_uint8_t" >>confdefs.h
;;
  esac


  ac_fn_c_check_type "$LINENO" "uintptr_t" "ac_cv_type_uintptr_t" "$ac_includes_default"
if test "x$ac_cv_type_uintptr_t" = xyes
then :
  
printf "%s\n" "@%:@define HAVE_UINTPTR_T 1" >>confdefs.h

else case e in @%:@(
  e) for ac_type in 'unsigned int' 'unsigned long int' \
	'unsigned long long int'; do
       cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$ac_includes_default
int
main (void)
{
static int test_array @<:@1 - 2 * !(sizeof (void *) <= sizeof ($ac_type))@:>@;
test_array @<:@0@:>@ = 0;
return test_array @<:@0@:>@;

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  
printf "%s\n" "@%:@define uintptr_t $ac_type" >>confdefs.h

	  ac_type=
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
       test -z "$ac_type" && break
     done ;;
esac
fi


AM_PROG_AS

OPTIMIZE_CFLAGS="-Os"
OPTIMIZE_FAST_CFLAGS="-O2"
OPTIMIZE_HUGE_CFLAGS="-funroll-loops -DTFM_SMALL_SET -DTFM_HUGE_SET"
DEBUG_CFLAGS="-g -DDEBUG -DDEBUG_WOLFSSL"
LIB_ADD=
LIB_STATIC_ADD=

if test "$output_objdir" = ""
then
    output_objdir=.
fi


# Thread local storage
thread_ls_on="no"
@%:@ Check whether --enable-threadlocal was given.
if test ${enable_threadlocal+y}
then :
  enableval=$enable_threadlocal;  ENABLED_THREADLOCAL=$enableval 
else case e in @%:@(
  e)  ENABLED_THREADLOCAL=yes 
     ;;
esac
fi

if test "$ENABLED_THREADLOCAL" = "yes"
then
    AX_TLS(thread_ls_on=yes,thread_ls_on=no)
    if test "x$thread_ls_on" = "xyes"
then :
  AM_CFLAGS="$AM_CFLAGS -DHAVE_THREAD_LS"
fi
fi


# DEBUG
AX_DEBUG
if test "$ax_enable_debug" = "yes"
then :
  AM_CFLAGS="$AM_CFLAGS $DEBUG_CFLAGS"
else case e in @%:@(
  e) AM_CFLAGS="$AM_CFLAGS -DNDEBUG" ;;
esac
fi
if test "$ax_enable_debug" = "yes"
then :
  AM_CCASFLAGS="$DEBUG_CFLAGS $AM_CCASFLAGS"
else case e in @%:@(
  e) AM_CCASFLAGS="$AM_CCASFLAGS -DNDEBUG" ;;
esac
fi

# Start without certificates enabled and enable if a certificate algorithm is
# enabled
ENABLED_CERTS="no"

# Implements requirements from RFC9325
@%:@ Check whether --enable-harden-tls was given.
if test ${enable_harden_tls+y}
then :
  enableval=$enable_harden_tls;  ENABLED_HARDEN_TLS=$enableval 
else case e in @%:@(
  e)  ENABLED_HARDEN_TLS=no 
     ;;
esac
fi


if test "x$ENABLED_HARDEN_TLS" != "xno"
then
    if test "x$ENABLED_HARDEN_TLS" = "xyes" || test "x$ENABLED_HARDEN_TLS" = "x112"
    then
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_HARDEN_TLS=112"
    elif test "x$ENABLED_HARDEN_TLS" = "x128"
    then
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_HARDEN_TLS=128"
    else
        as_fn_error $? "Invalid value for --enable-harden-tls" "$LINENO" 5
    fi
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_EXTRA_ALERTS -DWOLFSSL_CHECK_ALERT_ON_ERR"
fi

# Support for forcing 32-bit mode
# To force 32-bit instructions use:
#   ./configure CFLAGS="-m32" LDFLAGS="-m32" && make
# The checks for sizeof long and long/long are run at the top of configure and require "-m32" to be set directly in the ./configure statement.
@%:@ Check whether --enable-32bit was given.
if test ${enable_32bit+y}
then :
  enableval=$enable_32bit;  ENABLED_32BIT=$enableval 
else case e in @%:@(
  e)  ENABLED_32BIT=no 
     ;;
esac
fi


# 16-bit compiler support
@%:@ Check whether --enable-16bit was given.
if test ${enable_16bit+y}
then :
  enableval=$enable_16bit;  ENABLED_16BIT=$enableval 
else case e in @%:@(
  e)  ENABLED_16BIT=no 
     ;;
esac
fi

if test "$ENABLED_16BIT" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWC_16BIT_CPU"
fi

@%:@ Check whether --enable-64bit was given.
if test ${enable_64bit+y}
then :
  enableval=$enable_64bit;  ENABLED_64BIT=$enableval 
else case e in @%:@(
  e)  ENABLED_64BIT=no 
     ;;
esac
fi


@%:@ Check whether --enable-kdf was given.
if test ${enable_kdf+y}
then :
  enableval=$enable_kdf;  ENABLED_KDF=$enableval 
else case e in @%:@(
  e)  ENABLED_KDF=yes 
     ;;
esac
fi


@%:@ Check whether --enable-hmac was given.
if test ${enable_hmac+y}
then :
  enableval=$enable_hmac;  ENABLED_HMAC=$enableval 
else case e in @%:@(
  e)  ENABLED_HMAC=yes 
     ;;
esac
fi


@%:@ Check whether --enable-do178 was given.
if test ${enable_do178+y}
then :
  enableval=$enable_do178; ENABLED_DO178=$enableval
else case e in @%:@(
  e) ENABLED_DO178="no" ;;
esac
fi


if test "$ENABLED_DO178" = "no"
then
    AM_CFLAGS="$AM_CFLAGS -DNO_DO178"
else
    AM_CFLAGS="$AM_CFLAGS -DHAVE_DO178"
fi
# Support for disabling all ASM
@%:@ Check whether --enable-asm was given.
if test ${enable_asm+y}
then :
  enableval=$enable_asm;  ENABLED_ASM=$enableval 
else case e in @%:@(
  e)  ENABLED_ASM=yes 
     ;;
esac
fi


if test "$ENABLED_ASM" = "no"
then
    AM_CFLAGS="$AM_CFLAGS -DTFM_NO_ASM -DWOLFSSL_NO_ASM"
fi



# Default math is SP Math all and not fast math
# FIPS v1 and v2 must use fast math
DEF_SP_MATH="yes"
DEF_FAST_MATH="no"

# FIPS 140
@%:@ Check whether --enable-fips was given.
if test ${enable_fips+y}
then :
  enableval=$enable_fips; ENABLED_FIPS=$enableval
else case e in @%:@(
  e) ENABLED_FIPS="no" ;;
esac
fi


# wolfEngine Options
@%:@ Check whether --enable-engine was given.
if test ${enable_engine+y}
then :
  enableval=$enable_engine;  ENABLED_WOLFENGINE=$enableval 
else case e in @%:@(
  e)  ENABLED_WOLFENGINE=no 
     ;;
esac
fi


case $ENABLED_WOLFENGINE in @%:@(
  no) :
    
        ENABLED_WOLFENGINE="no"
     ;; @%:@(
  disabled) :
    
        ENABLED_WOLFENGINE="no"
     ;; @%:@(
  yes|fips-v2|cert3389) :
    
        ENABLED_WOLFENGINE="yes"
        ENABLED_FIPS="v2"
     ;; @%:@(
  fips-v5) :
    
        ENABLED_WOLFENGINE="yes"
        ENABLED_FIPS="v5"
     ;; @%:@(
  fips-ready) :
    
        ENABLED_WOLFENGINE="yes"
        ENABLED_FIPS="ready"
     ;; @%:@(
  no-fips) :
    
        ENABLED_WOLFENGINE="yes"
        ENABLED_FIPS="no"
     ;; @%:@(
  *) :
    
        as_fn_error $? "Invalid value for --enable-engine \"$ENABLED_WOLFENGINE\" (options: fips-v2, fips-ready, no-fips, no, disabled)" "$LINENO" 5
     ;;
esac

# The FIPS options are:
#   no - FIPS build disabled, FIPS sources forbidden in build tree
#   disabled - FIPS build disabled, FIPS sources ignored in build tree
#   v1 - FIPS 140-2 Cert 2425
#   default - same as v1
#   v2 - FIPS 140-2 Cert 3389
#   cert3389 - alias for v2
#   rand - wolfRand
#   v5-RC12 - FIPS 140-3, wolfCrypt/fips WCv5.0-RC12
#   v5 - currently, alias for v5-RC12
#   ready - FIPS 140-3 settings with in-tree wolfcrypt sources, feature locked
#   dev - FIPS 140-3 settings with in-tree wolfcrypt sources, features freely adjustable
#   v5-ready - Alias for ready.
#   v5-dev - Alias for dev.
#
# These options have been retired, but are listed here for historical reference:
#   v5-RC8 - historical FIPS 140-3 (wolfCrypt WCv5.0-RC8).
#            HAVE_FIPS_VERSION = 5, HAVE_FIPS_VERSION_MINOR = 0.
#   v5-RC9 - historical FIPS 140-3 (wolfCrypt WCv5.0-RC9)
#            HAVE_FIPS_VERSION = 5, HAVE_FIPS_VERSION_MINOR = 1.
#   v5-RC10 - historical FIPS 140-3, wolfCrypt/fips WCv5.0-RC10
#             HAVE_FIPS_VERSION = 5, HAVE_FIPS_VERSION_MINOR = 2.
#   v5-RC11 - historical FIPS 140-3, wolfCrypt/fips WCv5.0-RC11
#             HAVE_FIPS_VERSION = 5, HAVE_FIPS_VERSION_MINOR = 2.
case $ENABLED_FIPS in @%:@(
  no) :
    
        FIPS_VERSION="none"
     ;; @%:@(
  disabled) :
    
        FIPS_VERSION="disabled"
        ENABLED_FIPS="no"
     ;; @%:@(
  v1|yes|cert2425) :
    
        FIPS_VERSION="v1"
        HAVE_FIPS_VERSION=1
        ENABLED_FIPS="yes"
        DEF_SP_MATH="no"
        DEF_FAST_MATH="yes"
     ;; @%:@(
  v2|cert3389) :
    
        FIPS_VERSION="v2"
        HAVE_FIPS_VERSION=2
        HAVE_FIPS_VERSION_MINOR=0
        ENABLED_FIPS="yes"
        DEF_SP_MATH="no"
        DEF_FAST_MATH="yes"
     ;; @%:@(
  rand) :
    
        FIPS_VERSION="rand"
        HAVE_FIPS_VERSION=2
        HAVE_FIPS_VERSION_MINOR=1
        ENABLED_FIPS="yes"
        DEF_SP_MATH="no"
        DEF_FAST_MATH="no"
     ;; @%:@(
  v5|v5-RC12) :
    
        FIPS_VERSION="v5-RC12"
        HAVE_FIPS_VERSION=5
        HAVE_FIPS_VERSION_MINOR=2
        ENABLED_FIPS="yes"
        DEF_SP_MATH="no"
        DEF_FAST_MATH="yes"
     ;; @%:@(
  ready|v5-ready) :
    
        FIPS_VERSION="ready"
        HAVE_FIPS_VERSION=5
        HAVE_FIPS_VERSION_MINOR=3
        ENABLED_FIPS="yes"
        DEF_SP_MATH="no"
        DEF_FAST_MATH="yes"
     ;; @%:@(
  dev|v5-dev) :
    
        FIPS_VERSION="dev"
        HAVE_FIPS_VERSION=5
        HAVE_FIPS_VERSION_MINOR=3
        ENABLED_FIPS="yes"
        # for dev, DEF_SP_MATH and DEF_FAST_MATH follow non-FIPS defaults (currently sp-math-all)
     ;; @%:@(
  *) :
    
        as_fn_error $? "Invalid value for --enable-fips \"$ENABLED_FIPS\" (main options: v1, v2, v5, ready, dev, rand, no, disabled)" "$LINENO" 5
     ;;
esac

if test -z "$HAVE_FIPS_VERSION_MINOR"
then
    HAVE_FIPS_VERSION_MINOR=0
fi
if test -z "$HAVE_FIPS_VERSION"
then
    HAVE_FIPS_VERSION=0
fi

if test "$ENABLED_FIPS" != "no"
then
    REPRODUCIBLE_BUILD_DEFAULT=yes
fi

case $FIPS_VERSION in @%:@(
  none) :
    
      if  test -s $srcdir/wolfcrypt/src/fips.c 
then :
  as_fn_error $? "FIPS source tree is incompatible with non-FIPS build (requires --enable-fips)" "$LINENO" 5
fi
     ;; @%:@(
  disabled) :
     ;; @%:@(
  *) :
    
      if  ! test -s $srcdir/wolfcrypt/src/fips.c
then :
  as_fn_error $? "non-FIPS source tree is incompatible with --enable-fips=$enableval" "$LINENO" 5
fi
    
 ;;
esac

# For reproducible build, gate out from the build anything that might
# introduce semantically frivolous jitter, maximizing chance of
# identical object files.
@%:@ Check whether --enable-reproducible-build was given.
if test ${enable_reproducible_build+y}
then :
  enableval=$enable_reproducible_build;  ENABLED_REPRODUCIBLE_BUILD=$enableval 
else case e in @%:@(
  e)  ENABLED_REPRODUCIBLE_BUILD=$REPRODUCIBLE_BUILD_DEFAULT 
     ;;
esac
fi


if test "$ENABLED_REPRODUCIBLE_BUILD" = "yes"
then
    # Test ar for the "D" option. Should be checked before the libtool macros.
    if test -z "$AR"; then
        AR=ar
    fi
    xxx_ar_flags=$(${AR} --help 2>&1)
    if test -z "$RANLIB"; then
        RANLIB=ranlib
    fi
    xxx_ranlib_flags=$(${RANLIB} --help 2>&1)

    case $xxx_ar_flags in @%:@(
  *'use zero for timestamps and uids/gids'*) :
    AR_FLAGS="Dcr" lt_ar_flags="Dcr" ;; @%:@(
  *) :
     ;;
esac
    case $xxx_ranlib_flags in @%:@(
  *'Use zero for symbol map timestamp'*) :
    RANLIB="${RANLIB} -D" ;; @%:@(
  *) :
     ;;
esac

    AM_CFLAGS="$AM_CFLAGS -DHAVE_REPRODUCIBLE_BUILD -g0"

    # opportunistically use -ffile-prefix-map (added in GCC8 and LLVM10)

    if "$CC" -ffile-prefix-map=/tmp=. -x c - -o /dev/null >/dev/null 2>&1 <<'        EOF'
        #include <stdlib.h>
        int main(int argc, char **argv) {
            (void)argc; (void)argv; return 0;
        }
        EOF
    then
        AM_CFLAGS="$AM_CFLAGS -ffile-prefix-map=\$(abs_top_srcdir)/= -ffile-prefix-map=\$(top_srcdir)/="
    fi

    # opportunistically use linker option --build-id=none

    if "$CC" -Wl,--build-id=none -x c - -o /dev/null >/dev/null 2>&1 <<'        EOF'
        #include <stdlib.h>
        int main(int argc, char **argv) {
            (void)argc; (void)argv; return 0;
        }
        EOF
    then
        AM_LDFLAGS="$AM_LDFLAGS -Wl,--build-id=none"
    fi
fi


@%:@ Check whether --enable-benchmark was given.
if test ${enable_benchmark+y}
then :
  enableval=$enable_benchmark; ENABLED_BENCHMARK=$enableval
else case e in @%:@(
  e) ENABLED_BENCHMARK=yes
     ;;
esac
fi



# Linux Kernel Module
@%:@ Check whether --enable-linuxkm was given.
if test ${enable_linuxkm+y}
then :
  enableval=$enable_linuxkm; ENABLED_LINUXKM=$enableval
else case e in @%:@(
  e) ENABLED_LINUXKM=no
     ;;
esac
fi


@%:@ Check whether --enable-linuxkm-defaults was given.
if test ${enable_linuxkm_defaults+y}
then :
  enableval=$enable_linuxkm_defaults; ENABLED_LINUXKM_DEFAULTS=$enableval
else case e in @%:@(
  e) ENABLED_LINUXKM_DEFAULTS=$ENABLED_LINUXKM
     ;;
esac
fi


@%:@ Check whether --enable-linuxkm-pie was given.
if test ${enable_linuxkm_pie+y}
then :
  enableval=$enable_linuxkm_pie; ENABLED_LINUXKM_PIE=$enableval
else case e in @%:@(
  e) ENABLED_LINUXKM_PIE=$ENABLED_FIPS
     ;;
esac
fi

if test "$ENABLED_LINUXKM_PIE" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_LINUXKM_PIE_SUPPORT"
elif test "$ENABLED_FIPS" = yes && test "$ENABLED_LINUXKM" = yes
then
    as_fn_error $? "FIPS linuxkm requires linuxkm-pie." "$LINENO" 5
fi


@%:@ Check whether --enable-linuxkm-benchmarks was given.
if test ${enable_linuxkm_benchmarks+y}
then :
  enableval=$enable_linuxkm_benchmarks; ENABLED_LINUXKM_BENCHMARKS=$enableval
else case e in @%:@(
  e) ENABLED_LINUXKM_BENCHMARKS=no
     ;;
esac
fi

if test "$ENABLED_LINUXKM_BENCHMARKS" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_LINUXKM_BENCHMARKS"
fi


if test "$ENABLED_LINUXKM_DEFAULTS" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DH_CONST -DWOLFSSL_SP_MOD_WORD_RP -DWOLFSSL_SP_DIV_64 -DWOLFSSL_SP_DIV_WORD_HALF -DWOLFSSL_SMALL_STACK_STATIC -DWOLFSSL_TEST_SUBROUTINE=static"
    if test "$ENABLED_LINUXKM_PIE" = "yes"; then
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_NO_OCSP_ISSUER_CHECK"
    fi
    if test "$ENABLED_FIPS" = "no"; then
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_OLD_PRIME_CHECK"
    fi
    DEF_SP_MATH="yes"
    DEF_FAST_MATH="no"
fi


@%:@ Check whether --with-linux-source was given.
if test ${with_linux_source+y}
then :
  withval=$with_linux_source; KERNEL_ROOT=$withval
else case e in @%:@(
  e) KERNEL_ROOT="" ;;
esac
fi



@%:@ Check whether --with-linux-arch was given.
if test ${with_linux_arch+y}
then :
  withval=$with_linux_arch; KERNEL_ARCH=$withval
else case e in @%:@(
  e) KERNEL_ARCH="" ;;
esac
fi


if test "x$ENABLED_LINUXKM" = "xyes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_LINUXKM"
    ENABLED_NO_LIBRARY=yes
    ENABLED_BENCHMARK=no
    output_objdir="$(realpath "$output_objdir")/linuxkm"

    if test "$KERNEL_ROOT" = ""; then
        AC_PATH_DEFAULT_KERNEL_SOURCE
        KERNEL_ROOT="$DEFAULT_KERNEL_ROOT"
    fi
    

    if test "$KERNEL_ARCH" = ""; then
        AC_DEFAULT_KERNEL_ARCH
        KERNEL_ARCH="$DEFAULT_KERNEL_ARCH"
    fi
    

    if test "${KERNEL_ROOT}" = ""; then
        as_fn_error $? "Linux kernel source root not found -- supply with --with-linux-source=PATH." "$LINENO" 5
    fi
    if test "${KERNEL_ARCH}" = ""; then
        as_fn_error $? "Linux kernel target architecture for build tree ${KERNEL_ROOT} could not be determined.  Is target kernel configured?" "$LINENO" 5
    fi

    AM_CFLAGS="$AM_CFLAGS -DNO_DEV_RANDOM -DNO_WRITEV -DNO_STDIO_FILESYSTEM -DWOLFSSL_NO_SOCK -DWOLFSSL_USER_IO"
fi


# MATH LIBRARY SELECTION

# Single Precision maths implementation
@%:@ Check whether --enable-sp was given.
if test ${enable_sp+y}
then :
  enableval=$enable_sp;  ENABLED_SP=$enableval 
else case e in @%:@(
  e)  ENABLED_SP=$ENABLED_SP_DEFAULT  ;;
esac
fi


@%:@ Check whether --enable-sp-math-all was given.
if test ${enable_sp_math_all+y}
then :
  enableval=$enable_sp_math_all;  ENABLED_SP_MATH_ALL=$enableval 
else case e in @%:@(
  e)  ENABLED_SP_MATH_ALL=$DEF_SP_MATH  ;;
esac
fi


# Single Precision maths (acceleration for common key sizes and curves)
if test "$ENABLED_LINUXKM_DEFAULTS" = "yes" && test "$ENABLED_SP" != "no" && test "$ENABLED_SP_MATH_ALL" = "no"
then
    ENABLED_SP_MATH_DEFAULT=yes
else
    ENABLED_SP_MATH_DEFAULT=no
fi
@%:@ Check whether --enable-sp-math was given.
if test ${enable_sp_math+y}
then :
  enableval=$enable_sp_math;  ENABLED_SP_MATH=$enableval 
else case e in @%:@(
  e)  ENABLED_SP_MATH=$ENABLED_SP_MATH_DEFAULT  ;;
esac
fi


if test "$enable_sp_math" != ""
then
    # When the restricted SP Math is selected and not SP Math ALL, then disable
    # SP Math ALL.
    if test "$enable_sp_math" != "no" && test "$enable_sp_math_all" = ""
    then
        ENABLED_SP_MATH_ALL="no"
    else
        # Can't choose restricted and unrestricted SP Math
        if test "$enable_sp_math" != "no" && test "$enable_sp_math_all" != "no"
        then
            as_fn_error $? "--enable-sp-math and --enable-sp-math-all are incompatible. Use --enable-sp-math-all only when all key sizes need to be supported." "$LINENO" 5
        fi
    fi
fi

# enable SP math assembly support automatically for x86_64 and aarch64 (except Linux kernel module)
SP_ASM_DEFAULT=no
if test "$ENABLED_SP_MATH" = "yes" && test "$ENABLED_LINUXKM_DEFAULTS" = "no"
then
    if test "$host_cpu" = "x86_64" || test "$host_cpu" = "aarch64" || test "$host_cpu" = "amd64"
    then
        SP_ASM_DEFAULT=yes
    fi
fi
@%:@ Check whether --enable-sp-asm was given.
if test ${enable_sp_asm+y}
then :
  enableval=$enable_sp_asm;  ENABLED_SP_ASM=$enableval 
else case e in @%:@(
  e)  ENABLED_SP_ASM=$SP_ASM_DEFAULT  ;;
esac
fi


if test "$ENABLED_SP_ASM" != "no"
then
    if test "$ENABLED_SP" = "no"
    then
        as_fn_error $? "--enable-sp-asm requires SP to be enabled." "$LINENO" 5
    fi
    if test "$ENABLED_SP" = ""
    then
        ENABLED_SP=yes
    fi
fi

# fastmath
@%:@ Check whether --enable-fastmath was given.
if test ${enable_fastmath+y}
then :
  enableval=$enable_fastmath;  ENABLED_FASTMATH=$enableval 
else case e in @%:@(
  e)  ENABLED_FASTMATH=$DEF_FAST_MATH 
     ;;
esac
fi


# fast HUGE math
@%:@ Check whether --enable-fasthugemath was given.
if test ${enable_fasthugemath+y}
then :
  enableval=$enable_fasthugemath;  ENABLED_FASTHUGEMATH=$enableval 
else case e in @%:@(
  e)  ENABLED_FASTHUGEMATH=no 
     ;;
esac
fi


if test "$ENABLED_BUMP" = "yes"
then
    ENABLED_FASTHUGEMATH="yes"
fi

if test "$ENABLED_FASTHUGEMATH" = "yes"
then
    ENABLED_FASTMATH="yes"
fi

if test "$host_cpu" = "x86_64" || test "$host_cpu" = "amd64"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_X86_64_BUILD"
fi
if test "$host_cpu" = "x86"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_X86_BUILD"
fi

# if sp-math-all is not set, then enable fast math
if test "x$ENABLED_FASTMATH" = "xyes" && test "$enable_sp_math_all" = "" && test "$enable_sp_math" = ""
then
    # turn off fastmath if leanpsk on or asn off (w/o DH and ECC)
    if test "$ENABLED_LEANPSK" = "yes" || test "$ENABLED_ASN" = "no"
    then
        if test "$ENABLED_DH" = "no" && test "$ENABLED_ECC" = "no" && test "$ENABLED_RSA" = "no"
        then
            ENABLED_FASTMATH="no"
        else
            AM_CFLAGS="$AM_CFLAGS -DUSE_FAST_MATH"
            ENABLED_HEAPMATH="no"
        fi
    else
        AM_CFLAGS="$AM_CFLAGS -DUSE_FAST_MATH"
        ENABLED_HEAPMATH="no"
        ENABLED_SP_MATH_ALL="no"
    fi
    if test "x$host_cpu" = "xaarch64"
then :
  AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_AARCH64_BUILD"
fi

    if test "$ENABLED_SAKKE" = "yes" && test "$ENABLED_SAKKE_SMALL" != "yes"
    then
        AM_CFLAGS="$AM_CFLAGS -funroll-loops -DTFM_SMALL_SET"
    fi
fi


# heap based integer.c math (not timing resistant)
@%:@ Check whether --enable-heapmath was given.
if test ${enable_heapmath+y}
then :
  enableval=$enable_heapmath;  ENABLED_HEAPMATH=$enableval 
else case e in @%:@(
  e)  ENABLED_HEAPMATH=no
     ;;
esac
fi

if test "x$ENABLED_HEAPMATH" = "xyes"
then
    AM_CFLAGS="$AM_CFLAGS -DUSE_INTEGER_HEAP_MATH"
    ENABLED_HEAPMATH="yes"
    ENABLED_SP="no"
    ENABLED_SP_MATH_ALL="no"
fi



# ALL FEATURES
@%:@ Check whether --enable-all was given.
if test ${enable_all+y}
then :
  enableval=$enable_all;  ENABLED_ALL=$enableval 
else case e in @%:@(
  e)  ENABLED_ALL=no 
     ;;
esac
fi

if test "$ENABLED_ALL" = "yes"
then
    test "$enable_dtls" = "" && enable_dtls=yes
    if test "x$FIPS_VERSION" != "xv1"
    then
        test "$enable_tls13" = "" && enable_tls13=yes
        test "$enable_rsapss" = "" && enable_rsapss=yes
    fi

    # this set is also enabled by enable-all-crypto:
    test "$enable_atomicuser" = "" && enable_atomicuser=yes
    test "$enable_aesgcm" = "" && enable_aesgcm=yes
    test "$enable_aesgcm_stream" = "" && test "$enable_aesgcm" = "yes" && enable_aesgcm_stream=yes
    test "$enable_aesccm" = "" && enable_aesccm=yes
    test "$enable_aesctr" = "" && enable_aesctr=yes
    test "$enable_aeseax" = "" && enable_aeseax=yes
    test "$enable_aesofb" = "" && enable_aesofb=yes
    test "$enable_aescfb" = "" && enable_aescfb=yes
    test "$enable_aescbc_length_checks" = "" && enable_aescbc_length_checks=yes
    test "$enable_camellia" = "" && enable_camellia=yes
    test "$enable_ripemd" = "" && enable_ripemd=yes
    test "$enable_sha224" = "" && enable_sha224=yes
    test "$enable_shake128" = "" && enable_shake128=yes
    test "$enable_shake256" = "" && enable_shake256=yes
    test "$enable_sessioncerts" = "" && enable_sessioncerts=yes
    test "$enable_keygen" = "" && enable_keygen=yes
    test "$enable_certgen" = "" && enable_certgen=yes
    test "$enable_certreq" = "" && enable_certreq=yes
    test "$enable_certext" = "" && enable_certext=yes
    test "$enable_sep" = "" && enable_sep=yes
    test "$enable_hkdf" = "" && enable_hkdf=yes
    test "$enable_curve25519" = "" && enable_curve25519=yes
    test "$enable_curve448" = "" && enable_curve448=yes
    test "$enable_fpecc" = "" && test "$enable_ecc" != "no" && enable_fpecc=yes
    test "$enable_eccencrypt" = "" && test "$enable_ecc" != "no" && enable_eccencrypt=yes
    test "$enable_psk" = "" && enable_psk=yes
    test "$enable_cmac" = "" && enable_cmac=yes
    test "$enable_siphash" = "" && enable_siphash=yes
    test "$enable_ocsp" = "" && enable_ocsp=yes
    test "$enable_ocspstapling" = "" && test "$enable_ocsp" != "no" && enable_ocspstapling=yes
    test "$enable_ocspstapling2" = "" && test "$enable_ocsp" != "no" && enable_ocspstapling2=yes
    test "$enable_crl" = "" && enable_crl=yes
    test "$enable_supportedcurves" = "" && enable_supportedcurves=yes
    test "$enable_tlsx" = "" && enable_tlsx=yes
    test "$enable_pwdbased" = "" && enable_pwdbased=yes
    test "$enable_aeskeywrap" = "" && enable_aeskeywrap=yes
    test "$enable_x963kdf" = "" && enable_x963kdf=yes
    test "$enable_scrypt" = "" && test "$enable_hmac" != "no" && enable_scrypt=yes
    test "$enable_indef" = "" && enable_indef=yes
    test "$enable_enckeys" = "" && enable_enckeys=yes
    test "$enable_hashflags" = "" && enable_hashflags=yes
    test "$enable_defaultdhparams" = "" && enable_defaultdhparams=yes
    test "$enable_base64encode" = "" && enable_base64encode=yes
    test "$enable_base16" = "" && enable_base16=yes
    test "$enable_arc4" = "" && enable_arc4=yes
    test "$enable_des3" = "" && enable_des3=yes
    test "$enable_blake2" = "" && enable_blake2=yes
    test "$enable_blake2s" = "" && enable_blake2s=yes
    test "$enable_md2" = "" && enable_md2=yes
    test "$enable_md4" = "" && enable_md4=yes
    test "$enable_cryptocb" = "" && enable_cryptocb=yes
    test "$enable_anon" = "" && enable_anon=yes
    test "$enable_ssh" = "" && test "$enable_hmac" != "no" && enable_ssh=yes

    test "$enable_savesession" = "" && enable_savesession=yes
    test "$enable_savecert" = "" && enable_savecert=yes
    test "$enable_postauth" = "" && enable_postauth=yes
    test "$enable_hrrcookie" = "" && enable_hrrcookie=yes
    test "$enable_fallback_scsv" = "" && enable_fallback_scsv=yes
    test "$enable_webserver" = "" && enable_webserver=yes
    test "$enable_crl_monitor" = "" && enable_crl_monitor=yes
    test "$enable_sni" = "" && enable_sni=yes
    test "$enable_maxfragment" = "" && enable_maxfragment=yes
    test "$enable_alpn" = "" && enable_alpn=yes
    test "$enable_truncatedhmac" = "" && enable_truncatedhmac=yes
    test "$enable_trusted_ca" = "" && enable_trusted_ca=yes
    test "$enable_session_ticket" = "" && enable_session_ticket=yes
    test "$enable_earlydata" = "" && enable_earlydata=yes
    test "$enable_ech" = "" && enable_ech=yes
    test "$enable_srtp" = "" && enable_srtp=yes

    if test "$ENABLED_32BIT" != "yes"
    then
        test "$enable_sha512" = "" && enable_sha512=yes
        test "$enable_sha3" = "" && enable_sha3=yes
    fi

    if test "$ENABLED_LINUXKM_DEFAULTS" != "yes"
    then
        test "$enable_compkey" = "" && enable_compkey=yes
        test "$enable_quic" = "" && test "$enable_cryptonly" != "yes" && enable_quic=yes
        AM_CFLAGS="$AM_CFLAGS -DHAVE_CRL_IO -DHAVE_IO_TIMEOUT"
    fi

    # sp-math is incompatible with opensslextra, ECC custom curves, and DSA.
    if test "$ENABLED_SP_MATH" = "no"
    then
        test "$enable_dsa" = "" && test "$enable_sha" != "no" && enable_dsa=yes
        test "$enable_ecccustcurves" = "" && enable_ecccustcurves=yes
        test "$enable_brainpool" = "" && enable_brainpool=yes
        test "$enable_srp" = "" && enable_srp=yes
        # linuxkm is incompatible with opensslextra and its dependents.
        if test "$ENABLED_LINUXKM_DEFAULTS" != "yes"
        then
            if test "$ENABLED_FIPS" = "no"
            then
                if test "$ENABLED_32BIT" != "yes"
                then
                    test "$enable_openssh" = "" && enable_openssh=yes
                fi
                # S/MIME support requires PKCS7, which requires no FIPS.
                test "$enable_smime" = "" && enable_smime=yes
            fi
            test "$enable_opensslextra" = "" && enable_opensslextra=yes
            test "$enable_opensslall" = "" && enable_opensslall=yes
            test "$enable_certservice" = "" && enable_certservice=yes
            test "$enable_lighty" = "" && enable_lighty=yes
            test "$enable_nginx" = "" && enable_nginx=yes
            test "$enable_openvpn" = "" && enable_openvpn=yes
            test "$enable_asio" = "" && enable_asio=yes
            test "$enable_libwebsockets" = "" && enable_libwebsockets=yes
            test "$enable_qt" = "" && enable_qt=yes
        fi
    fi

    if test "$ENABLED_FIPS" = "no"
    then
        test "$enable_pkcallbacks" = "" && enable_pkcallbacks=yes
        test "$enable_xchacha" = "" && test "$enable_chacha" != "no" && enable_xchacha=yes
        test "$enable_scep" = "" && enable_scep=yes
        test "$enable_pkcs7" = "" && enable_pkcs7=yes
        test "$enable_nullcipher" = "" && enable_nullcipher=yes
        test "$enable_mcast" = "" && enable_mcast=yes
        if test "$ENABLED_32BIT" != "yes"
        then
            test "$enable_ed25519" = "" && enable_ed25519=yes
            test "$enable_ed25519_stream" = "" && test "$enable_ed25519" != "no" && enable_ed25519_stream=yes
            test "$enable_ed448" = "" && enable_ed448=yes
            test "$enable_ed448_stream" = "" && test "$enable_ed448" != "no" && enable_ed448_stream=yes
        fi

        if test "$ENABLED_LINUXKM_DEFAULTS" != "yes"
        then
            # these use DES3:
            test "$enable_stunnel" = "" && enable_stunnel=yes
            test "$enable_curl" = "" && enable_curl=yes
            test "$enable_tcpdump" = "" && enable_tcpdump=yes

            test "$enable_eccsi" = "" && test "$enable_ecc" != "no" && enable_eccsi=yes
            test "$enable_sakke" = "" && test "$enable_ecc" != "no" && enable_sakke=yes
        fi
    fi

    if test "$ENABLED_FIPS" = "no" || test "$FIPS_VERSION" = "dev"; then
        test "$enable_aesxts" = "" && enable_aesxts=yes
        test "$enable_aessiv" = "" && enable_aessiv=yes
    fi

    # Enable DH const table speedups (eliminates `-lm` math lib dependency)
    AM_CFLAGS="$AM_CFLAGS -DHAVE_FFDHE_2048 -DHAVE_FFDHE_3072"
    DEFAULT_MAX_CLASSIC_ASYM_KEY_BITS=4096

    # Enable multiple attribute additions such as DC
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_MULTI_ATTRIB"

    # Enable AES Decrypt, AES ECB
    AM_CFLAGS="$AM_CFLAGS -DHAVE_AES_DECRYPT -DHAVE_AES_ECB"

    # Enable Alt Names, DER Load, Keep Certs, CRL IO with Timeout
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ALT_NAMES -DWOLFSSL_DER_LOAD -DKEEP_OUR_CERT -DKEEP_PEER_CERT"

    # Enable DH Extra
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DH_EXTRA"

    # Enable deterministic ECC signing API with variant
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ECDSA_DETERMINISTIC_K_VARIANT"

    # Store issuer name components when parsing certificates.
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_HAVE_ISSUER_NAMES"

    # Certificate extensions and alt. names for FPKI use
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SUBJ_DIR_ATTR -DWOLFSSL_FPKI -DWOLFSSL_SUBJ_INFO_ACC"

    # Handle as many subject/issuer name OIDs as possible
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CERT_NAME_ALL"

    # More thorough error queue usage.
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_VERBOSE_ERRORS"
fi


# ALL CRYPTO FEATURES
@%:@ Check whether --enable-all-crypto was given.
if test ${enable_all_crypto+y}
then :
  enableval=$enable_all_crypto;  ENABLED_ALL_CRYPT=$enableval 
else case e in @%:@(
  e)  ENABLED_ALL_CRYPT=no 
     ;;
esac
fi

if test "$ENABLED_ALL_CRYPT" = "yes"
then
    test "$enable_atomicuser" = "" && enable_atomicuser=yes
    test "$enable_aesgcm" = "" && enable_aesgcm=yes
    test "$enable_aesgcm_stream" = "" && test "$enable_aesgcm" = "yes" && enable_aesgcm_stream=yes
    test "$enable_aesccm" = "" && enable_aesccm=yes
    test "$enable_aesctr" = "" && enable_aesctr=yes
    test "$enable_aeseax" = "" && enable_aeseax=yes
    test "$enable_aesofb" = "" && enable_aesofb=yes
    test "$enable_aescfb" = "" && enable_aescfb=yes
    test "$enable_aescbc_length_checks" = "" && enable_aescbc_length_checks=yes
    test "$enable_camellia" = "" && enable_camellia=yes
    test "$enable_ripemd" = "" && enable_ripemd=yes
    test "$enable_sha224" = "" && enable_sha224=yes
    test "$enable_shake128" = "" && enable_shake128=yes
    test "$enable_shake256" = "" && enable_shake256=yes
    test "$enable_sessioncerts" = "" && enable_sessioncerts=yes
    test "$enable_keygen" = "" && enable_keygen=yes
    test "$enable_certgen" = "" && enable_certgen=yes
    test "$enable_certreq" = "" && enable_certreq=yes
    test "$enable_certext" = "" && enable_certext=yes
    test "$enable_sep" = "" && enable_sep=yes
    test "$enable_hkdf" = "" && enable_hkdf=yes
    test "$enable_curve25519" = "" && enable_curve25519=yes
    test "$enable_curve448" = "" && enable_curve448=yes
    test "$enable_fpecc" = "" && test "$enable_ecc" != "no" && enable_fpecc=yes
    test "$enable_eccencrypt" = "" && test "$enable_ecc" != "no" && enable_eccencrypt=yes
    test "$enable_psk" = "" && enable_psk=yes
    test "$enable_cmac" = "" && enable_cmac=yes
    test "$enable_siphash" = "" && enable_siphash=yes
    test "$enable_ocsp" = "" && enable_ocsp=yes
    test "$enable_ocspstapling" = "" && test "$enable_ocsp" != "no" && enable_ocspstapling=yes
    test "$enable_ocspstapling2" = "" && test "$enable_ocsp" != "no" && enable_ocspstapling2=yes
    test "$enable_crl" = "" && enable_crl=yes
    test "$enable_supportedcurves" = "" && enable_supportedcurves=yes
    test "$enable_tlsx" = "" && enable_tlsx=yes
    test "$enable_pwdbased" = "" && enable_pwdbased=yes
    test "$enable_aeskeywrap" = "" && enable_aeskeywrap=yes
    test "$enable_x963kdf" = "" && enable_x963kdf=yes
    test "$enable_scrypt" = "" && test "$enable_hmac" != "no" && enable_scrypt=yes
    test "$enable_indef" = "" && enable_indef=yes
    test "$enable_enckeys" = "" && enable_enckeys=yes
    test "$enable_hashflags" = "" && enable_hashflags=yes
    test "$enable_defaultdhparams" = "" && enable_defaultdhparams=yes
    test "$enable_base64encode" = "" && enable_base64encode=yes
    test "$enable_base16" = "" && enable_base16=yes
    test "$enable_arc4" = "" && enable_arc4=yes
    test "$enable_des3" = "" && enable_des3=yes
    test "$enable_blake2" = "" && enable_blake2=yes
    test "$enable_blake2s" = "" && enable_blake2s=yes
    test "$enable_md2" = "" && enable_md2=yes
    test "$enable_md4" = "" && enable_md4=yes
    test "$enable_cryptocb" = "" && enable_cryptocb=yes
    test "$enable_anon" = "" && enable_anon=yes
    test "$enable_ssh" = "" && test "$enable_hmac" != "no" && enable_ssh=yes
    test "$enable_srtp_kdf" = "" && enable_srtp_kdf=yes

    if test "$ENABLED_32BIT" != "yes"
    then
        test "$enable_sha512" = "" && enable_sha512=yes
        test "$enable_sha3" = "" && enable_sha3=yes
    fi

    if test "$ENABLED_LINUXKM_DEFAULTS" != "yes"
    then
        test "$enable_compkey" = "" && enable_compkey=yes
    fi

    if test "$ENABLED_SP_MATH" = "no"
    then
        test "$enable_dsa" = "" && test "$enable_sha" != "no" && enable_dsa=yes
        test "$enable_ecccustcurves" = "" && enable_ecccustcurves=yes
        test "$enable_brainpool" = "" && enable_brainpool=yes
        test "$enable_srp" = "" && enable_srp=yes
    fi

    if test "$ENABLED_FIPS" = "no"
    then
        test "$enable_pkcallbacks" = "" && enable_pkcallbacks=yes
        test "$enable_xchacha" = "" && test "$enable_chacha" != "no" && enable_xchacha=yes
        test "$enable_pkcs7" = "" && enable_pkcs7=yes
        test "$enable_nullcipher" = "" && enable_nullcipher=yes
        if test "$ENABLED_32BIT" != "yes"
        then
            test "$enable_ed25519" = "" && enable_ed25519=yes
            test "$enable_ed25519_stream" = "" && test "$enable_ed25519" != "no" && enable_ed25519_stream=yes
            test "$enable_ed448" = "" && enable_ed448=yes
            test "$enable_ed448_stream" = "" && test "$enable_ed448" != "no" && enable_ed448_stream=yes
        fi

        if test "$ENABLED_LINUXKM_DEFAULTS" != "yes"
        then
            test "$enable_eccsi" = "" && test "$enable_ecc" != "no" && enable_eccsi=yes
            test "$enable_sakke" = "" && test "$enable_ecc" != "no" && enable_sakke=yes
        fi
    fi

    if test "$ENABLED_FIPS" = "no" || test "$FIPS_VERSION" = "dev"; then
        test "$enable_aesxts" = "" && enable_aesxts=yes
        test "$enable_aessiv" = "" && enable_aessiv=yes
    fi

    # Enable AES Decrypt, AES ECB, Alt Names, DER Load
    AM_CFLAGS="$AM_CFLAGS -DHAVE_AES_DECRYPT -DHAVE_AES_ECB -DWOLFSSL_ALT_NAMES -DWOLFSSL_DER_LOAD"

    # Enable DH const table speedups (eliminates `-lm` math lib dependency)
    AM_CFLAGS="$AM_CFLAGS -DHAVE_FFDHE_2048 -DHAVE_FFDHE_3072"
    DEFAULT_MAX_CLASSIC_ASYM_KEY_BITS=4096

    # Enable multiple attribute additions such as DC
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_MULTI_ATTRIB"

    # Enable DH Extra
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DH_EXTRA"

    # Enable deterministic ECC signing API with variant
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ECDSA_DETERMINISTIC_K_VARIANT"

    # Store issuer name components when parsing certificates.
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_HAVE_ISSUER_NAMES"
fi

# liboqs
ENABLED_LIBOQS="no"
tryliboqsdir=""

@%:@ Check whether --with-liboqs was given.
if test ${with_liboqs+y}
then :
  withval=$with_liboqs; 
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for liboqs" >&5
printf %s "checking for liboqs... " >&6; }
        LIBS="$LIBS -loqs"

        cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <oqs/common.h>
int
main (void)
{
 OQS_init(); 
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
   liboqs_linked=yes 
else case e in @%:@(
  e)  liboqs_linked=no  ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext

        if test "x$liboqs_linked" = "xno" ; then
            if test "x$withval" != "xno" ; then
                tryliboqsdir=$withval
            fi
            if test "x$withval" = "xyes" ; then
                tryliboqsdir="/usr/local"
            fi

            CPPFLAGS="$AM_CPPFLAGS -DHAVE_LIBOQS -DHAVE_TLS_EXTENSIONS -I$tryliboqsdir/include"
            LDFLAGS="$AM_LDFLAGS $LDFLAGS -L$tryliboqsdir/lib"

            cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <oqs/common.h>
int
main (void)
{
 OQS_init(); 
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
   liboqs_linked=yes 
else case e in @%:@(
  e)  liboqs_linked=no  ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext

            if test "x$liboqs_linked" = "xno" ; then
                as_fn_error $? "liboqs isn't found.
                If it's already installed, specify its path using --with-liboqs=/dir/" "$LINENO" 5
            fi
            { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
            AM_CPPFLAGS="$CPPFLAGS"
            AM_LDFLAGS="$AM_LDFLAGS -L$tryliboqsdir/lib"
        else
            { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
        fi

        if test "x$ENABLED_OPENSSLEXTRA" = "xno" && test "x$ENABLED_OPENSSLCOEXIST" = "xno"
        then
            ENABLED_OPENSSLEXTRA="yes"
            AM_CFLAGS="$AM_CFLAGS -DOPENSSL_EXTRA"
        fi

        AM_CFLAGS="$AM_CFLAGS -DHAVE_LIBOQS -DHAVE_TLS_EXTENSIONS"
        ENABLED_LIBOQS="yes"
    

fi



# KYBER
# Used:
#  - SHA3, Shake128 and Shake256, or
#  - SHA256, SHA512, AES-CTR
@%:@ Check whether --enable-kyber was given.
if test ${enable_kyber+y}
then :
  enableval=$enable_kyber;  ENABLED_KYBER=$enableval 
else case e in @%:@(
  e)  ENABLED_KYBER=no 
     ;;
esac
fi


ENABLED_WC_KYBER=no
for v in `echo $ENABLED_KYBER | tr "," " "`
do
  case $v in
  yes | all)
    ENABLED_KYBER512=yes
    ENABLED_KYBER768=yes
    ENABLED_KYBER1024=yes
    ;;
  no)
    ;;
  wolfssl)
    ENABLED_WC_KYBER=yes
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_WC_KYBER"
    ;;
  small)
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_KYBER_SMALL"
    ;;
  512)
    ENABLED_KYBER512=yes
    ;;
  768)
    ENABLED_KYBER768=yes
    ;;
  1024)
    ENABLED_KYBER1024=yes
    ;;
  *)
    as_fn_error $? "Invalid choice for KYBER : $ENABLED_KYBER." "$LINENO" 5
    break;;
  esac
done

if test "$ENABLED_KYBER" != "no"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_HAVE_KYBER"

    if test "$ENABLED_KYBER512" = ""; then
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_NO_KYBER512"
    fi
    if test "$ENABLED_KYBER768" = ""; then
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_NO_KYBER768"
    fi
    if test "$ENABLED_KYBER1024" = ""; then
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_NO_KYBER1024"
    fi

    if test "$ENABLED_WC_KYBER" = "yes"
    then
        test "$enable_sha3" = "" && enable_sha3=yes
        test "$enable_shake128" = "" && enable_shake128=yes
        test "$enable_shake256" = "" && enable_shake256=yes
    else
        # Default is to use liboqs. Make sure its enabled.
        if test "$ENABLED_LIBOQS" = "no"; then
            as_fn_error $? "The default implementation for kyber is liboqs.
            Please use --with-liboqs." "$LINENO" 5
        fi
    fi
fi


# XMSS
@%:@ Check whether --enable-xmss was given.
if test ${enable_xmss+y}
then :
  enableval=$enable_xmss;  ENABLED_XMSS=$enableval 
else case e in @%:@(
  e)  ENABLED_XMSS=no 
     ;;
esac
fi


ENABLED_WC_XMSS=no
for v in `echo $ENABLED_XMSS | tr "," " "`
do
  case $v in
  yes)
    ;;
  no)
    ;;
  verify-only)
    XMSS_VERIFY_ONLY=yes
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_XMSS_VERIFY_ONLY -DXMSS_VERIFY_ONLY"
    ;;
  wolfssl)
    ENABLED_WC_XMSS=yes
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_WC_XMSS"
    ;;
  small)
    ENABLED_WC_XMSS=yes
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_WC_XMSS_SMALL"
    ;;
  *)
    as_fn_error $? "Invalid choice for XMSS : $ENABLED_XMSS." "$LINENO" 5
    break;;
  esac
done

if test "$ENABLED_XMSS" != "no"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_HAVE_XMSS"

    if test "$ENABLED_WC_XMSS" = "no";
    then
        # Default is to use hash-sigs XMSS lib. Make sure it's enabled.
        if test "$ENABLED_LIBXMSS" = "no"; then
            as_fn_error $? "The default implementation for XMSS is the xmss-reference lib.
            Please use --with-libxmss." "$LINENO" 5
        fi
    fi
fi

# libxmss
# Get the path to xmss-reference.
ENABLED_LIBXMSS="no"
trylibxmssdir=""

@%:@ Check whether --with-libxmss was given.
if test ${with_libxmss+y}
then :
  withval=$with_libxmss; 
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for libxmss" >&5
printf %s "checking for libxmss... " >&6; }

        trylibxmssdir=$withval

        if test -e $trylibxmssdir; then
            libxmss_linked=yes
        else
            as_fn_error $? "libxmss isn't found.
            If it's already installed, specify its path using --with-libxmss=/dir/" "$LINENO" 5
        fi
        if test "$XMSS_VERIFY_ONLY" = "yes"; then
            if test -e $trylibxmssdir/xmss_verify_lib.a; then
                CPPFLAGS="$AM_CPPFLAGS -DHAVE_LIBXMSS -I$trylibxmssdir"
                LIB_STATIC_ADD="$LIB_STATIC_ADD $trylibxmssdir/xmss_verify_lib.a"
                enable_shared=no
                enable_static=yes
                libxmss_linked=yes
            else
                as_fn_error $? "xmss_verify_lib.a isn't found.
                If it's already installed, specify its path using --with-libxmss=/dir/" "$LINENO" 5
            fi
        elif test -e $trylibxmssdir/xmss_lib.a; then
            CPPFLAGS="$AM_CPPFLAGS -DHAVE_LIBXMSS -I$trylibxmssdir"
            LIB_STATIC_ADD="$LIB_STATIC_ADD $trylibxmssdir/xmss_lib.a"
            enable_shared=no
            enable_static=yes
            libxmss_linked=yes
        else
            as_fn_error $? "libxmss isn't found.
            If it's already installed, specify its path using --with-libxmss=/dir/" "$LINENO" 5
        fi

        XMSS_ROOT=$trylibxmssdir

        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
        AM_CPPFLAGS="$CPPFLAGS"

        AM_CFLAGS="$AM_CFLAGS -DHAVE_LIBXMSS -I$trylibxmssdir"
        ENABLED_LIBXMSS="yes"
        
    
else case e in @%:@(
  e) XMSS_ROOT=""
 ;;
esac
fi


# LMS
@%:@ Check whether --enable-lms was given.
if test ${enable_lms+y}
then :
  enableval=$enable_lms;  ENABLED_LMS=$enableval 
else case e in @%:@(
  e)  ENABLED_LMS=no 
     ;;
esac
fi


ENABLED_WC_LMS=no
for v in `echo $ENABLED_LMS | tr "," " "`
do
  case $v in
  yes)
    ;;
  no)
    ;;
  verify-only)
    LMS_VERIFY_ONLY=yes
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_LMS_VERIFY_ONLY"
    ;;
  wolfssl)
    ENABLED_WC_LMS=yes
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_WC_LMS"
    ;;
  *)
    as_fn_error $? "Invalid choice for LMS : $ENABLED_LMS." "$LINENO" 5
    break;;
  esac
done

if test "$ENABLED_LMS" != "no"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_HAVE_LMS"

    if test "$ENABLED_WC_LMS" = "no";
    then
        # Default is to use hash-sigs LMS lib. Make sure it's enabled.
        if test "$ENABLED_LIBLMS" = "no"; then
            as_fn_error $? "The default implementation for LMS is the hash-sigs LMS/HSS lib.
            Please use --with-liblms." "$LINENO" 5
        fi
    fi
fi

# liblms
# Get the path to the hash-sigs LMS HSS lib.
ENABLED_LIBLMS="no"
tryliblmsdir=""

@%:@ Check whether --with-liblms was given.
if test ${with_liblms+y}
then :
  withval=$with_liblms; 
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for liblms" >&5
printf %s "checking for liblms... " >&6; }

        cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <hss.h>
int
main (void)
{
 param_set_t lm_type; param_set_t lm_ots_type; hss_get_public_key_len(4, &lm_type, &lm_ots_type); 
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
   liblms_linked=yes 
else case e in @%:@(
  e)  liblms_linked=no  ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext

        if test "x$liblms_linked" = "xno" ; then
            if test "x$withval" != "xno" ; then
                tryliblmsdir=$withval
            fi
            if test "x$withval" = "xyes" ; then
                tryliblmsdir="/usr/local"
            fi

            # 1. If verify only build, use hss_verify.a
            # 2. If normal build, by default use single-threaded hss_lib.a
            # 3. If 2 not found, then use the multi-threaded hss_lib_thread.a
            if test "$LMS_VERIFY_ONLY" = "yes"; then
                if test -e $tryliblmsdir/hss_verify.a; then
                    CPPFLAGS="$AM_CPPFLAGS -DHAVE_LIBLMS -I$tryliblmsdir"
                    LIB_STATIC_ADD="$LIB_STATIC_ADD $tryliblmsdir/hss_verify.a"
                    enable_shared=no
                    enable_static=yes
                    liblms_linked=yes
                else
                    as_fn_error $? "hss_verify.a isn't found.
                    If it's already installed, specify its path using --with-liblms=/dir/" "$LINENO" 5
                fi
            elif test -e $tryliblmsdir/hss_lib.a; then
                CPPFLAGS="$AM_CPPFLAGS -DHAVE_LIBLMS -I$tryliblmsdir"
                LIB_STATIC_ADD="$LIB_STATIC_ADD $tryliblmsdir/hss_lib.a"
                enable_shared=no
                enable_static=yes
                liblms_linked=yes
            elif test -e $tryliblmsdir/hss_lib_thread.a; then
                CPPFLAGS="$AM_CPPFLAGS -DHAVE_LIBLMS -I$tryliblmsdir"
                LIB_STATIC_ADD="$LIB_STATIC_ADD $tryliblmsdir/hss_lib_thread.a"
                enable_shared=no
                enable_static=yes
                liblms_linked=yes
            else
                as_fn_error $? "liblms isn't found.
                If it's already installed, specify its path using --with-liblms=/dir/" "$LINENO" 5
            fi

            if test "x$liblms_linked" = "xno" ; then
                as_fn_error $? "liblms isn't found.
                If it's already installed, specify its path using --with-liblms=/dir/" "$LINENO" 5
            fi

            { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
            AM_CPPFLAGS="$CPPFLAGS"
            AM_LDFLAGS="$LDFLAGS"
        else
            { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
        fi

        AM_CFLAGS="$AM_CFLAGS -DHAVE_LIBLMS"
        ENABLED_LIBLMS="yes"
    

fi


# SINGLE THREADED
@%:@ Check whether --enable-singlethreaded was given.
if test ${enable_singlethreaded+y}
then :
  enableval=$enable_singlethreaded;  ENABLED_SINGLETHREADED=$enableval 
else case e in @%:@(
  e)  ENABLED_SINGLETHREADED=no  ;;
esac
fi


if  test "x$ENABLED_SINGLETHREADED" = "xno" 
then :
  
       AX_PTHREAD(
                   AC_DEFINE([HAVE_PTHREAD], [1], [Define if you have POSIX threads libraries and header files.])
                   # If AX_PTHREAD is adding -Qunused-arguments, need to prepend with -Xcompiler libtool will use it. Newer
                   # versions of clang don't need the -Q flag when using pthreads.
                   AS_CASE([$PTHREAD_CFLAGS],[-Qunused-arguments*],[PTHREAD_CFLAGS="-Xcompiler $PTHREAD_CFLAGS"])
                   AM_CFLAGS="$AM_CFLAGS $PTHREAD_CFLAGS"
                   LIBS="$LIBS $PTHREAD_LIBS"
                   ,
                      ENABLED_SINGLETHREADED=yes
                      )
      
fi

if  test "x$ENABLED_SINGLETHREADED" = "xyes" 
then :
   AM_CFLAGS="$AM_CFLAGS -DSINGLE_THREADED" 
fi

# Enable rwlock
@%:@ Check whether --enable-rwlock was given.
if test ${enable_rwlock+y}
then :
  enableval=$enable_rwlock; ENABLED_RWLOCK=$enableval
else case e in @%:@(
  e) ENABLED_RWLOCK=no ;;
esac
fi


if test "$ENABLED_RWLOCK" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_USE_RWLOCK"
fi

# wolfCrypt Only Build
@%:@ Check whether --enable-cryptonly was given.
if test ${enable_cryptonly+y}
then :
  enableval=$enable_cryptonly; ENABLED_CRYPTONLY=$enableval
else case e in @%:@(
  e) ENABLED_CRYPTONLY=no ;;
esac
fi


if test "x$FIPS_VERSION" = "xrand"
then :
  ENABLED_CRYPTONLY="yes"
fi

# ECH
@%:@ Check whether --enable-ech was given.
if test ${enable_ech+y}
then :
  enableval=$enable_ech;  ENABLED_ECH=$enableval 
else case e in @%:@(
  e)  ENABLED_ECH=no 
     ;;
esac
fi

if test "$ENABLED_ECH" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_ECH"

    test "$enable_hpke" = "" && enable_hpke=yes
    test "$enable_ecc" = "" && enable_ecc=yes
    test "$enable_curve25519" = "" && enable_curve25519=yes
    test "$enable_sha256" = "" && enable_sha256=yes
    test "$enable_tlsx" = "" && enable_tlsx=yes
    test "$enable_sni" = "" && enable_sni=yes
    test "$enable_tls13" = "" && enable_tls13=yes
fi

# DTLS
# DTLS is a prereq for the options mcast, sctp, and jni. Enabling any of those
# without DTLS will also enable DTLS.
@%:@ Check whether --enable-dtls was given.
if test ${enable_dtls+y}
then :
  enableval=$enable_dtls;  ENABLED_DTLS=$enableval 
else case e in @%:@(
  e)  ENABLED_DTLS=no 
     ;;
esac
fi

if test "$ENABLED_DTLS" = "yes"
then
  AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DTLS"
fi

# DTLS change MTU
@%:@ Check whether --enable-dtls-mtu was given.
if test ${enable_dtls_mtu+y}
then :
  enableval=$enable_dtls_mtu;  ENABLED_DTLS_MTU=$enableval 
else case e in @%:@(
  e)  ENABLED_DTLS_MTU=no 
     ;;
esac
fi

if test "$ENABLED_DTLS_MTU" = "yes"
then
  AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DTLS_MTU"
fi

# KeyLog file export
@%:@ Check whether --enable-keylog-export was given.
if test ${enable_keylog_export+y}
then :
  enableval=$enable_keylog_export;  ENABLED_KEYLOG_EXPORT=$enableval 
else case e in @%:@(
  e)  ENABLED_KEYLOG_EXPORT=no 
     ;;
esac
fi

if test "$ENABLED_KEYLOG_EXPORT" = "yes"
then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: Keylog export enabled -- Sensitive key data will be stored insecurely." >&5
printf "%s\n" "$as_me: WARNING: Keylog export enabled -- Sensitive key data will be stored insecurely." >&2;}
  AM_CFLAGS="$AM_CFLAGS -DSHOW_SECRETS -DHAVE_SECRET_CALLBACK -DWOLFSSL_SSLKEYLOGFILE -DWOLFSSL_KEYLOG_EXPORT_WARNED"
fi

# TLS v1.3 Draft 18 (Note: only final TLS v1.3 supported, here for backwards build compatibility)
@%:@ Check whether --enable-tls13-draft18 was given.
if test ${enable_tls13_draft18+y}
then :
  enableval=$enable_tls13_draft18;  ENABLED_TLS13_DRAFT18=$enableval 
else case e in @%:@(
  e)  ENABLED_TLS13_DRAFT18=no 
     ;;
esac
fi


# TLS v1.3
@%:@ Check whether --enable-tls13 was given.
if test ${enable_tls13+y}
then :
  enableval=$enable_tls13;  ENABLED_TLS13=$enableval 
else case e in @%:@(
  e)  ENABLED_TLS13=yes 
     ;;
esac
fi

if test "x$FIPS_VERSION" = "xv1" ||
        ( test "$HAVE_FIPS_VERSION" = 2 && test "$HAVE_FIPS_VERSION_MINOR" = 1 ) ||
        test "$ENABLED_CRYPTONLY" = "yes"
then
    ENABLED_TLS13="no"
fi

# QUIC support
@%:@ Check whether --enable-quic was given.
if test ${enable_quic+y}
then :
  enableval=$enable_quic;  ENABLED_QUIC=$enableval 
else case e in @%:@(
  e)  ENABLED_QUIC=no 
     ;;
esac
fi


if test "$ENABLED_QUIC" = "yes"
then
    if test "x$ENABLED_TLS13" = "xno"
    then
        as_fn_error $? "TLS 1.3 is disabled - necessary for QUIC" "$LINENO" 5
    fi
    if test "$enable_aesgcm" = "no"
    then
        as_fn_error $? "AES-GCM is disabled - necessary for QUIC" "$LINENO" 5
    fi
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_QUIC"
    # QUIC proto handlers need app_data at WOLFSSL*
    AM_CFLAGS="$AM_CFLAGS -DHAVE_EX_DATA"
fi


# Post-handshake Authentication
@%:@ Check whether --enable-postauth was given.
if test ${enable_postauth+y}
then :
  enableval=$enable_postauth;  ENABLED_TLS13_POST_AUTH=$enableval 
else case e in @%:@(
  e)  ENABLED_TLS13_POST_AUTH=no 
     ;;
esac
fi

if test "$ENABLED_TLS13_POST_AUTH" = "yes"
then
    if test "x$ENABLED_TLS13" = "xno"
    then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: TLS 1.3 is disabled - disabling Post-handshake Authentication" >&5
printf "%s\n" "$as_me: TLS 1.3 is disabled - disabling Post-handshake Authentication" >&6;}
        ENABLED_TLS13_POST_AUTH="no"
    else
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_POST_HANDSHAKE_AUTH"
    fi
fi


# Hello Retry Request Cookie
@%:@ Check whether --enable-hrrcookie was given.
if test ${enable_hrrcookie+y}
then :
  enableval=$enable_hrrcookie;  ENABLED_SEND_HRR_COOKIE=$enableval 
else case e in @%:@(
  e)  ENABLED_SEND_HRR_COOKIE=undefined 
     ;;
esac
fi

if test "$ENABLED_SEND_HRR_COOKIE" = "yes"
then
    if test "x$ENABLED_TLS13" = "xno"
    then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: TLS 1.3 is disabled - disabling HRR Cookie" >&5
printf "%s\n" "$as_me: TLS 1.3 is disabled - disabling HRR Cookie" >&6;}
        ENABLED_SEND_HRR_COOKIE="no"
    else
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SEND_HRR_COOKIE"
    fi
fi


# RNG
@%:@ Check whether --enable-rng was given.
if test ${enable_rng+y}
then :
  enableval=$enable_rng;  ENABLED_RNG=$enableval 
else case e in @%:@(
  e)  ENABLED_RNG=yes 
     ;;
esac
fi


if test "$ENABLED_RNG" = "no"
then
    AM_CFLAGS="$AM_CFLAGS -DWC_NO_RNG"
fi


# DTLS-SCTP
@%:@ Check whether --enable-sctp was given.
if test ${enable_sctp+y}
then :
  enableval=$enable_sctp; ENABLED_SCTP=$enableval
else case e in @%:@(
  e) ENABLED_SCTP=no ;;
esac
fi


if test "x$ENABLED_SCTP" = "xyes"
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for SCTP" >&5
printf %s "checking for SCTP... " >&6; }
         if test "$cross_compiling" = yes
then :
  : 
else case e in @%:@(
  e) cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

#include <sys/socket.h>
#include <arpa/inet.h>

int
main (void)
{
int s = socket(AF_INET, SOCK_STREAM, IPPROTO_SCTP); if (s == -1) return 1;
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_run "$LINENO"
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
else case e in @%:@(
  e) { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
 as_fn_error $? "SCTP not available, remove enable-sctp from configure" "$LINENO" 5 ;;
esac
fi
rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
  conftest.$ac_objext conftest.beam conftest.$ac_ext ;;
esac
fi

fi

# DTLS-SRTP
@%:@ Check whether --enable-srtp was given.
if test ${enable_srtp+y}
then :
  enableval=$enable_srtp; ENABLED_SRTP=$enableval
else case e in @%:@(
  e) ENABLED_SRTP=no ;;
esac
fi


# DTLS-MULTICAST
@%:@ Check whether --enable-mcast was given.
if test ${enable_mcast+y}
then :
  enableval=$enable_mcast; ENABLED_MCAST=$enableval
else case e in @%:@(
  e) ENABLED_MCAST=no ;;
esac
fi



# List of open source project defines using our openssl compatibility layer:
# bind dns (--enable-bind) WOLFSSL_BIND
# libssh2 (--enable-libssh2)
# openssh (--enable-openssh) WOLFSSL_OPENSSH
# openvpn (--enable-openvpn) WOLFSSL_OPENVPN
# nginx (--enable-nginx) WOLFSSL_NGINX
# ntp (--enable-ntp)
# openresty (--enable-openresty)
# haproxy (--enable-haproxy) WOLFSSL_HAPROXY
# wpa_supplicant (--enable-wpas) WOLFSSL_WPAS
# ssl fortress (--enable-fortress) FORTRESS
# ssl bump (--enable-bump)
# signal (--enable-signal)
# lighty (--enable-lighty) HAVE_LIGHTY
# rsyslog (--enable-rsyslog)
# stunnel (--enable-stunnel) HAVE_STUNNEL
# curl (--enable-curl) HAVE_CURL
# libest (--enable-libest) HAVE_LIBEST
# asio (--enable-asio) WOLFSSL_ASIO
# libwebsockets (--enable-libwebsockets) WOLFSSL_LIBWEBSOCKETS
# qt (--enable-qt) WOLFSSL_QT
# qt test (--enable-qt-test) WOLFSSL_QT_TEST
# HAVE_POCO_LIB
# WOLFSSL_MYSQL_COMPATIBLE
# web server (--enable-webserver) HAVE_WEBSERVER
# net-snmp (--enable-net-snmp)
# krb (--enable-krb) WOLFSSL_KRB
# FFmpeg (--enable-ffmpeg) WOLFSSL_FFMPEG
# strongSwan (--enable-strongswan)
# OpenLDAP (--enable-openldap)
# hitch (--enable-hitch)
# memcached (--enable-memcached)

# Bind DNS compatibility Build
@%:@ Check whether --enable-bind was given.
if test ${enable_bind+y}
then :
  enableval=$enable_bind; ENABLED_BIND=$enableval
else case e in @%:@(
  e) ENABLED_BIND=no ;;
esac
fi


@%:@ Check whether --enable-libssh2 was given.
if test ${enable_libssh2+y}
then :
  enableval=$enable_libssh2; ENABLED_LIBSSH2=$enableval
else case e in @%:@(
  e) ENABLED_LIBSSH2=no ;;
esac
fi


# OpenSSH compatibility Build
@%:@ Check whether --enable-openssh was given.
if test ${enable_openssh+y}
then :
  enableval=$enable_openssh; ENABLED_OPENSSH=$enableval
else case e in @%:@(
  e) ENABLED_OPENSSH=no ;;
esac
fi


# OpenVPN compatibility Build
@%:@ Check whether --enable-openvpn was given.
if test ${enable_openvpn+y}
then :
  enableval=$enable_openvpn; ENABLED_OPENVPN=$enableval
else case e in @%:@(
  e) ENABLED_OPENVPN=no ;;
esac
fi


# openresty compatibility build
@%:@ Check whether --enable-openresty was given.
if test ${enable_openresty+y}
then :
  enableval=$enable_openresty;  ENABLED_OPENRESTY=$enableval 
else case e in @%:@(
  e)  ENABLED_OPENRESTY=no 
     ;;
esac
fi


# nginx compatibility build
@%:@ Check whether --enable-nginx was given.
if test ${enable_nginx+y}
then :
  enableval=$enable_nginx;  ENABLED_NGINX=$enableval 
else case e in @%:@(
  e)  ENABLED_NGINX=no 
     ;;
esac
fi


# chrony support. Needs the compatibility layer for SNI callback functionality,
# but otherwise uses pure wolfCrypt.
@%:@ Check whether --enable-chrony was given.
if test ${enable_chrony+y}
then :
  enableval=$enable_chrony;  ENABLED_CHRONY=$enableval 
else case e in @%:@(
  e)  ENABLED_CHRONY=no 
     ;;
esac
fi


if test "$ENABLED_CHRONY" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ALWAYS_KEEP_SNI"
fi

if test "$ENABLED_OPENRESTY" = "yes"
then
    ENABLED_NGINX="yes"
fi

# OpenLDAP support
@%:@ Check whether --enable-openldap was given.
if test ${enable_openldap+y}
then :
  enableval=$enable_openldap;  ENABLED_OPENLDAP=$enableval 
else case e in @%:@(
  e)  ENABLED_OPENLDAP=no 
     ;;
esac
fi


# lighty Support
@%:@ Check whether --enable-lighty was given.
if test ${enable_lighty+y}
then :
  enableval=$enable_lighty;  ENABLED_LIGHTY=$enableval 
else case e in @%:@(
  e)  ENABLED_LIGHTY=no 
     ;;
esac
fi

# rsyslog Support
@%:@ Check whether --enable-rsyslog was given.
if test ${enable_rsyslog+y}
then :
  enableval=$enable_rsyslog;  ENABLED_RSYSLOG=$enableval 
else case e in @%:@(
  e)  ENABLED_RSYSLOG=no 
     ;;
esac
fi


# haproxy compatibility build
@%:@ Check whether --enable-haproxy was given.
if test ${enable_haproxy+y}
then :
  enableval=$enable_haproxy;  ENABLED_HAPROXY=$enableval 
else case e in @%:@(
  e)  ENABLED_HAPROXY=no 
     ;;
esac
fi


# wpa_supplicant support
@%:@ Check whether --enable-wpas was given.
if test ${enable_wpas+y}
then :
  enableval=$enable_wpas;  ENABLED_WPAS=$enableval 
else case e in @%:@(
  e)  ENABLED_WPAS=no 
     ;;
esac
fi


# wpa_supplicant support
@%:@ Check whether --enable-wpas-dpp was given.
if test ${enable_wpas_dpp+y}
then :
  enableval=$enable_wpas_dpp;  ENABLED_WPAS_DPP=$enableval 
else case e in @%:@(
  e)  ENABLED_WPAS_DPP=no 
     ;;
esac
fi


if test "$ENABLED_WPAS_DPP" = "yes"
then
    ENABLED_WPAS="yes"
fi

# ntp support
@%:@ Check whether --enable-ntp was given.
if test ${enable_ntp+y}
then :
  enableval=$enable_ntp;  ENABLED_NTP=$enableval 
else case e in @%:@(
  e)  ENABLED_NTP=no 
     ;;
esac
fi


# Fortress build
@%:@ Check whether --enable-fortress was given.
if test ${enable_fortress+y}
then :
  enableval=$enable_fortress;  ENABLED_FORTRESS=$enableval 
else case e in @%:@(
  e)  ENABLED_FORTRESS=no 
     ;;
esac
fi


# libwebsockets Support
@%:@ Check whether --enable-libwebsockets was given.
if test ${enable_libwebsockets+y}
then :
  enableval=$enable_libwebsockets;  ENABLED_LIBWEBSOCKETS=$enableval 
else case e in @%:@(
  e)  ENABLED_LIBWEBSOCKETS=no 
     ;;
esac
fi

if test "$ENABLED_LIBWEBSOCKETS" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_LIBWEBSOCKETS -DHAVE_EX_DATA -DOPENSSL_NO_EC"
fi


if test "$ENABLED_OPENSSH" = "yes"
then
    ENABLED_FORTRESS="yes"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_OPENSSH -DHAVE_EX_DATA -DWOLFSSL_BASE16"
fi

# net-snmp Build
@%:@ Check whether --enable-net-snmp was given.
if test ${enable_net_snmp+y}
then :
  enableval=$enable_net_snmp;  ENABLED_NETSNMP=$enableval 
else case e in @%:@(
  e)  ENABLED_NETSNMP=no 
     ;;
esac
fi


# kerberos 5 Build
@%:@ Check whether --enable-krb was given.
if test ${enable_krb+y}
then :
  enableval=$enable_krb;  ENABLED_KRB=$enableval 
else case e in @%:@(
  e)  ENABLED_KRB=no 
     ;;
esac
fi


# FFmpeg Build
@%:@ Check whether --enable-ffmpeg was given.
if test ${enable_ffmpeg+y}
then :
  enableval=$enable_ffmpeg;  ENABLED_FFMPEG=$enableval 
else case e in @%:@(
  e)  ENABLED_FFMPEG=no 
     ;;
esac
fi



#IP alternative name Support
@%:@ Check whether --enable-ip-alt-name was given.
if test ${enable_ip_alt_name+y}
then :
  enableval=$enable_ip_alt_name;  ENABLE_IP_ALT_NAME=$enableval 
else case e in @%:@(
  e)  ENABLE_IP_ALT_NAME=no 
     ;;
esac
fi


if test "$ENABLE_IP_ALT_NAME" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_IP_ALT_NAME"
fi

#Qt Support
@%:@ Check whether --enable-qt was given.
if test ${enable_qt+y}
then :
  enableval=$enable_qt;  ENABLED_QT=$enableval 
else case e in @%:@(
  e)  ENABLED_QT=no 
     ;;
esac
fi


# ssl bump build
@%:@ Check whether --enable-bump was given.
if test ${enable_bump+y}
then :
  enableval=$enable_bump;  ENABLED_BUMP=$enableval 
else case e in @%:@(
  e)  ENABLED_BUMP=no 
     ;;
esac
fi


# SNIFFER
@%:@ Check whether --enable-sniffer was given.
if test ${enable_sniffer+y}
then :
  enableval=$enable_sniffer;  ENABLED_SNIFFER=$enableval 
else case e in @%:@(
  e)  ENABLED_SNIFFER=no 
    ;;
esac
fi


# signal compatibility build
@%:@ Check whether --enable-signal was given.
if test ${enable_signal+y}
then :
  enableval=$enable_signal;  ENABLED_SIGNAL=$enableval 
else case e in @%:@(
  e)  ENABLED_SIGNAL=no 
     ;;
esac
fi


# strongSwan support
@%:@ Check whether --enable-strongswan was given.
if test ${enable_strongswan+y}
then :
  enableval=$enable_strongswan;  ENABLED_STRONGSWAN=$enableval 
else case e in @%:@(
  e)  ENABLED_STRONGSWAN=no 
     ;;
esac
fi


# hitch support
@%:@ Check whether --enable-hitch was given.
if test ${enable_hitch+y}
then :
  enableval=$enable_hitch;  ENABLED_HITCH=$enableval 
else case e in @%:@(
  e)  ENABLED_HITCH=no 
     ;;
esac
fi


# memcached support
@%:@ Check whether --enable-memcached was given.
if test ${enable_memcached+y}
then :
  enableval=$enable_memcached;  ENABLED_MEMCACHED=$enableval 
else case e in @%:@(
  e)  ENABLED_MEMCACHED=no 
     ;;
esac
fi


# OpenSSL Coexist
@%:@ Check whether --enable-opensslcoexist was given.
if test ${enable_opensslcoexist+y}
then :
  enableval=$enable_opensslcoexist;  ENABLED_OPENSSLCOEXIST=$enableval 
else case e in @%:@(
  e)  ENABLED_OPENSSLCOEXIST=no 
     ;;
esac
fi


if test "x$ENABLED_OPENSSLCOEXIST" = "xyes" || test "$ENABLED_WOLFENGINE" = "yes"
then
    # make sure old names are disabled
    enable_oldnames=no

    AM_CFLAGS="$AM_CFLAGS -DOPENSSL_COEXIST"
fi

# S/MIME
@%:@ Check whether --enable-smime was given.
if test ${enable_smime+y}
then :
  enableval=$enable_smime;  ENABLED_SMIME=$enableval 
else case e in @%:@(
  e)  ENABLED_SMIME=no 
     ;;
esac
fi


# Platform Security Architecture (PSA)
@%:@ Check whether --enable-psa was given.
if test ${enable_psa+y}
then :
  enableval=$enable_psa;  ENABLED_PSA=$enableval 
else case e in @%:@(
  e)  ENABLED_PSA=no 
 ;;
esac
fi



@%:@ Check whether --with-psa-include was given.
if test ${with_psa_include+y}
then :
  withval=$with_psa_include; PSA_INCLUDE=$withval
else case e in @%:@(
  e) PSA_INCLUDE="" ;;
esac
fi



@%:@ Check whether --with-psa-lib was given.
if test ${with_psa_lib+y}
then :
  withval=$with_psa_lib; PSA_LIB=$withval
else case e in @%:@(
  e) PSA_LIB="" ;;
esac
fi



@%:@ Check whether --with-psa-lib-name was given.
if test ${with_psa_lib_name+y}
then :
  withval=$with_psa_lib_name; PSA_LIB_NAME=$withval
else case e in @%:@(
  e) PSA_LIB_NAME="" ;;
esac
fi


@%:@ Check whether --enable-psa-lib-static was given.
if test ${enable_psa_lib_static+y}
then :
  enableval=$enable_psa_lib_static;  ENABLED_PSA_STATIC=$enableval 
else case e in @%:@(
  e)  ENABLED_PSA_STATIC=no 
 ;;
esac
fi


if test "x$ENABLED_PSA" = "xyes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_HAVE_PSA"
fi

if test "x$ENABLED_PSA" != "xyes" && \
    (test "x$PSA_LIB" != "x" || test "x$PSA_INCLUDE" != "x" || test "x$PSA_LIB_NAME" != "x" )
then
    as_fn_error $? "to use PSA you need to enable it with --enable-psa" "$LINENO" 5
fi

if test -n "$PSA_LIB"
then
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $PSA_LIB" >&5
printf %s "checking for $PSA_LIB... " >&6; }
    if ! test -d "$PSA_LIB"
    then
        as_fn_error $? "PSA lib dir $PSA_LIB not found." "$LINENO" 5
    fi
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
    AM_LDFLAGS="$AM_LDFLAGS -L$PSA_LIB"
fi

if test -n "$PSA_LIB_NAME"
then
    if test "x$ENABLED_PSA_STATIC" = "xyes"
    then
        LIB_STATIC_ADD="$LIB_STATIC_ADD $PSA_LIB/$PSA_LIB_NAME"
    else
        LIB_ADD="$LIB_ADD -l$PSA_LIB_NAME"
    fi
fi

if test -n "$PSA_INCLUDE"
then
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $PSA_INCLUDE" >&5
printf %s "checking for $PSA_INCLUDE... " >&6; }
    if ! test -d "$PSA_INCLUDE"
    then
        as_fn_error $? "psa include dir $PSA_INCLUDE not found." "$LINENO" 5
    fi
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
    AM_CFLAGS="$AM_CFLAGS -I$PSA_INCLUDE"
fi





# OPENSSL Compatibility ALL
@%:@ Check whether --enable-opensslall was given.
if test ${enable_opensslall+y}
then :
  enableval=$enable_opensslall;  ENABLED_OPENSSLALL=$enableval 
else case e in @%:@(
  e)  ENABLED_OPENSSLALL=no 
 ;;
esac
fi

if test "$ENABLED_LIBWEBSOCKETS" = "yes" || test "$ENABLED_OPENVPN" = "yes" || \
   test "$ENABLED_WPAS_DPP" = "yes" || test "$ENABLED_SMIME" = "yes" || \
   test "$ENABLED_HAPROXY" = "yes" || test "$ENABLED_BIND" = "yes" || \
   test "$ENABLED_NTP" = "yes" || test "$ENABLED_NETSNMP" = "yes" || \
   test "$ENABLED_OPENRESTY" = "yes" || test "$ENABLED_RSYSLOG" = "yes" || \
   test "$ENABLED_KRB" = "yes" || test "$ENABLED_CHRONY" = "yes" || \
   test "$ENABLED_FFMPEG" = "yes" || test "$ENABLED_STRONGSWAN" = "yes" || \
   test "$ENABLED_OPENLDAP" = "yes" || test "$ENABLED_HITCH" = "yes"
then
    ENABLED_OPENSSLALL="yes"
fi

# OPENSSL Extra Compatibility
@%:@ Check whether --enable-opensslextra was given.
if test ${enable_opensslextra+y}
then :
  enableval=$enable_opensslextra;  ENABLED_OPENSSLEXTRA=$enableval 
else case e in @%:@(
  e)  ENABLED_OPENSSLEXTRA=no 
     ;;
esac
fi


if test "$ENABLED_QUIC" = "yes"
then
    ENABLED_OPENSSLEXTRA="yes"
fi


# One Error Queue per Thread
@%:@ Check whether --enable-error-queue-per-thread was given.
if test ${enable_error_queue_per_thread+y}
then :
  enableval=$enable_error_queue_per_thread;  ENABLED_ERRORQUEUEPERTHREAD=$enableval 
else case e in @%:@(
  e)  ENABLED_ERRORQUEUEPERTHREAD=check 
 ;;
esac
fi


if test "$ENABLED_ERRORQUEUEPERTHREAD" = "check"
then
    if test "$thread_ls_on" = "no" ||
           test "$ENABLED_SINGLETHREADED" = "yes"
then :
  ENABLED_ERRORQUEUEPERTHREAD=no
else case e in @%:@(
  e) ENABLED_ERRORQUEUEPERTHREAD=yes ;;
esac
fi
fi

if test "$ENABLED_ERRORQUEUEPERTHREAD" = "yes"
then
    if test "$thread_ls_on" != "yes"
    then
        as_fn_error $? "error-queue-per-thread needs thread-local storage." "$LINENO" 5
    fi
    AM_CFLAGS="$AM_CFLAGS -DERROR_QUEUE_PER_THREAD"
fi

# High Strength Build
@%:@ Check whether --enable-maxstrength was given.
if test ${enable_maxstrength+y}
then :
  enableval=$enable_maxstrength; ENABLED_MAXSTRENGTH=$enableval
else case e in @%:@(
  e) ENABLED_MAXSTRENGTH=no ;;
esac
fi



# Harden, enable Timing Resistance and Blinding by default
@%:@ Check whether --enable-harden was given.
if test ${enable_harden+y}
then :
  enableval=$enable_harden; ENABLED_HARDEN=$enableval
else case e in @%:@(
  e) ENABLED_HARDEN=yes ;;
esac
fi


if test "$ENABLED_HARDEN" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DTFM_TIMING_RESISTANT -DECC_TIMING_RESISTANT"
    if test "$ENABLED_RNG" = "yes"
    then
        AM_CFLAGS="$AM_CFLAGS -DWC_RSA_BLINDING"
    fi
else
    AM_CFLAGS="$AM_CFLAGS -DWC_NO_HARDEN -DWC_NO_CACHE_RESISTANT"
fi


# IPv6 Test Apps
@%:@ Check whether --enable-ipv6 was given.
if test ${enable_ipv6+y}
then :
  enableval=$enable_ipv6;  ENABLED_IPV6=$enableval 
else case e in @%:@(
  e)  ENABLED_IPV6=no 
     ;;
esac
fi


if test "$ENABLED_IPV6" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DTEST_IPV6 -DWOLFSSL_IPV6"
fi

if test "$ENABLED_WPAS" = "small"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_WPAS_SMALL"
fi
if test "$ENABLED_WPAS" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_WPAS"
    AM_CFLAGS="$AM_CFLAGS -DHAVE_SECRET_CALLBACK"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_PUBLIC_ECC_ADD_DBL"
fi
if test "$ENABLED_WPAS" != "no"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ALWAYS_VERIFY_CB"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ALWAYS_KEEP_SNI"
    AM_CFLAGS="$AM_CFLAGS -DHAVE_EX_DATA"
    AM_CFLAGS="$AM_CFLAGS -DHAVE_EXT_CACHE"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_EITHER_SIDE"
    AM_CFLAGS="$AM_CFLAGS -DOPENSSL_EXTRA_X509_SMALL"

    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_PUBLIC_MP"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DER_LOAD"
    AM_CFLAGS="$AM_CFLAGS -DATOMIC_USER"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_KEY_GEN"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DES_ECB"
    AM_CFLAGS="$AM_CFLAGS -DKEEP_OUR_CERT"
    AM_CFLAGS="$AM_CFLAGS -DKEEP_PEER_CERT"
    AM_CFLAGS="$AM_CFLAGS -DHAVE_KEYING_MATERIAL"
    AM_CFLAGS="$AM_CFLAGS -DNO_SESSION_CACHE_REF"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_VALIDATE_ECC_IMPORT"
    AM_CFLAGS="$AM_CFLAGS -DWC_CTC_NAME_SIZE=128"

    if test "$ENABLED_OPENSSLEXTRA" = "no"
    then
        ENABLED_OPENSSLEXTRA="yes"
        AM_CFLAGS="$AM_CFLAGS -DOPENSSL_EXTRA"
    fi
fi

if test "$ENABLED_FORTRESS" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DFORTRESS -DWOLFSSL_ALWAYS_VERIFY_CB -DWOLFSSL_AES_COUNTER -DWOLFSSL_AES_DIRECT -DWOLFSSL_DER_LOAD -DWOLFSSL_KEY_GEN"
fi


if test "$ENABLED_BUMP" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DLARGE_STATIC_BUFFERS -DWOLFSSL_CERT_GEN -DWOLFSSL_KEY_GEN -DHUGE_SESSION_CACHE -DWOLFSSL_DER_LOAD -DWOLFSSL_ALT_NAMES -DWOLFSSL_TEST_CERT"
    DEFAULT_MAX_CLASSIC_ASYM_KEY_BITS=4096
fi

# lean psk build
@%:@ Check whether --enable-leanpsk was given.
if test ${enable_leanpsk+y}
then :
  enableval=$enable_leanpsk;  ENABLED_LEANPSK=$enableval 
else case e in @%:@(
  e)  ENABLED_LEANPSK=no 
     ;;
esac
fi


if test "$ENABLED_LEANPSK" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_LEANPSK -DWOLFSSL_STATIC_PSK -DHAVE_NULL_CIPHER -DSINGLE_THREADED -DNO_AES -DNO_FILESYSTEM -DNO_RSA -DNO_DSA -DNO_DH -DNO_PWDBASED -DNO_MD4 -DNO_MD5 -DNO_ERROR_STRINGS -DNO_OLD_TLS -DNO_RC4 -DNO_WRITEV -DNO_DEV_RANDOM -DWOLFSSL_USER_IO -DNO_SHA"
    ENABLED_SLOWMATH="no"
    ENABLED_SINGLETHREADED="yes"
    enable_lowresource=yes
fi


# lean TLS build (TLS 1.2 client only (no client auth), ECC256, AES128 and SHA256 w/o Shamir)
@%:@ Check whether --enable-leantls was given.
if test ${enable_leantls+y}
then :
  enableval=$enable_leantls;  ENABLED_LEANTLS=$enableval 
else case e in @%:@(
  e)  ENABLED_LEANTLS=no 
     ;;
esac
fi


if test "$ENABLED_LEANTLS" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_LEANTLS -DNO_WRITEV -DHAVE_ECC -DTFM_ECC256 -DECC_USER_CURVES -DNO_WOLFSSL_SERVER -DNO_RSA -DNO_DSA -DNO_DH -DNO_PWDBASED -DNO_MD5 -DNO_ERROR_STRINGS -DNO_OLD_TLS -DNO_RC4 -DNO_SHA -DNO_PSK -DNO_WOLFSSL_MEMORY -DNO_WOLFSSL_CM_VERIFY"
    enable_lowresource=yes
fi


# low resource options to reduce flash and memory use
@%:@ Check whether --enable-lowresource was given.
if test ${enable_lowresource+y}
then :
  enableval=$enable_lowresource;  ENABLED_LOWRESOURCE=$enableval 
else case e in @%:@(
  e)  ENABLED_LOWRESOURCE=no 
     ;;
esac
fi


if test "$ENABLED_LOWRESOURCE" = "yes"
then
    # low memory / flash flags
    AM_CFLAGS="$AM_CFLAGS -DNO_SESSION_CACHE -DRSA_LOW_MEM -DCURVE25519_SMALL -DED25519_SMALL -DWOLFSSL_SMALL_CERT_VERIFY -DWOLFSSL_NO_ASYNC_IO"

    # low flash flags
    AM_CFLAGS="$AM_CFLAGS -DUSE_SLOW_SHA -DUSE_SLOW_SHA256 -DUSE_SLOW_SHA512"

    # AES small
    AM_CFLAGS="$AM_CFLAGS -DGCM_SMALL -DWOLFSSL_AES_NO_UNROLL -DWOLFSSL_AES_SMALL_TABLES"
fi


# TITAN cache
@%:@ Check whether --enable-titancache was given.
if test ${enable_titancache+y}
then :
  enableval=$enable_titancache;  ENABLED_TITANCACHE=$enableval 
else case e in @%:@(
  e)  ENABLED_TITANCACHE=no 
     ;;
esac
fi


if test "$ENABLED_TITANCACHE" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DTITAN_SESSION_CACHE"
fi


# HUGE cache
@%:@ Check whether --enable-hugecache was given.
if test ${enable_hugecache+y}
then :
  enableval=$enable_hugecache;  ENABLED_HUGECACHE=$enableval 
else case e in @%:@(
  e)  ENABLED_HUGECACHE=no 
     ;;
esac
fi


if test "$ENABLED_HUGECACHE" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DHUGE_SESSION_CACHE"
fi


# big cache
@%:@ Check whether --enable-bigcache was given.
if test ${enable_bigcache+y}
then :
  enableval=$enable_bigcache;  ENABLED_BIGCACHE=$enableval 
else case e in @%:@(
  e)  ENABLED_BIGCACHE=no 
     ;;
esac
fi


if test "$ENABLED_BIGCACHE" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DBIG_SESSION_CACHE"
fi


# SMALL cache
@%:@ Check whether --enable-smallcache was given.
if test ${enable_smallcache+y}
then :
  enableval=$enable_smallcache;  ENABLED_SMALLCACHE=$enableval 
else case e in @%:@(
  e)  ENABLED_SMALLCACHE=no 
     ;;
esac
fi


if test "$ENABLED_SMALLCACHE" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DSMALL_SESSION_CACHE"
fi


# Persistent session cache
@%:@ Check whether --enable-savesession was given.
if test ${enable_savesession+y}
then :
  enableval=$enable_savesession;  ENABLED_SAVESESSION=$enableval 
else case e in @%:@(
  e)  ENABLED_SAVESESSION=no 
     ;;
esac
fi


if test "$ENABLED_SAVESESSION" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DPERSIST_SESSION_CACHE"
fi


# Persistent cert cache
@%:@ Check whether --enable-savecert was given.
if test ${enable_savecert+y}
then :
  enableval=$enable_savecert;  ENABLED_SAVECERT=$enableval 
else case e in @%:@(
  e)  ENABLED_SAVECERT=no 
     ;;
esac
fi


if test "$ENABLED_SAVECERT" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DPERSIST_CERT_CACHE"
fi


# Write duplicate WOLFSSL object
@%:@ Check whether --enable-writedup was given.
if test ${enable_writedup+y}
then :
  enableval=$enable_writedup;  ENABLED_WRITEDUP=$enableval 
else case e in @%:@(
  e)  ENABLED_WRITEDUP=no 
     ;;
esac
fi


if test "$ENABLED_WRITEDUP" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_WRITE_DUP"
fi


# Atomic User Record Layer
@%:@ Check whether --enable-atomicuser was given.
if test ${enable_atomicuser+y}
then :
  enableval=$enable_atomicuser;  ENABLED_ATOMICUSER=$enableval 
else case e in @%:@(
  e)  ENABLED_ATOMICUSER=no 
     ;;
esac
fi


if test "$ENABLED_ATOMICUSER" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DATOMIC_USER"
fi


# Public Key Callbacks
@%:@ Check whether --enable-pkcallbacks was given.
if test ${enable_pkcallbacks+y}
then :
  enableval=$enable_pkcallbacks;  ENABLED_PKCALLBACKS=$enableval 
else case e in @%:@(
  e)  ENABLED_PKCALLBACKS=no 
     ;;
esac
fi


if test "$ENABLED_PKCALLBACKS" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_PK_CALLBACKS"
fi


# Maxim Integrated MAXQ10XX
ENABLED_MAXQ10XX="no"
maxqpartnumber=""

@%:@ Check whether --with-maxq10xx was given.
if test ${with_maxq10xx+y}
then :
  withval=$with_maxq10xx; 
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for maxq10xx" >&5
printf %s "checking for maxq10xx... " >&6; }

        # Read the part number
        maxqpartnumber=$withval

        if test "$maxqpartnumber" = "MAXQ1065"; then
            LIB_STATIC_ADD="$LIB_STATIC_ADD lib/libmaxq1065_api.a"
            AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_MAXQ1065"
            ENABLED_MAXQ10XX="yes"
            { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for clock_gettime in -lrt" >&5
printf %s "checking for clock_gettime in -lrt... " >&6; }
if test ${ac_cv_lib_rt_clock_gettime+y}
then :
  printf %s "(cached) " >&6
else case e in @%:@(
  e) ac_check_lib_save_LIBS=$LIBS
LIBS="-lrt  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.
   The 'extern "C"' is for builds by C++ compilers;
   although this is not generally supported in C code supporting it here
   has little cost and some practical benefit (sr 110532).  */
#ifdef __cplusplus
extern "C"
#endif
char clock_gettime (void);
int
main (void)
{
return clock_gettime ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_lib_rt_clock_gettime=yes
else case e in @%:@(
  e) ac_cv_lib_rt_clock_gettime=no ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS ;;
esac
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_rt_clock_gettime" >&5
printf "%s\n" "$ac_cv_lib_rt_clock_gettime" >&6; }
if test "x$ac_cv_lib_rt_clock_gettime" = xyes
then :
  printf "%s\n" "@%:@define HAVE_LIBRT 1" >>confdefs.h

  LIBS="-lrt $LIBS"

fi

        elif test "$maxqpartnumber" = "MAXQ108x"; then
            LIB_STATIC_ADD="$LIB_STATIC_ADD lib/libmaxq108x_api.a"
            AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_MAXQ108X"
            ENABLED_MAXQ10XX="yes"
            { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for clock_gettime in -lrt" >&5
printf %s "checking for clock_gettime in -lrt... " >&6; }
if test ${ac_cv_lib_rt_clock_gettime+y}
then :
  printf %s "(cached) " >&6
else case e in @%:@(
  e) ac_check_lib_save_LIBS=$LIBS
LIBS="-lrt  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.
   The 'extern "C"' is for builds by C++ compilers;
   although this is not generally supported in C code supporting it here
   has little cost and some practical benefit (sr 110532).  */
#ifdef __cplusplus
extern "C"
#endif
char clock_gettime (void);
int
main (void)
{
return clock_gettime ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_lib_rt_clock_gettime=yes
else case e in @%:@(
  e) ac_cv_lib_rt_clock_gettime=no ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS ;;
esac
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_rt_clock_gettime" >&5
printf "%s\n" "$ac_cv_lib_rt_clock_gettime" >&6; }
if test "x$ac_cv_lib_rt_clock_gettime" = xyes
then :
  printf "%s\n" "@%:@define HAVE_LIBRT 1" >>confdefs.h

  LIBS="-lrt $LIBS"

fi

        else
            as_fn_error $? "need a valid MAXQ part number" "$LINENO" 5
        fi

        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
    

fi


# Microchip/Atmel CryptoAuthLib
ENABLED_CRYPTOAUTHLIB="no"
trylibatcadir=""

@%:@ Check whether --with-cryptoauthlib was given.
if test ${with_cryptoauthlib+y}
then :
  withval=$with_cryptoauthlib; 
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for cryptoauthlib" >&5
printf %s "checking for cryptoauthlib... " >&6; }
        CPPFLAGS="$CPPFLAGS -DWOLFSSL_ATECC508A"
        LIBS="$LIBS -lcryptoauth"

        cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <cryptoauthlib.h>
int
main (void)
{
 atcab_init(0); 
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
   libatca_linked=yes 
else case e in @%:@(
  e)  libatca_linked=no  ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext

        if test "x$libatca_linked" = "xno" ; then
            if test "x$withval" != "xno" ; then
                trylibatcadir=$withval
            fi
            if test "x$withval" = "xyes" ; then
                trylibatcadir="/usr"
            fi

            LDFLAGS="$LDFLAGS -L$trylibatcadir/lib"
            CPPFLAGS="$CPPFLAGS -I$trylibatcadir/lib"

            cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <cryptoauthlib.h>
int
main (void)
{
 atcab_init(0); 
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
   libatca_linked=yes 
else case e in @%:@(
  e)  libatca_linked=no  ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext

            if test "x$libatca_linked" = "xno" ; then
                as_fn_error $? "cryptoauthlib isn't found.
                If it's already installed, specify its path using --with-cryptoauthlib=/dir/" "$LINENO" 5
            fi

            AM_LDFLAGS="$AM_LDFLAGS -L$trylibatcadir/lib"
            AM_CFLAGS="$AM_CFLAGS -I$trylibatcadir/lib"
            { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
        else
            { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
        fi

        ENABLED_CRYPTOAUTHLIB="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ATECC508A"
    

fi


# NXP SE050
# Example: "./configure --with-se050=/home/pi/simw_top"
ENABLED_SE050="no"
trylibse050dir=""

@%:@ Check whether --with-se050 was given.
if test ${with_se050+y}
then :
  withval=$with_se050; 
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for SE050" >&5
printf %s "checking for SE050... " >&6; }

        LIBS="$LIBS -lSSS_APIs"
        cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <fsl_sss_api.h>
int
main (void)
{
 sss_mac_init(0);
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
   libse050_linked=yes 
else case e in @%:@(
  e)  libse050_linked=no  ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext

        if test "x$libse050_linked" = "xno" ; then
            if test "x$withval" != "xno" ; then
                trylibse050dir=$withval
            fi
            if test "x$withval" = "xyes" ; then
                trylibse050dir="/usr/local"
            fi
            LDFLAGS="$LDFLAGS -L$trylibse050dir/lib"
            LDFLAGS="$LDFLAGS -L$trylibse050dir/build/sss"
            CPPFLAGS="$CPPFLAGS -I$trylibse050dir/include/se05x"
            CPPFLAGS="$CPPFLAGS -I$trylibse050dir/build"
            CPPFLAGS="$CPPFLAGS -I$trylibse050dir/sss/inc"
            CPPFLAGS="$CPPFLAGS -I$trylibse050dir/sss/ex/inc"
            CPPFLAGS="$CPPFLAGS -I$trylibse050dir/sss/port/default"
            CPPFLAGS="$CPPFLAGS -I$trylibse050dir/hostlib/hostLib/inc"
            CPPFLAGS="$CPPFLAGS -I$trylibse050dir/hostlib/hostLib/libCommon/log"
            CPPFLAGS="$CPPFLAGS -I$trylibse050dir/hostlib/hostLib/libCommon/infra"
            CPPFLAGS="$CPPFLAGS -I$trylibse050dir/hostlib/hostLib/se05x_03_xx_xx"

            if test -e "$trylibse050dir/build/sss/libSSS_APIs.a"; then
                SE050_STATIC=yes
            else
                SE050_STATIC=no
            fi
            if test "x$SE050_STATIC" = "xyes"; then
                LIB_STATIC_ADD="$trylibse050dir/build/sss/ex/src/libex_common.a \
                                $trylibse050dir/build/sss/libSSS_APIs.a \
                                $trylibse050dir/build/hostlib/hostLib/se05x/libse05x.a \
                                $trylibse050dir/build/hostlib/hostLib/liba7x_utils.a \
                                $trylibse050dir/build/hostlib/hostLib/libCommon/log/libmwlog.a \
                                $trylibse050dir/build/hostlib/hostLib/libCommon/libsmCom.a $LIB_STATIC_ADD"
            else
                cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <fsl_sss_api.h>
int
main (void)
{
 sss_mac_init(0); 
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
   libse050_linked=yes 
else case e in @%:@(
  e)  libse050_linked=no  ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
                if test "x$libse050_linked" = "xno" ; then
                    as_fn_error $? "SE050 isn't found.
                    If it's already installed, specify its path using --with-se050=/dir/" "$LINENO" 5
                fi
            fi

            # Requires AES direct
            AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_AES_DIRECT -DHAVE_AES_ECB"

            # Does not support SHA2-512 224/256
            AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_NOSHA512_224 -DWOLFSSL_NOSHA512_256"

            { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
        else
            { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
        fi

        ENABLED_SE050="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SE050 -DSSS_USE_FTR_FILE"
    

fi


ENABLED_SNIFFTEST=no
if  test "x$ENABLED_SNIFFER" = "xyes" 
then :
  
          AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SNIFFER -DWOLFSSL_STATIC_EPHEMERAL"
                 for ac_header in pcap/pcap.h
do :
  ac_fn_c_check_header_compile "$LINENO" "pcap/pcap.h" "ac_cv_header_pcap_pcap_h" "$ac_includes_default"
if test "x$ac_cv_header_pcap_pcap_h" = xyes
then :
  printf "%s\n" "@%:@define HAVE_PCAP_PCAP_H 1" >>confdefs.h
  ENABLED_SNIFFTEST=yes 
else case e in @%:@(
  e)  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: cannot enable sniffer test without having libpcap available." >&5
printf "%s\n" "$as_me: WARNING: cannot enable sniffer test without having libpcap available." >&2;} 
           ;;
esac
fi

done
      
fi


# AES-CBC
@%:@ Check whether --enable-aescbc was given.
if test ${enable_aescbc+y}
then :
  enableval=$enable_aescbc;  ENABLED_AESCBC=$enableval 
else case e in @%:@(
  e)  ENABLED_AESCBC=yes 
     ;;
esac
fi


if test "$ENABLED_AESCBC" = "no"
then
    AM_CFLAGS="$AM_CFLAGS -DNO_AES_CBC"
    AM_CCASFLAGS="$AM_CCASFLAGS -DNO_AES_CBC"
fi

# AES-CBC length checks (checks that input lengths are multiples of block size)
@%:@ Check whether --enable-aescbc_length_checks was given.
if test ${enable_aescbc_length_checks+y}
then :
  enableval=$enable_aescbc_length_checks;  ENABLED_AESCBC_LENGTH_CHECKS=$enableval 
else case e in @%:@(
  e)  ENABLED_AESCBC_LENGTH_CHECKS=no 
     ;;
esac
fi


if test "$ENABLED_AESCBC_LENGTH_CHECKS" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_AES_CBC_LENGTH_CHECKS"
fi

# leanpsk and leantls don't need gcm

# AES-GCM
@%:@ Check whether --enable-aesgcm was given.
if test ${enable_aesgcm+y}
then :
  enableval=$enable_aesgcm;  ENABLED_AESGCM=$enableval 
else case e in @%:@(
  e)  ENABLED_AESGCM=yes 
     ;;
esac
fi

@%:@ Check whether --enable-aesgcm-stream was given.
if test ${enable_aesgcm_stream+y}
then :
  enableval=$enable_aesgcm_stream;  ENABLED_AESGCM_STREAM=$enableval 
else case e in @%:@(
  e)  ENABLED_AESGCM_STREAM=no 
     ;;
esac
fi


# leanpsk and leantls don't need gcm
if test "$FIPS_VERSION" = "rand" || test "$ENABLED_LEANPSK" = "yes" ||
   (test "$ENABLED_LEANTLS" = "yes" && test "$ENABLED_TLS13" = "no")
then
    ENABLED_AESGCM=no
fi

if test "$ENABLED_AESGCM" = "yes" && test "$ac_cv_c_bigendian" != "yes"
then
    ENABLED_AESGCM="4bit"
fi


# AES-CCM
@%:@ Check whether --enable-aesccm was given.
if test ${enable_aesccm+y}
then :
  enableval=$enable_aesccm;  ENABLED_AESCCM=$enableval 
else case e in @%:@(
  e)  ENABLED_AESCCM=no 
     ;;
esac
fi


if test "$ENABLED_AESCCM" = "yes" || test "$ENABLED_WOLFENGINE" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_AESCCM"
    AM_CCASFLAGS="$AM_CCASFLAGS -DHAVE_AESCCM"
fi

# AES-EAX
@%:@ Check whether --enable-aeseax was given.
if test ${enable_aeseax+y}
then :
  enableval=$enable_aeseax;  ENABLED_AESEAX=$enableval 
else case e in @%:@(
  e)  ENABLED_AESEAX=no 
     ;;
esac
fi


if test "$ENABLED_AESEAX" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_AES_EAX"
fi

# AES-SIV (RFC 5297)
@%:@ Check whether --enable-aessiv was given.
if test ${enable_aessiv+y}
then :
  enableval=$enable_aessiv;  ENABLED_AESSIV=$enableval 
else case e in @%:@(
  e)  ENABLED_AESSIV=no 
     ;;
esac
fi


if test "$ENABLED_CHRONY" = "yes"
then
    ENABLED_AESSIV=yes
fi

# AES-CTR
@%:@ Check whether --enable-aesctr was given.
if test ${enable_aesctr+y}
then :
  enableval=$enable_aesctr;  ENABLED_AESCTR=$enableval 
else case e in @%:@(
  e)  ENABLED_AESCTR=no 
     ;;
esac
fi

if test "$ENABLED_OPENVPN" = "yes" || test "$ENABLED_LIBSSH2" = "yes" || test "$ENABLED_AESSIV" = "yes" || test "$ENABLED_WOLFENGINE" = "yes" || test "$ENABLED_AESEAX" = "yes"
then
    ENABLED_AESCTR=yes
fi

if test "$ENABLED_QUIC" = "yes"
then
    ENABLED_AESCTR=yes
fi

# AES-OFB
@%:@ Check whether --enable-aesofb was given.
if test ${enable_aesofb+y}
then :
  enableval=$enable_aesofb;  ENABLED_AESOFB=$enableval 
else case e in @%:@(
  e)  ENABLED_AESOFB=no 
     ;;
esac
fi


if test "$ENABLED_AESOFB" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_AES_OFB -DWOLFSSL_AES_DIRECT"
fi


# AES-CFB
@%:@ Check whether --enable-aescfb was given.
if test ${enable_aescfb+y}
then :
  enableval=$enable_aescfb;  ENABLED_AESCFB=$enableval 
else case e in @%:@(
  e)  ENABLED_AESCFB=no 
     ;;
esac
fi


if test "$ENABLED_AESCFB" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_AES_CFB"
fi

@%:@ Check whether --enable-aes-bitsliced was given.
if test ${enable_aes_bitsliced+y}
then :
  enableval=$enable_aes_bitsliced;  ENABLED_AESBS=$enableval 
else case e in @%:@(
  e)  ENABLED_AESBS=no 
     ;;
esac
fi


if test "$ENABLED_AESBS" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWC_AES_BITSLICED -DHAVE_AES_ECB -DWOLFSSL_AES_DIRECT"
fi

# SM4
ENABLED_SM4="no"
@%:@ Check whether --enable-sm4-ecb was given.
if test ${enable_sm4_ecb+y}
then :
  enableval=$enable_sm4_ecb;  ENABLED_SM4_ECB=$enableval 
else case e in @%:@(
  e)  ENABLED_SM4_ECB=no 
     ;;
esac
fi


if test "$ENABLED_SM4_ECB" = "small"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SM4_SMALL"
fi
if test "$ENABLED_SM4_ECB" != "no"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SM4_ECB"
    ENABLED_SM4="yes"
fi

@%:@ Check whether --enable-sm4-cbc was given.
if test ${enable_sm4_cbc+y}
then :
  enableval=$enable_sm4_cbc;  ENABLED_SM4_CBC=$enableval 
else case e in @%:@(
  e)  ENABLED_SM4_CBC=no 
     ;;
esac
fi


if test "$ENABLED_SM4_CBC" = "small"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SM4_SMALL"
fi
if test "$ENABLED_SM4_CBC" != "no"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SM4_CBC"
    ENABLED_SM4="yes"
fi

@%:@ Check whether --enable-sm4-ctr was given.
if test ${enable_sm4_ctr+y}
then :
  enableval=$enable_sm4_ctr;  ENABLED_SM4_CTR=$enableval 
else case e in @%:@(
  e)  ENABLED_SM4_CTR=no 
     ;;
esac
fi


if test "$ENABLED_SM4_CTR" = "small"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SM4_SMALL"
fi
if test "$ENABLED_SM4_CTR" != "no"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SM4_CTR"
    ENABLED_SM4="yes"
fi

@%:@ Check whether --enable-sm4-gcm was given.
if test ${enable_sm4_gcm+y}
then :
  enableval=$enable_sm4_gcm;  ENABLED_SM4_GCM=$enableval 
else case e in @%:@(
  e)  ENABLED_SM4_GCM=no 
     ;;
esac
fi


if test "$ENABLED_SM4_GCM" = "small"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SM4_SMALL"
fi
if test "$ENABLED_SM4_GCM" != "no"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SM4_GCM"
    ENABLED_SM4="yes"
fi

@%:@ Check whether --enable-sm4-ccm was given.
if test ${enable_sm4_ccm+y}
then :
  enableval=$enable_sm4_ccm;  ENABLED_SM4_CCM=$enableval 
else case e in @%:@(
  e)  ENABLED_SM4_CCM=no 
     ;;
esac
fi


if test "$ENABLED_SM4_CCM" = "small"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SM4_SMALL"
fi
if test "$ENABLED_SM4_CCM" != "no"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SM4_CCM"
    ENABLED_SM4="yes"
fi

if test "$ENABLED_SM4" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SM4"
fi


ENABLED_ARMASM_INLINE="no"
ENABLED_ARMASM_SHA3="no"
ENABLED_ARMASM_CRYPTO_SM4="no"
# ARM Assembly
# Both SHA3 and SHA512 instructions available with ARMV8.2-a
@%:@ Check whether --enable-armasm was given.
if test ${enable_armasm+y}
then :
  enableval=$enable_armasm;  ENABLED_ARMASM=$enableval 
else case e in @%:@(
  e)  ENABLED_ARMASM=no 
     ;;
esac
fi

if test "$ENABLED_ARMASM" != "no" && test "$ENABLED_ASM" = "yes"
then

    for v in `echo $ENABLED_ARMASM | tr "," " "`
    do
        case $v in
        yes)
            ;;
        inline)
            ENABLED_ARMASM_INLINE=yes
            ;;
        sha512-crypto | sha3-crypto)
            case $host_cpu in
            *aarch64*)
                ;;
            *)
                as_fn_error $? "SHA512/SHA3 instructions only available on Aarch64 CPU." "$LINENO" 5
                break;;
            esac
            ENABLED_ARMASM_SHA3=yes
            ENABLED_ARMASM_PLUS=yes
            ;;
        sm4)
            case $host_cpu in
            *aarch64*)
                ;;
            *)
                as_fn_error $? "SM4 instructions only available on Aarch64 CPU." "$LINENO" 5
                break;;
            esac
            ENABLED_ARMASM_SM4=yes
            # gcc requires -march=...+sm4 to enable SM4 instructions
            ENABLED_ARMASM_CRYPTO_SM4=yes
            ENABLED_ARMASM_PLUS=yes
            ;;
        sm3)
            case $host_cpu in
            *aarch64*)
                ;;
            *)
                as_fn_error $? "SM3 instructions only available on Aarch64 CPU." "$LINENO" 5
                break;;
            esac
            ENABLED_ARMASM_SM3=yes
            # gcc requires -march=...+sm4 to enable SM3 instructions
            ENABLED_ARMASM_CRYPTO_SM4=yes
            ENABLED_ARMASM_PLUS=yes
            ;;
        *)
            as_fn_error $? "Invalid choice of ARM asm inclusions (yes, sha512-crypto, sha3-crypto): $ENABLED_ARMASM." "$LINENO" 5
            break;;
        esac
    done
    ENABLED_ARMASM="yes"

    AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_ARMASM"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ARMASM -DWOLFSSL_NO_HASH_RAW"
    #Check if mcpu and mfpu values already set if not use default
    case $CPPFLAGS in
    *mcpu* | *mfpu*)
        break;; #Do not override user set values
    *)
        case $host_cpu in
        *aarch64*)
            case $host_os in
            *darwin*)
                # All known Aarch64 Mac computers support SHA-512 instructions
                ENABLED_ARMASM_SHA3=yes
                ;;
            *)
                # +crypto needed for hardware acceleration
                if test "$ENABLED_ARMASM_PLUS" = "yes"; then
                    AM_CPPFLAGS="$AM_CPPFLAGS -march=armv8.2-a+crypto"
                    if test "$ENABLED_ARMASM_SHA3" = "yes"; then
                        AM_CPPFLAGS="$AM_CPPFLAGS+sha3"
                    fi
                    if test "$ENABLED_ARMASM_CRYPTO_SM4" = "yes"; then
                        AM_CPPFLAGS="$AM_CPPFLAGS+sm4"
                    fi
                else
                    AM_CPPFLAGS="$AM_CPPFLAGS -mcpu=generic+crypto"
                fi
                ;;
            esac
            # Include options.h
            AM_CCASFLAGS="$AM_CCASFLAGS -DEXTERNAL_OPTS_OPENVPN"
            ENABLED_ARMASM_CRYPTO=yes
            ENABLED_ARMASM_NEON=yes

            # Check for and set -mstrict-align compiler flag
            # Used to set assumption that Aarch64 systems will not handle
            #   unaligned memory references. The flag -mstrict-align is needed
            #   on some compiler versions to avoid an invalid addressing mode
            #   error with  "m" constraint variables in the inline assembly AES
            #   code. Even though unaligned load/store access is permitted on
            #   normal memory with Cortex-A series boards with the exception
            #   being exclusive and ordered access.
            case $CPPFLAGS in
                *mstrict-align*)
                    break;; # already set by user
                *)
                    AM_CPPFLAGS="$AM_CPPFLAGS -mstrict-align"
                    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: 64bit ARMv8, setting -mstrict-align" >&5
printf "%s\n" "$as_me: 64bit ARMv8, setting -mstrict-align" >&6;};;
            esac
            { printf "%s\n" "$as_me:${as_lineno-$LINENO}: 64bit ARMv8 found, setting mcpu to generic+crypto" >&5
printf "%s\n" "$as_me: 64bit ARMv8 found, setting mcpu to generic+crypto" >&6;}
            ;;
        armv7a*)
            AM_CPPFLAGS="$AM_CPPFLAGS -march=armv7-a -mfpu=neon -DWOLFSSL_ARM_ARCH=7 -marm"
            # Include options.h
            AM_CCASFLAGS="$AM_CCASFLAGS -DEXTERNAL_OPTS_OPENVPN"
            ENABLED_ARMASM_CRYPTO=no
            ENABLED_AESGCM_STREAM=no # not yet implemented
            ENABLED_ARMASM_NEON=yes
            { printf "%s\n" "$as_me:${as_lineno-$LINENO}: 32bit ARMv7-a found, setting mfpu to neon" >&5
printf "%s\n" "$as_me: 32bit ARMv7-a found, setting mfpu to neon" >&6;}
            ;;
        armv7m*)
            # QEMU doesn't work with armv7-m
            AM_CPPFLAGS="$AM_CPPFLAGS -march=armv7-r -D__thumb__ -fomit-frame-pointer -DWOLFSSL_ARMASM_NO_HW_CRYPTO -DWOLFSSL_ARM_ARCH=7"
            # Include options.h
            AM_CCASFLAGS="$AM_CCASFLAGS -DEXTERNAL_OPTS_OPENVPN"
            ENABLED_ARMASM_CRYPTO=no
            ENABLED_AESGCM_STREAM=no # not yet implemented
            ENABLED_ARMASM_NEON=no
            { printf "%s\n" "$as_me:${as_lineno-$LINENO}: 32bit ARMv7-m found" >&5
printf "%s\n" "$as_me: 32bit ARMv7-m found" >&6;}
            ;;
        armv6*)
            AM_CPPFLAGS="$AM_CPPFLAGS -march=armv6 -fomit-frame-pointer -DWOLFSSL_ARMASM_NO_HW_CRYPTO -DWOLFSSL_ARM_ARCH=6"
            AM_CCASFLAGS="$AM_CCASFLAGS -DEXTERNAL_OPTS_OPENVPN"
            ENABLED_ARMASM_CRYPTO=no
            ENABLED_AESGCM_STREAM=no # not yet implemented
            ENABLED_ARMASM_NEON=no
            { printf "%s\n" "$as_me:${as_lineno-$LINENO}: 32bit ARMv6 found" >&5
printf "%s\n" "$as_me: 32bit ARMv6 found" >&6;}
            ;;
        armv4*)
            AM_CPPFLAGS="$AM_CPPFLAGS -march=armv4 -fomit-frame-pointer -DWOLFSSL_ARMASM_NO_HW_CRYPTO -DWOLFSSL_ARM_ARCH=4"
            AM_CCASFLAGS="$AM_CCASFLAGS -DEXTERNAL_OPTS_OPENVPN"
            ENABLED_ARMASM_CRYPTO=no
            ENABLED_AESGCM_STREAM=no # not yet implemented
            ENABLED_ARMASM_NEON=no
            { printf "%s\n" "$as_me:${as_lineno-$LINENO}: 32bit ARMv4 found" >&5
printf "%s\n" "$as_me: 32bit ARMv4 found" >&6;}
            ;;
        *)
            AM_CPPFLAGS="$AM_CPPFLAGS -mfpu=crypto-neon-fp-armv8 -marm"
            # Include options.h
            AM_CCASFLAGS="$AM_CCASFLAGS -DEXTERNAL_OPTS_OPENVPN"
            ENABLED_ARMASM_CRYPTO=yes
            ENABLED_ARMASM_NEON=yes
            { printf "%s\n" "$as_me:${as_lineno-$LINENO}: 32bit ARMv8 found, setting mfpu to crypto-neon-fp-armv8" >&5
printf "%s\n" "$as_me: 32bit ARMv8 found, setting mfpu to crypto-neon-fp-armv8" >&6;}
            ;;
        esac
    esac
fi

if test "$ENABLED_ARMASM_SHA3" = "yes"; then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ARMASM_CRYPTO_SHA512 -DWOLFSSL_ARMASM_CRYPTO_SHA3"
    AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_ARMASM_CRYPTO_SHA512 -DWOLFSSL_ARMASM_CRYPTO_SHA3"
fi
if test "$ENABLED_ARMASM_SM3" = "yes"; then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ARMASM_CRYPTO_SM3"
fi
if test "$ENABLED_ARMASM_SM4" = "yes"; then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ARMASM_CRYPTO_SM4"
fi
if test "$ENABLED_ARMASM_CRYPTO" = "no"; then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ARMASM_NO_HW_CRYPTO"
fi
if test "$ENABLED_ARMASM_NEON" = "no"; then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ARMASM_NO_NEON"
    AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_ARMASM_NO_NEON"
fi

if test "$ENABLED_ARMASM_INLINE" = "yes"; then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ARMASM_INLINE"
fi

# Xilinx hardened crypto
@%:@ Check whether --enable-xilinx was given.
if test ${enable_xilinx+y}
then :
  enableval=$enable_xilinx;  ENABLED_XILINX=$enableval 
else case e in @%:@(
  e)  ENABLED_XILINX=no 
     ;;
esac
fi

if test "$ENABLED_XILINX" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_XILINX -DWOLFSSL_XILINX_CRYPT"
fi


# CAAM build
trylibsecodir="/usr"

@%:@ Check whether --with-seco was given.
if test ${with_seco+y}
then :
  withval=$with_seco; 
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for SECO" >&5
printf %s "checking for SECO... " >&6; }

if test "x$withval" != "xno" ; then
    trylibsecodir=$withval
fi


fi


@%:@ Check whether --enable-aria was given.
if test ${enable_aria+y}
then :
  enableval=$enable_aria;  ENABLED_ARIA=$enableval 
else case e in @%:@(
  e)  ENABLED_ARIA=no 
     ;;
esac
fi

if test "$ENABLED_ARIA" = "yes"
then
    ARIA_DIR=MagicCrypto
    # Enable dependency
    CFLAGS="$CFLAGS -I$ARIA_DIR/include"
    AM_CFLAGS="$AM_CFLAGS -DHAVE_ARIA"
    AM_LDFLAGS="$AM_LDFLAGS -L$ARIA_DIR/lib -lMagicCrypto"
    build_pwd="$(pwd)"
    headers="mcapi_error.h mcapi_type.h mcapi.h"
    for header in $headers
    do
        as_ac_Header=`printf "%s\n" "ac_cv_header_$header" | sed "$as_sed_sh"`
ac_fn_c_check_header_compile "$LINENO" "$header" "$as_ac_Header" "
            extern int dummy_int_to_make_compiler_happy;
        
"
if eval test \"x\$"$as_ac_Header"\" = x"yes"
then :
  
else case e in @%:@(
  e) 
                as_fn_error $? "Error including $header. Please put the MagicCrypto library in $build_pwd." "$LINENO" 5
             ;;
esac
fi

    done
fi

@%:@ Check whether --enable-caam was given.
if test ${enable_caam+y}
then :
  enableval=$enable_caam;  ENABLED_CAAM=$enableval 
else case e in @%:@(
  e)  ENABLED_CAAM=no 
     ;;
esac
fi


if test "$ENABLED_CAAM" != "no"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CAAM"

    for v in `echo $ENABLED_CAAM | tr "," " "`
    do
      case $v in
        qnx)
            AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_QNX_CAAM"
            ENABLED_CAAM_QNX="yes"
            ;;

        imx6q)
            AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_IMX6Q_CAAM"
            ;;

        imx6ul)
            AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_IMX6UL_CAAM"
            ;;

        seco)
            SECO_DIR=$trylibsecodir
            AM_CPPFLAGS="$AM_CPPFLAGS -I$SECO_DIR/include"
            AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CAAM -DWOLFSSL_SECO_CAAM"

            { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for hsm_open_session in -lhsm_lib" >&5
printf %s "checking for hsm_open_session in -lhsm_lib... " >&6; }
if test ${ac_cv_lib_hsm_lib_hsm_open_session+y}
then :
  printf %s "(cached) " >&6
else case e in @%:@(
  e) ac_check_lib_save_LIBS=$LIBS
LIBS="-lhsm_lib  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.
   The 'extern "C"' is for builds by C++ compilers;
   although this is not generally supported in C code supporting it here
   has little cost and some practical benefit (sr 110532).  */
#ifdef __cplusplus
extern "C"
#endif
char hsm_open_session (void);
int
main (void)
{
return hsm_open_session ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_lib_hsm_lib_hsm_open_session=yes
else case e in @%:@(
  e) ac_cv_lib_hsm_lib_hsm_open_session=no ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS ;;
esac
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_hsm_lib_hsm_open_session" >&5
printf "%s\n" "$ac_cv_lib_hsm_lib_hsm_open_session" >&6; }
if test "x$ac_cv_lib_hsm_lib_hsm_open_session" = xyes
then :
  printf "%s\n" "@%:@define HAVE_LIBHSM_LIB 1" >>confdefs.h

  LIBS="-lhsm_lib $LIBS"

fi

            { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for seco_nvm_manager in -lseco_nvm_manager" >&5
printf %s "checking for seco_nvm_manager in -lseco_nvm_manager... " >&6; }
if test ${ac_cv_lib_seco_nvm_manager_seco_nvm_manager+y}
then :
  printf %s "(cached) " >&6
else case e in @%:@(
  e) ac_check_lib_save_LIBS=$LIBS
LIBS="-lseco_nvm_manager  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.
   The 'extern "C"' is for builds by C++ compilers;
   although this is not generally supported in C code supporting it here
   has little cost and some practical benefit (sr 110532).  */
#ifdef __cplusplus
extern "C"
#endif
char seco_nvm_manager (void);
int
main (void)
{
return seco_nvm_manager ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_lib_seco_nvm_manager_seco_nvm_manager=yes
else case e in @%:@(
  e) ac_cv_lib_seco_nvm_manager_seco_nvm_manager=no ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS ;;
esac
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_seco_nvm_manager_seco_nvm_manager" >&5
printf "%s\n" "$ac_cv_lib_seco_nvm_manager_seco_nvm_manager" >&6; }
if test "x$ac_cv_lib_seco_nvm_manager_seco_nvm_manager" = xyes
then :
  printf "%s\n" "@%:@define HAVE_LIBSECO_NVM_MANAGER 1" >>confdefs.h

  LIBS="-lseco_nvm_manager $LIBS"

fi

            LIB_STATIC_ADD="$LIB_STATIC_ADD $SECO_DIR/lib/hsm_lib.a $SECO_DIR/lib/seco_nvm_manager.a"
            LIB_ADD="$LIB_ADD -lz"
            ;;

      esac
    done
fi

# INTEL AES-NI
@%:@ Check whether --enable-aesni was given.
if test ${enable_aesni+y}
then :
  enableval=$enable_aesni;  ENABLED_AESNI=$enableval 
else case e in @%:@(
  e)  ENABLED_AESNI=no 
     ;;
esac
fi


# INTEL ASM
@%:@ Check whether --enable-intelasm was given.
if test ${enable_intelasm+y}
then :
  enableval=$enable_intelasm;  ENABLED_INTELASM=$enableval 
else case e in @%:@(
  e)  ENABLED_INTELASM=no 
     ;;
esac
fi


if test "$ENABLED_ASM" = "yes"
then
    if test "$ENABLED_AESNI" = "small"
    then
        AM_CFLAGS="$AM_CFLAGS -DAES_GCM_AESNI_NO_UNROLL"
        ENABLED_AESNI=yes
    fi

    if test "$ENABLED_AESNI" = "yes" || test "$ENABLED_INTELASM" = "yes"
    then
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_AESNI"
        if test "$ENABLED_LINUXKM_DEFAULTS" = "yes"
        then
                AM_CFLAGS="$AM_CFLAGS -DWC_AES_C_DYNAMIC_FALLBACK"
        fi
        if test "$CC" != "icc"
        then
            case $host_os in
            mingw*)
                # Windows uses intrinsics for GCM which uses SSE4 instructions.
                # MSVC has own build files.
                AM_CFLAGS="$AM_CFLAGS -maes -msse4 -mpclmul"
                ;;
            *)
                # Intrinsics used in AES_set_decrypt_key (TODO: rework)
                AM_CFLAGS="$AM_CFLAGS -maes"
                ;;
            esac
        fi
        if test "x$ENABLED_AESGCM" != "xno"
then :
  AM_CCASFLAGS="$AM_CCASFLAGS -DHAVE_AESGCM"
fi
        if test "x$ENABLED_SM3" != "xno"
then :
  AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_SM3"
fi
    fi

    if test "$ENABLED_INTELASM" = "yes"
    then
        AM_CFLAGS="$AM_CFLAGS -DUSE_INTEL_SPEEDUP"
        ENABLED_AESNI=yes
    fi

    if test "$host_cpu" = "x86_64" || test "$host_cpu" = "amd64"
    then
        AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_X86_64_BUILD"
    fi
    if test "$host_cpu" = "x86"
    then
        AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_X86_BUILD"
        ENABLED_X86_ASM=yes
    fi
fi

@%:@ Check whether --enable-aligndata was given.
if test ${enable_aligndata+y}
then :
  enableval=$enable_aligndata;  ENABLED_ALIGN_DATA=$enableval 
else case e in @%:@(
  e)  ENABLED_ALIGN_DATA=yes 
     ;;
esac
fi


if test "$ENABLED_ALIGN_DATA" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_USE_ALIGN"
fi

# INTEL RDRAND
@%:@ Check whether --enable-intelrand was given.
if test ${enable_intelrand+y}
then :
  enableval=$enable_intelrand;  ENABLED_INTELRDRAND=$enableval 
else case e in @%:@(
  e)  ENABLED_INTELRDRAND=no 
     ;;
esac
fi


if test "$ENABLED_INTELRDRAND" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_INTEL_RDRAND"
fi

# AMD RDSEED
@%:@ Check whether --enable-amdrand was given.
if test ${enable_amdrand+y}
then :
  enableval=$enable_amdrand;  ENABLED_AMDRDSEED=$enableval 
else case e in @%:@(
  e)  ENABLED_AMDRDSEED=no 
     ;;
esac
fi


if test "$ENABLED_AMDRDSEED" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_AMD_RDSEED"
fi


# Linux af_alg
@%:@ Check whether --enable-afalg was given.
if test ${enable_afalg+y}
then :
  enableval=$enable_afalg;  ENABLED_AFALG=$enableval 
else case e in @%:@(
  e)  ENABLED_AFALG=no 
     ;;
esac
fi


if test "$ENABLED_AFALG" = "yes"
then
    if test "$ENABLED_AESCCM" = "yes"
    then
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_AES_DIRECT"
    fi
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_AFALG"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_AFALG_HASH"
fi

if test "$ENABLED_AFALG" = "xilinx"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_AFALG_XILINX -DWOLFSSL_AFALG_XILINX_AES"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_AFALG_XILINX_SHA3 -DWOLFSSL_AFALG_XILINX_RSA"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_NOSHA3_224 -DWOLFSSL_NOSHA3_256 -DWOLFSSL_NOSHA3_512"
    ENABLED_AFALG="yes"
    ENABLED_XILINX="yes"
fi

if test "$ENABLED_AFALG" = "xilinx-aes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_AFALG_XILINX -DWOLFSSL_AFALG_XILINX_AES"
    ENABLED_AFALG="yes"
    ENABLED_XILINX="yes"
fi

if test "$ENABLED_AFALG" = "xilinx-sha3"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_AFALG_XILINX"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_AFALG_XILINX_SHA3"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_NOSHA3_224 -DWOLFSSL_NOSHA3_256 -DWOLFSSL_NOSHA3_512"
    ENABLED_AFALG="yes"
    ENABLED_XILINX="yes"
fi

if test "$ENABLED_AFALG" = "xilinx-rsa"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_AFALG_XILINX"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_AFALG_XILINX_RSA"
    ENABLED_AFALG="yes"
    ENABLED_XILINX="yes"
fi


# libkcapi

@%:@ Check whether --enable-kcapi-hash was given.
if test ${enable_kcapi_hash+y}
then :
  enableval=$enable_kcapi_hash;  ENABLED_KCAPI_HASH=$enableval 
else case e in @%:@(
  e)  ENABLED_KCAPI_HASH=no 
     ;;
esac
fi


@%:@ Check whether --enable-kcapi-hmac was given.
if test ${enable_kcapi_hmac+y}
then :
  enableval=$enable_kcapi_hmac;  ENABLED_KCAPI_HMAC=$enableval 
else case e in @%:@(
  e)  ENABLED_KCAPI_HMAC=no 
     ;;
esac
fi


@%:@ Check whether --enable-kcapi-aes was given.
if test ${enable_kcapi_aes+y}
then :
  enableval=$enable_kcapi_aes;  ENABLED_KCAPI_AES=$enableval 
else case e in @%:@(
  e)  ENABLED_KCAPI_AES=no 
     ;;
esac
fi


@%:@ Check whether --enable-kcapi-rsa was given.
if test ${enable_kcapi_rsa+y}
then :
  enableval=$enable_kcapi_rsa;  ENABLED_KCAPI_RSA=$enableval 
else case e in @%:@(
  e)  ENABLED_KCAPI_RSA=no 
     ;;
esac
fi


@%:@ Check whether --enable-kcapi-dh was given.
if test ${enable_kcapi_dh+y}
then :
  enableval=$enable_kcapi_dh;  ENABLED_KCAPI_DH=$enableval 
else case e in @%:@(
  e)  ENABLED_KCAPI_DH=no 
     ;;
esac
fi


@%:@ Check whether --enable-kcapi-ecc was given.
if test ${enable_kcapi_ecc+y}
then :
  enableval=$enable_kcapi_ecc;  ENABLED_KCAPI_ECC=$enableval 
else case e in @%:@(
  e)  ENABLED_KCAPI_ECC=no 
     ;;
esac
fi


@%:@ Check whether --enable-kcapi was given.
if test ${enable_kcapi+y}
then :
  enableval=$enable_kcapi;  ENABLED_KCAPI=$enableval 
else case e in @%:@(
  e)  ENABLED_KCAPI=no 
     ;;
esac
fi


if test "$ENABLED_KCAPI" = "yes"
then
    if test "$enable_kcapi_hash" != "no"
then :
  ENABLED_KCAPI_HASH=yes
fi
    if test "$enable_kcapi_hmac" != "no"
then :
  ENABLED_KCAPI_HMAC=yes
fi
    if test "$enable_kcapi_aes" != "no"
then :
  ENABLED_KCAPI_AES=yes
fi
    if test "$enable_kcapi_rsa" != "no"
then :
  ENABLED_KCAPI_RSA=yes
fi
    if test "$enable_kcapi_dh" != "no"
then :
  ENABLED_KCAPI_DH=yes
fi
    if test "$enable_kcapi_ecc" != "no"
then :
  ENABLED_KCAPI_ECC=yes
fi
fi

if  test "$ENABLED_KCAPI_HASH" != "no" ||
    test "$ENABLED_KCAPI_HMAC" != "no" ||
    test "$ENABLED_KCAPI_AES" != "no" ||
    test "$ENABLED_KCAPI_RSA" != "no" ||
    test "$ENABLED_KCAPI_DH" != "no" ||
    test "$ENABLED_KCAPI_ECC" != "no"
then
    LIBS="$LIBS -lkcapi"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_KCAPI"
fi

if test "$ENABLED_KCAPI_HASH" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_KCAPI_HASH -DWOLFSSL_KCAPI_HASH_KEEP"
    # Linux Kernel doesn't support truncated SHA512 algorithms
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_NOSHA512_224 -DWOLFSSL_NOSHA512_256"
fi

if test "$ENABLED_KCAPI_HMAC" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_KCAPI_HMAC"
fi

if test "$ENABLED_KCAPI_AES" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_KCAPI_AES"
    HAVE_AESGCM_PORT=yes
    if test "$ENABLED_AESCCM" = "yes"
    then
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_AES_DIRECT"
    fi

    if test "$ENABLED_AESGCM_STREAM" = "yes"
    then
        as_fn_error $? "--enable-aesgcm-stream is incompatible with --enable-kcapi." "$LINENO" 5
    fi
fi

if test "$ENABLED_KCAPI_RSA" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_KCAPI_RSA"
fi

if test "$ENABLED_KCAPI_DH" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_KCAPI_DH -DWOLFSSL_DH_EXTRA"
fi

if test "$ENABLED_KCAPI_ECC" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_KCAPI_ECC"
fi


# Support for Linux dev/crypto calls
@%:@ Check whether --enable-devcrypto was given.
if test ${enable_devcrypto+y}
then :
  enableval=$enable_devcrypto;  ENABLED_DEVCRYPTO=$enableval 
else case e in @%:@(
  e)  ENABLED_DEVCRYPTO=no 
     ;;
esac
fi


if test "$ENABLED_DEVCRYPTO" = "yes" || test "$ENABLED_DEVCRYPTO" = "all"
then
    #enable all devcrypto supported algorithms
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DEVCRYPTO"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DEVCRYPTO_CBC"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DEVCRYPTO_AES"
    if test "$ENABLED_AESCCM" = "yes"
    then
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_AES_DIRECT"
    fi
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DEVCRYPTO_HASH"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_NO_HASH_RAW"
    ENABLED_DEVCRYPTO=yes
fi
if test "$ENABLED_DEVCRYPTO" = "aes"
then
    #enable only AES-CBC algorithm support
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DEVCRYPTO"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DEVCRYPTO_AES"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DEVCRYPTO_CBC"
    if test "$ENABLED_AESCCM" = "yes"
    then
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_AES_DIRECT"
    fi
    ENABLED_DEVCRYPTO=yes
fi
if test "$ENABLED_DEVCRYPTO" = "cbc"
then
    #enable only AES-CBC algorithm support
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DEVCRYPTO"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DEVCRYPTO_CBC"
    ENABLED_DEVCRYPTO=yes
fi
if test "$ENABLED_DEVCRYPTO" = "hash"
then
    #enable only hash algorithm support
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DEVCRYPTO"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DEVCRYPTO_HASH"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_NO_HASH_RAW"
    ENABLED_DEVCRYPTO=yes
fi
if test "$ENABLED_DEVCRYPTO" = "hmac"
then
    #enable only hmac algorithm support
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DEVCRYPTO"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DEVCRYPTO_HMAC"
    ENABLED_DEVCRYPTO=yes
fi
if test "$ENABLED_DEVCRYPTO" = "rsa"
then
    #enable only rsa algorithm support
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DEVCRYPTO"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DEVCRYPTO_RSA"
    ENABLED_DEVCRYPTO=yes
fi
if test "$ENABLED_DEVCRYPTO" = "seco"
then
    #enable support of devcrypto for algos not supported with seco
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DEVCRYPTO"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DEVCRYPTO_HMAC"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DEVCRYPTO_RSA"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DEVCRYPTO_CURVE25519"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DEVCRYPTO_ECDSA"
    ENABLED_DEVCRYPTO=yes
fi


# Camellia
@%:@ Check whether --enable-camellia was given.
if test ${enable_camellia+y}
then :
  enableval=$enable_camellia;  ENABLED_CAMELLIA=$enableval 
else case e in @%:@(
  e)  ENABLED_CAMELLIA=no 
     ;;
esac
fi


if test "$ENABLED_CAMELLIA" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_CAMELLIA"
fi


# MD2
@%:@ Check whether --enable-md2 was given.
if test ${enable_md2+y}
then :
  enableval=$enable_md2;  ENABLED_MD2=$enableval 
else case e in @%:@(
  e)  ENABLED_MD2=no 
     ;;
esac
fi


if test "$ENABLED_BUMP" = "yes"
then
    ENABLED_MD2="yes"
fi

if test "$ENABLED_MD2" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_MD2"
fi


# NULL CIPHER
@%:@ Check whether --enable-nullcipher was given.
if test ${enable_nullcipher+y}
then :
  enableval=$enable_nullcipher;  ENABLED_NULL_CIPHER=$enableval 
else case e in @%:@(
  e)  ENABLED_NULL_CIPHER=no 
     ;;
esac
fi


if test "$ENABLED_OPENSSH" = "yes"
then
    ENABLED_NULL_CIPHER="yes"
fi

if test "$ENABLED_NULL_CIPHER" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_NULL_CIPHER"
fi

# RIPEMD
@%:@ Check whether --enable-ripemd was given.
if test ${enable_ripemd+y}
then :
  enableval=$enable_ripemd;  ENABLED_RIPEMD=$enableval 
else case e in @%:@(
  e)  ENABLED_RIPEMD=no 
     ;;
esac
fi


if test "$ENABLED_OPENSSH" = "yes" && test "x$ENABLED_FIPS" = "xno"
then
    ENABLED_RIPEMD="yes"
fi

if test "$ENABLED_RIPEMD" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_RIPEMD"
fi


# BLAKE2
@%:@ Check whether --enable-blake2 was given.
if test ${enable_blake2+y}
then :
  enableval=$enable_blake2;  ENABLED_BLAKE2=$enableval 
else case e in @%:@(
  e)  ENABLED_BLAKE2=no 
     ;;
esac
fi


if test "$ENABLED_BLAKE2" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_BLAKE2 -DHAVE_BLAKE2B"
fi


@%:@ Check whether --enable-blake2s was given.
if test ${enable_blake2s+y}
then :
  enableval=$enable_blake2s;  ENABLED_BLAKE2S=$enableval 
else case e in @%:@(
  e)  ENABLED_BLAKE2S=no 
     ;;
esac
fi


if test "$ENABLED_BLAKE2S" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_BLAKE2S"
    ENABLED_BLAKE2="yes"
fi


# set sha224 default
SHA224_DEFAULT=no
if test "$host_cpu" = "x86_64" || test "$host_cpu" = "aarch64" || test "$host_cpu" = "amd64"
then
    if test "x$ENABLED_AFALG" = "xno" && test "x$ENABLED_DEVCRYPTO" = "xno" &&
        ( test "x$ENABLED_FIPS" = "xno" ||
          ( test "$HAVE_FIPS_VERSION" = 2 && test "$HAVE_FIPS_VERSION_MINOR" != 1 ) )
    then
        SHA224_DEFAULT=yes
    fi
fi

# SHA224
@%:@ Check whether --enable-sha224 was given.
if test ${enable_sha224+y}
then :
  enableval=$enable_sha224;  ENABLED_SHA224=$enableval 
else case e in @%:@(
  e)  ENABLED_SHA224=$SHA224_DEFAULT 
     ;;
esac
fi


if test "$ENABLED_SHA224" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SHA224"
fi


# set sha3 default
SHA3_DEFAULT=no
if (test "$host_cpu" = "x86_64" || test "$host_cpu" = "aarch64" || test "$host_cpu" = "amd64") && test "$ENABLED_32BIT" = "no"
then
    if test "x$ENABLED_FIPS" = "xno" || test "$HAVE_FIPS_VERSION" -ge 2
    then
        SHA3_DEFAULT=yes
    fi
fi

# SHA3
@%:@ Check whether --enable-sha3 was given.
if test ${enable_sha3+y}
then :
  enableval=$enable_sha3;  ENABLED_SHA3=$enableval 
else case e in @%:@(
  e)  ENABLED_SHA3=$SHA3_DEFAULT 
     ;;
esac
fi


if test "$ENABLED_SHA3" = "small"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SHA3_SMALL"
fi

# SHAKE128
@%:@ Check whether --enable-shake128 was given.
if test ${enable_shake128+y}
then :
  enableval=$enable_shake128;  ENABLED_SHAKE128=$enableval 
else case e in @%:@(
  e)  ENABLED_SHAKE128=no 
     ;;
esac
fi


# SHAKE256
@%:@ Check whether --enable-shake256 was given.
if test ${enable_shake256+y}
then :
  enableval=$enable_shake256;  ENABLED_SHAKE256=$enableval 
else case e in @%:@(
  e)  ENABLED_SHAKE256=no 
     ;;
esac
fi


# SHA512
@%:@ Check whether --enable-sha512 was given.
if test ${enable_sha512+y}
then :
  enableval=$enable_sha512;  ENABLED_SHA512=$enableval 
else case e in @%:@(
  e)  ENABLED_SHA512=yes 
     ;;
esac
fi


# options that don't require sha512
if test "$ENABLED_LEANPSK" = "yes" || test "$ENABLED_LEANTLS" = "yes" || test "$ENABLED_32BIT" = "yes" || test "$ENABLED_16BIT" = "yes"
then
    ENABLED_SHA512="no"
fi

# options that require sha512
if test "$ENABLED_OPENSSH" = "yes" || test "$ENABLED_WPAS" = "yes" || test "$ENABLED_FORTRESS" = "yes"
then
    ENABLED_SHA512="yes"
    ENABLED_SHA384="yes"
fi

if test "$ENABLED_SHA512" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SHA512"
fi


# SHA384
@%:@ Check whether --enable-sha384 was given.
if test ${enable_sha384+y}
then :
  enableval=$enable_sha384;  ENABLED_SHA384=$enableval 
else case e in @%:@(
  e)  ENABLED_SHA384=yes 
     ;;
esac
fi


# options that don't require sha384
if test "$ENABLED_LEANPSK" = "yes" || test "$ENABLED_LEANTLS" = "yes" || test "$ENABLED_32BIT" = "yes" || test "$ENABLED_16BIT" = "yes"
then
    ENABLED_SHA384="no"
fi

# options that require sha384
if test "$ENABLED_OPENSSH" = "yes" || test "$ENABLED_WPAS" = "yes" || test "$ENABLED_FORTRESS" = "yes"
then
    ENABLED_SHA384="yes"
fi
if test "$ENABLED_SHA384" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SHA384"
fi


# SM3
@%:@ Check whether --enable-sm3 was given.
if test ${enable_sm3+y}
then :
  enableval=$enable_sm3;  ENABLED_SM3=$enableval 
else case e in @%:@(
  e)  ENABLED_SM3=no 
     ;;
esac
fi


if test "$ENABLED_SM3" = "small"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SM3_SMALL"
fi
if test "$ENABLED_SM3" != "no"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SM3"
fi

# SESSION CERTS
@%:@ Check whether --enable-sessioncerts was given.
if test ${enable_sessioncerts+y}
then :
  enableval=$enable_sessioncerts;  ENABLED_SESSIONCERTS=$enableval 
else case e in @%:@(
  e)  ENABLED_SESSIONCERTS=no 
     ;;
esac
fi


if test "x$ENABLED_NGINX" = "xyes" || test "x$ENABLED_OPENVPN" = "xyes" || \
   test "x$ENABLED_LIGHTY" = "xyes" || test "x$ENABLED_NETSNMP" = "xyes" || \
   test "x$ENABLED_STRONGSWAN" = "xyes" || test "x$ENABLED_HITCH" = "xyes"
then
    ENABLED_SESSIONCERTS=yes
fi
if test "$ENABLED_TLS13" = "yes" && test "$ENABLED_PSK" = "yes"
then
    ENABLED_SESSIONCERTS=yes
fi

if test "$ENABLED_SESSIONCERTS" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DSESSION_CERTS"
fi


# KEY GENERATION
@%:@ Check whether --enable-keygen was given.
if test ${enable_keygen+y}
then :
  enableval=$enable_keygen;  ENABLED_KEYGEN=$enableval 
else case e in @%:@(
  e)  ENABLED_KEYGEN=no 
     ;;
esac
fi


if test "$ENABLED_BIND" = "yes" || test "$ENABLED_NTP" = "yes" || \
   test "$ENABLED_LIBSSH2" = "yes" || test "$ENABLED_OPENRESTY" = "yes" || \
   test "$ENABLED_NGINX" = "yes" || test "$ENABLED_WOLFENGINE" = "yes" || \
   test "$ENABLED_STRONGSWAN" = "yes" || test "$ENABLED_SE050" = "yes"
then
    ENABLED_KEYGEN=yes
fi


# CERT GENERATION
@%:@ Check whether --enable-certgen was given.
if test ${enable_certgen+y}
then :
  enableval=$enable_certgen;  ENABLED_CERTGEN=$enableval 
else case e in @%:@(
  e)  ENABLED_CERTGEN=no 
     ;;
esac
fi

if test "$ENABLED_OPENVPN" = "yes" || test "$ENABLED_OPENSSH" = "yes" || \
   test "$ENABLED_BIND" = "yes" || test "$ENABLED_NTP" = "yes" || \
   test "$ENABLED_CHRONY" = "yes" || test "$ENABLED_STRONGSWAN" = "yes" || \
   test "$ENABLED_OPENLDAP" = "yes" || test "$ENABLED_HITCH" = "yes"
then
    ENABLED_CERTGEN=yes
fi

# CERT REQUEST GENERATION
@%:@ Check whether --enable-certreq was given.
if test ${enable_certreq+y}
then :
  enableval=$enable_certreq;  ENABLED_CERTREQ=$enableval 
else case e in @%:@(
  e)  ENABLED_CERTREQ=no 
     ;;
esac
fi


if test "$ENABLED_WPAS_DPP" = "yes"
then
    ENABLED_CERTREQ="yes"
fi

# CERT REQUEST EXTENSION
@%:@ Check whether --enable-certext was given.
if test ${enable_certext+y}
then :
  enableval=$enable_certext;  ENABLED_CERTEXT=$enableval 
else case e in @%:@(
  e)  ENABLED_CERTEXT=no 
     ;;
esac
fi

if test "$ENABLED_OPENVPN" = "yes" || test "$ENABLED_STRONGSWAN" = "yes"
then
    ENABLED_CERTEXT=yes
fi


# DECODED CERT CACHE
@%:@ Check whether --enable-certgencache was given.
if test ${enable_certgencache+y}
then :
  enableval=$enable_certgencache;  ENABLED_certgencache=$enableval 
else case e in @%:@(
  e)  ENABLED_certgencache=no 
     ;;
esac
fi


if test "$ENABLED_certgencache" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CERT_GEN_CACHE"
fi


# SEP
@%:@ Check whether --enable-sep was given.
if test ${enable_sep+y}
then :
  enableval=$enable_sep;  ENABLED_SEP=$enableval 
else case e in @%:@(
  e)  ENABLED_SEP=no 
     ;;
esac
fi

if test "$ENABLED_SEP" = "yes"
then
  AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SEP -DKEEP_PEER_CERT"
fi


# HKDF
@%:@ Check whether --enable-hkdf was given.
if test ${enable_hkdf+y}
then :
  enableval=$enable_hkdf;  ENABLED_HKDF=$enableval 
else case e in @%:@(
  e)  ENABLED_HKDF=no 
     ;;
esac
fi

if test "$ENABLED_TLS13" = "yes"
then
  ENABLED_HKDF="yes"
fi
if test "$ENABLED_HKDF" = "yes"
then
  AM_CFLAGS="$AM_CFLAGS -DHAVE_HKDF"
fi


# HPKE
@%:@ Check whether --enable-hpke was given.
if test ${enable_hpke+y}
then :
  enableval=$enable_hpke;  ENABLED_HPKE=$enableval 
else case e in @%:@(
  e)  ENABLED_HPKE=no 
     ;;
esac
fi

if test "$ENABLED_HPKE" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_HPKE"

    test "$enable_hkdf" = "" && enable_hkdf=yes
fi

# X9.63 KDF
@%:@ Check whether --enable-x963kdf was given.
if test ${enable_x963kdf+y}
then :
  enableval=$enable_x963kdf;  ENABLED_X963KDF=$enableval 
else case e in @%:@(
  e)  ENABLED_X963KDF=no 
     ;;
esac
fi

if test "$ENABLED_X963KDF" = "yes" || test "$ENABLED_WOLFENGINE" = "yes"
then
  AM_CFLAGS="$AM_CFLAGS -DHAVE_X963_KDF"
fi

# SRTP-KDF
@%:@ Check whether --enable-srtp-kdf was given.
if test ${enable_srtp_kdf+y}
then :
  enableval=$enable_srtp_kdf;  ENABLED_SRTP_KDF=$enableval 
else case e in @%:@(
  e)  ENABLED_SRTP_KDF=no 
     ;;
esac
fi

if test "$ENABLED_SRTP" = "yes"
then
  ENABLED_SRTP_KDF="yes"
fi
if test "$ENABLED_SRTP_KDF" = "yes"
then
  AM_CFLAGS="$AM_CFLAGS -DWC_SRTP_KDF -DHAVE_AES_ECB -DWOLFSSL_AES_DIRECT"
fi


# DSA
@%:@ Check whether --enable-dsa was given.
if test ${enable_dsa+y}
then :
  enableval=$enable_dsa;  ENABLED_DSA=$enableval 
else case e in @%:@(
  e)  ENABLED_DSA=no 
     ;;
esac
fi


if test "$enable_dsa" = "" && test "$enable_sha" != "no"
then
    if (test "$ENABLED_OPENSSH" = "yes" && test "x$ENABLED_FIPS" = "xno") || test "$ENABLED_OPENVPN" = "yes" || test "$ENABLED_NGINX" = "yes" || test "$ENABLED_WPAS" = "yes" || test "$ENABLED_QT" = "yes" || test "$ENABLED_BIND" = "yes" || test "$ENABLED_LIBSSH2" = "yes" || test "$ENABLED_NTP" = "yes"
    then
        ENABLED_DSA="yes"
    fi
fi

if test "$ENABLED_DSA" = "no"
then
    AM_CFLAGS="$AM_CFLAGS -DNO_DSA"
else
    ENABLED_CERTS=yes
fi

# ECC Shamir
@%:@ Check whether --enable-eccshamir was given.
if test ${enable_eccshamir+y}
then :
  enableval=$enable_eccshamir;  ENABLED_ECC_SHAMIR=$enableval 
else case e in @%:@(
  e)  ENABLED_ECC_SHAMIR=yes 
     ;;
esac
fi



# ECC
@%:@ Check whether --enable-ecc was given.
if test ${enable_ecc+y}
then :
  enableval=$enable_ecc;  ENABLED_ECC=$enableval 
else case e in @%:@(
  e)  ENABLED_ECC=yes 
     ;;
esac
fi


# lean psk doesn't need ecc
if test "$ENABLED_LEANPSK" = "yes"
then
    ENABLED_ECC=no
fi

if test "$ENABLED_OPENSSH" = "yes" || test "$ENABLED_NGINX" = "yes" || test "$ENABLED_SIGNAL" = "yes"
then
    ENABLED_ECC="yes"
fi

if test "$ENABLED_ECC" != "no"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_ECC -DTFM_ECC256"
    if test "$ENABLED_ECC_SHAMIR" = "yes" && test "$ENABLED_LOWRESOURCE" = "no"
    then
        AM_CFLAGS="$AM_CFLAGS -DECC_SHAMIR"
    fi

    if test "$ENABLED_ECC" = "nonblock"
    then
        AM_CFLAGS="$AM_CFLAGS -DWC_ECC_NONBLOCK"
    fi

    if test "$ENABLED_LOWRESOURCE" = "yes" && test "$ENABLED_FASTMATH" = "yes"
    then
        AM_CFLAGS="$AM_CFLAGS -DALT_ECC_SIZE"
    fi

    ENABLED_CERTS=yes
fi


# SM2
@%:@ Check whether --enable-sm2 was given.
if test ${enable_sm2+y}
then :
  enableval=$enable_sm2;  ENABLED_SM2=$enableval 
else case e in @%:@(
  e)  ENABLED_SM2=no 
     ;;
esac
fi


if test "$ENABLED_SM2" = "yes"
then
    if test "$ENABLED_ECC" = "no"
    then
        as_fn_error $? "Cannot enable SM2 without enabling ecc." "$LINENO" 5
    fi

    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SM2 -DWOLFSSL_BASE16"
fi


# ECC Custom Curves
@%:@ Check whether --enable-ecccustcurves was given.
if test ${enable_ecccustcurves+y}
then :
  enableval=$enable_ecccustcurves;  ENABLED_ECCCUSTCURVES=$enableval 
else case e in @%:@(
  e)  ENABLED_ECCCUSTCURVES=no 
     ;;
esac
fi


if test "$ENABLED_WPAS_DPP" = "yes"
then
    ENABLED_ECCCUSTCURVES="all"
fi

if test "$ENABLED_ECCCUSTCURVES" != "no"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CUSTOM_CURVES"

    # For distro, all or ecccustcurves=all builds, enable all curve types
    if test "$ENABLED_DISTRO" = "yes" || test "$ENABLED_ALL" = "yes" || test "$ENABLED_ECCCUSTCURVES" = "all"
    then
        # Enable ECC SECPR2, SECPR3, BRAINPOOL and KOBLITZ curves
        AM_CFLAGS="$AM_CFLAGS -DHAVE_ECC_SECPR2 -DHAVE_ECC_SECPR3 -DHAVE_ECC_BRAINPOOL -DHAVE_ECC_KOBLITZ"

        # Enable ECC Cofactor support
        AM_CFLAGS="$AM_CFLAGS -DHAVE_ECC_CDH"

        # If fastmath enabled and on x86 use speedups
        if test "x$ENABLED_FASTMATH" = "xyes" && test "$host_cpu" = "x86_64" -o "$host_cpu" = "amd64"
        then
            AM_CFLAGS="$AM_CFLAGS -DTFM_ECC192 -DTFM_ECC224 -DTFM_ECC256 -DTFM_ECC384 -DTFM_ECC521"
        fi
    fi
fi

# ECC Minimum Key Size
ENABLED_ECCMINSZ=224

@%:@ Check whether --with-eccminsz was given.
if test ${with_eccminsz+y}
then :
  withval=$with_eccminsz; 
        ENABLED_ECCMINSZ=$withval
        AM_CFLAGS="$AM_CFLAGS -DECC_MIN_KEY_SZ=$withval"
    

fi


# Compressed Key
@%:@ Check whether --enable-compkey was given.
if test ${enable_compkey+y}
then :
  enableval=$enable_compkey;  ENABLED_COMPKEY=$enableval 
else case e in @%:@(
  e)  ENABLED_COMPKEY=no 
     ;;
esac
fi


if test "$ENABLED_WPAS" = "yes" || test "$ENABLED_OPENSSLALL" = "yes"
then
    ENABLED_COMPKEY=yes
fi


# Brainpool (depends on _ECCCUSTCURVES)
if test "$ENABLED_ECCCUSTCURVES" != "no"
then
    BRAINPOOL_DEFAULT=yes
else
    BRAINPOOL_DEFAULT=no
fi

@%:@ Check whether --enable-brainpool was given.
if test ${enable_brainpool+y}
then :
  enableval=$enable_brainpool;  ENABLED_BRAINPOOL=$enableval 
else case e in @%:@(
  e)  ENABLED_BRAINPOOL="$BRAINPOOL_DEFAULT" 
     ;;
esac
fi


if test "$ENABLED_BRAINPOOL" != "no"
then
    if test "$ENABLED_ECCCUSTCURVES" = "no"
    then
        as_fn_error $? "cannot enable Brainpool without enabling ecccustcurves." "$LINENO" 5
    fi
    AM_CFLAGS="$AM_CFLAGS -DHAVE_ECC_BRAINPOOL"
fi


# for using memory optimization setting on both curve25519 and ed25519
ENABLED_CURVE25519_SMALL=no
ENABLED_ED25519_SMALL=no

# CURVE25519
@%:@ Check whether --enable-curve25519 was given.
if test ${enable_curve25519+y}
then :
  enableval=$enable_curve25519;  ENABLED_CURVE25519=$enableval 
else case e in @%:@(
  e)  ENABLED_CURVE25519=no 
     ;;
esac
fi


if test "$ENABLED_QUIC" = "yes" && test "$ENABLED_CURVE25519" = "no"
then
    ENABLED_CURVE25519=yes
fi

if test "$ENABLED_OPENSSH" = "yes" && test "x$ENABLED_FIPS" = "xno"
then
    ENABLED_CURVE25519="yes"
fi

if test "$ENABLED_CURVE25519" != "no"
then
    if test "$ENABLED_CURVE25519" = "small" || test "$ENABLED_LOWRESOURCE" = "yes"
    then
        AM_CFLAGS="$AM_CFLAGS -DCURVE25519_SMALL"
        ENABLED_CURVE25519_SMALL=yes
        ENABLED_CURVE25519=yes
    fi

    if test "$ENABLED_CURVE25519" = "no128bit" || test "$ENABLED_32BIT" = "yes"
    then
        AM_CFLAGS="$AM_CFLAGS -DNO_CURVED25519_128BIT"
        ENABLED_CURVE25519=yes
    fi

    AM_CFLAGS="$AM_CFLAGS -DHAVE_CURVE25519"
    AM_CCASFLAGS="$AM_CCASFLAGS -DHAVE_CURVE25519"
    ENABLED_FEMATH=yes
fi


# ED25519
@%:@ Check whether --enable-ed25519 was given.
if test ${enable_ed25519+y}
then :
  enableval=$enable_ed25519;  ENABLED_ED25519=$enableval 
else case e in @%:@(
  e)  ENABLED_ED25519=no 
     ;;
esac
fi

@%:@ Check whether --enable-ed25519-stream was given.
if test ${enable_ed25519_stream+y}
then :
  enableval=$enable_ed25519_stream;  ENABLED_ED25519_STREAM=$enableval 
else case e in @%:@(
  e)  ENABLED_ED25519_STREAM=no 
     ;;
esac
fi



if (test "$ENABLED_OPENSSH" = "yes" && test "x$ENABLED_FIPS" = "xno") || \
   test "$ENABLED_CHRONY" = "yes"
then
    ENABLED_ED25519="yes"
fi

# for using memory optimization setting on both curve448 and ed448
ENABLED_CURVE448_SMALL=no
ENABLED_ED448_SMALL=no

# CURVE448
@%:@ Check whether --enable-curve448 was given.
if test ${enable_curve448+y}
then :
  enableval=$enable_curve448;  ENABLED_CURVE448=$enableval 
else case e in @%:@(
  e)  ENABLED_CURVE448=no 
     ;;
esac
fi


if test "$ENABLED_CURVE448" != "no"
then
    if test "$ENABLED_CURVE448" = "small" || test "$ENABLED_LOWRESOURCE" = "yes"
    then
        AM_CFLAGS="$AM_CFLAGS -DCURVE448_SMALL"
        ENABLED_CURVE448_SMALL=yes
        ENABLED_CURVE448=yes
    fi

    if test "$ENABLED_CURVE448" = "no128bit" || test "$ENABLED_32BIT" = "yes"
    then
        AM_CFLAGS="$AM_CFLAGS -DNO_CURVED448_128BIT"
        ENABLED_CURVE448=yes
    fi

    AM_CFLAGS="$AM_CFLAGS -DHAVE_CURVE448"
    ENABLED_FE448=yes
fi

# ED448
@%:@ Check whether --enable-ed448 was given.
if test ${enable_ed448+y}
then :
  enableval=$enable_ed448;  ENABLED_ED448=$enableval 
else case e in @%:@(
  e)  ENABLED_ED448=no 
     ;;
esac
fi

@%:@ Check whether --enable-ed448-stream was given.
if test ${enable_ed448_stream+y}
then :
  enableval=$enable_ed448_stream;  ENABLED_ED448_STREAM=$enableval 
else case e in @%:@(
  e)  ENABLED_ED448_STREAM=no 
     ;;
esac
fi


if test "$ENABLED_ED448" != "no" && test "$ENABLED_32BIT" = "no"
then
    if test "$ENABLED_ED448" = "small" || test "$ENABLED_LOWRESOURCE" = "yes"
    then
        AM_CFLAGS="$AM_CFLAGS -DED448_SMALL"
        ENABLED_ED448_SMALL=yes
        ENABLED_CURVE448_SMALL=yes
        ENABLED_ED448=yes
    fi

    if test "$ENABLED_SHA512" = "no"
    then
        as_fn_error $? "cannot enable ed448 without enabling sha512." "$LINENO" 5
    fi
    if test "$HAVE_FIPS_VERSION" = 2
    then
        as_fn_error $? "cannot enable ed448 w/ dependency shake256 in FIPSv2 mode" "$LINENO" 5
    fi
    ENABLED_FE448=yes
    ENABLED_GE448=yes
    AM_CFLAGS="$AM_CFLAGS -DHAVE_ED448"

    # EdDSA448 requires SHAKE256 which requires SHA-3
    if test "$ENABLED_SHA3" = "no"
    then
        ENABLED_SHA3=yes
    fi
    ENABLED_SHAKE256=yes

    ENABLED_CERTS=yes
fi

if test "$ENABLED_ED448_STREAM" != "no"
then
    if test "$ENABLED_ED448" = "no"
    then
        as_fn_error $? "ED448 verify streaming enabled but ED448 is disabled" "$LINENO" 5
    else
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ED448_STREAMING_VERIFY"
        AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_ED448_STREAMING_VERIFY"
    fi
fi


# FP ECC, Fixed Point cache ECC
@%:@ Check whether --enable-fpecc was given.
if test ${enable_fpecc+y}
then :
  enableval=$enable_fpecc;  ENABLED_FPECC=$enableval 
else case e in @%:@(
  e)  ENABLED_FPECC=no 
     ;;
esac
fi


if test "$ENABLED_FPECC" = "yes"
then
    if test "$ENABLED_ECC" = "no"
    then
        as_fn_error $? "cannot enable fpecc without enabling ecc." "$LINENO" 5
    fi
    AM_CFLAGS="$AM_CFLAGS -DFP_ECC"
fi


# ECC encrypt
@%:@ Check whether --enable-eccencrypt was given.
if test ${enable_eccencrypt+y}
then :
  enableval=$enable_eccencrypt;  ENABLED_ECC_ENCRYPT=$enableval 
else case e in @%:@(
  e)  ENABLED_ECC_ENCRYPT=no 
     ;;
esac
fi


if test "$ENABLED_ECC_ENCRYPT" != "no"
then
    if test "$ENABLED_ECC" = "no"
    then
        as_fn_error $? "cannot enable eccencrypt without enabling ecc." "$LINENO" 5
    fi
    if test "$ENABLED_HKDF" = "no"
    then
        as_fn_error $? "cannot enable eccencrypt without enabling hkdf." "$LINENO" 5
    fi
    AM_CFLAGS="$AM_CFLAGS -DHAVE_ECC_ENCRYPT"
    if test "$ENABLED_ECC_ENCRYPT" = "old"
    then
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ECIES_OLD"
    fi
    if test "$ENABLED_ECC_ENCRYPT" = "iso18033"
    then
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ECIES_ISO18033"
    fi
    if test "$ENABLED_ECC_ENCRYPT" = "geniv"
    then
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ECIES_GEN_IV"
    fi
fi

# Elliptic Curve-Based Certificateless Signatures for Identity-Based Encryption (ECCSI)
@%:@ Check whether --enable-eccsi was given.
if test ${enable_eccsi+y}
then :
  enableval=$enable_eccsi;  ENABLED_ECCSI=$enableval 
else case e in @%:@(
  e)  ENABLED_ECCSI=no 
     ;;
esac
fi


if test "x$ENABLED_ECCSI" = "xyes"
then
    if test "$ENABLED_ECC" = "no"
    then
        as_fn_error $? "ECCSI requires ECC." "$LINENO" 5
    fi
    AM_CFLAGS="$AM_CFLAGS -DWOLFCRYPT_HAVE_ECCSI -DWOLFSSL_PUBLIC_MP"
fi

# Sakai-Kasahara Key Encryption (SAKKE) - pairing based crypto
@%:@ Check whether --enable-sakke was given.
if test ${enable_sakke+y}
then :
  enableval=$enable_sakke;  ENABLED_SAKKE=$enableval 
else case e in @%:@(
  e)  ENABLED_SAKKE=no 
     ;;
esac
fi


if test "$ENABLED_SAKKE" != "no" && test "$ENABLED_ECC" = "no"
then
    as_fn_error $? "SAKKE requires ECC." "$LINENO" 5
fi

if test "x$ENABLED_SAKKE" = "xsmall"
then
    ENABLED_SAKKE="yes"
    ENABLED_SAKKE_SMALL="yes"
    AM_CFLAGS="$AM_CFLAGS -DWOLFCRYPT_SAKKE_SMALL"
fi
if test "x$ENABLED_SAKKE" = "xyes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFCRYPT_HAVE_SAKKE"
fi


# PSK
@%:@ Check whether --enable-psk was given.
if test ${enable_psk+y}
then :
  enableval=$enable_psk;  ENABLED_PSK=$enableval 
else case e in @%:@(
  e)  ENABLED_PSK=no 
     ;;
esac
fi


# Single PSK identity
@%:@ Check whether --enable-psk-one-id was given.
if test ${enable_psk_one_id+y}
then :
  enableval=$enable_psk_one_id;  ENABLED_PSK_ONE_ID=$enableval 
else case e in @%:@(
  e)  ENABLED_PSK_ONE_ID=no 
     ;;
esac
fi

if test "$ENABLED_PSK_ONE_ID" = "yes"
then
    if test "$ENABLED_PSK" = "no"
    then
        ENABLED_PSK="yes"
    fi
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_PSK_ONE_ID"
fi

# ERROR STRINGS
@%:@ Check whether --enable-errorstrings was given.
if test ${enable_errorstrings+y}
then :
  enableval=$enable_errorstrings;  ENABLED_ERROR_STRINGS=$enableval 
else case e in @%:@(
  e)  ENABLED_ERROR_STRINGS=yes 
     ;;
esac
fi


if test "$ENABLED_ERROR_STRINGS" = "no"
then
    AM_CFLAGS="$AM_CFLAGS -DNO_ERROR_STRINGS"
else
    # turn off error strings if leanpsk or leantls on
    if test "$ENABLED_LEANPSK" = "yes" || test "$ENABLED_LEANTLS" = "yes"
    then
        AM_CFLAGS="$AM_CFLAGS -DNO_ERROR_STRINGS"
        ENABLED_ERROR_STRINGS=no
    fi
fi


# ERROR QUEUE
@%:@ Check whether --enable-errorqueue was given.
if test ${enable_errorqueue+y}
then :
  enableval=$enable_errorqueue;  ENABLED_ERROR_QUEUE=$enableval 
else case e in @%:@(
  e)  ENABLED_ERROR_QUEUE=yes 
     ;;
esac
fi



# SSLv3
@%:@ Check whether --enable-sslv3 was given.
if test ${enable_sslv3+y}
then :
  enableval=$enable_sslv3;  ENABLED_SSLV3=$enableval 
else case e in @%:@(
  e)  ENABLED_SSLV3=no
     ;;
esac
fi


if test "x$ENABLED_HAPROXY" = "xyes" && test "x$ENABLED_ALL" = "xno"
then
    ENABLED_SSLV3="yes"
fi
if test "$ENABLED_CRYPTONLY" = "yes"
then
    ENABLED_SSLV3=no
fi

if test "$ENABLED_SSLV3" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ALLOW_SSLV3"
fi

# TLSv1.0
@%:@ Check whether --enable-tlsv10 was given.
if test ${enable_tlsv10+y}
then :
  enableval=$enable_tlsv10;  ENABLED_TLSV10=$enableval 
else case e in @%:@(
  e)  ENABLED_TLSV10=no 
     ;;
esac
fi


if test "$ENABLED_CRYPTONLY" = "yes"
then
    ENABLED_TLSV12=no
fi
if test "$ENABLED_TLSV10" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ALLOW_TLSV10"
fi


# OLD TLS
@%:@ Check whether --enable-oldtls was given.
if test ${enable_oldtls+y}
then :
  enableval=$enable_oldtls;  ENABLED_OLD_TLS=$enableval 
else case e in @%:@(
  e)  ENABLED_OLD_TLS=no 
     ;;
esac
fi



if test "$ENABLED_CRYPTONLY" = "yes" || test "x$ENABLED_HARDEN_TLS" != "xno" || \
    test "$ENABLED_LEANPSK" = "yes" || test "$ENABLED_LEANTLS" = "yes"
then
    ENABLED_OLD_TLS=no
fi

# if SSL v3.0 or TLS v1.0 enabled, then allow "old tls". QT also requires it apparently
if test "$ENABLED_TLSV10" = "yes" || test "$ENABLED_SSLV3" = "yes" || \
    (test "$ENABLED_QT" = "yes" && test "x$ENABLED_ALL" = "xno")
then
    ENABLED_OLD_TLS=yes
fi

if test "$ENABLED_OLD_TLS" = "no"
then
    AM_CFLAGS="$AM_CFLAGS -DNO_OLD_TLS"
fi


# TLSv1.2
@%:@ Check whether --enable-tlsv12 was given.
if test ${enable_tlsv12+y}
then :
  enableval=$enable_tlsv12;  ENABLED_TLSV12=$enableval 
else case e in @%:@(
  e)  ENABLED_TLSV12=yes 
     ;;
esac
fi


if test "$ENABLED_CRYPTONLY" = "yes"
then
    ENABLED_TLSV12=no
fi
if test "$ENABLED_TLSV12" = "no"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_NO_TLS12 -DNO_OLD_TLS"
fi



# STACK SIZE info for testwolfcrypt and examples
@%:@ Check whether --enable-stacksize was given.
if test ${enable_stacksize+y}
then :
  enableval=$enable_stacksize;  ENABLED_STACKSIZE=$enableval 
else case e in @%:@(
  e)  ENABLED_STACKSIZE=no 
     ;;
esac
fi


if test "$ENABLED_STACKSIZE" != "no"
then
    ac_fn_c_check_func "$LINENO" "posix_memalign" "ac_cv_func_posix_memalign"
if test "x$ac_cv_func_posix_memalign" = xyes
then :
  
else case e in @%:@(
  e) as_fn_error $? "stacksize needs posix_memalign" "$LINENO" 5 ;;
esac
fi

    ac_fn_check_decl "$LINENO" "posix_memalign" "ac_cv_have_decl_posix_memalign" "$ac_includes_default" "$ac_c_undeclared_builtin_options" "CFLAGS"
if test "x$ac_cv_have_decl_posix_memalign" = xyes
then :
  
else case e in @%:@(
  e) as_fn_error $? "stacksize needs posix_memalign" "$LINENO" 5 ;;
esac
fi
    ac_fn_c_check_func "$LINENO" "pthread_attr_setstack" "ac_cv_func_pthread_attr_setstack"
if test "x$ac_cv_func_pthread_attr_setstack" = xyes
then :
  
else case e in @%:@(
  e) { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for pthread_attr_setstack in -lpthread" >&5
printf %s "checking for pthread_attr_setstack in -lpthread... " >&6; }
if test ${ac_cv_lib_pthread_pthread_attr_setstack+y}
then :
  printf %s "(cached) " >&6
else case e in @%:@(
  e) ac_check_lib_save_LIBS=$LIBS
LIBS="-lpthread  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.
   The 'extern "C"' is for builds by C++ compilers;
   although this is not generally supported in C code supporting it here
   has little cost and some practical benefit (sr 110532).  */
#ifdef __cplusplus
extern "C"
#endif
char pthread_attr_setstack (void);
int
main (void)
{
return pthread_attr_setstack ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_lib_pthread_pthread_attr_setstack=yes
else case e in @%:@(
  e) ac_cv_lib_pthread_pthread_attr_setstack=no ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS ;;
esac
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_pthread_pthread_attr_setstack" >&5
printf "%s\n" "$ac_cv_lib_pthread_pthread_attr_setstack" >&6; }
if test "x$ac_cv_lib_pthread_pthread_attr_setstack" = xyes
then :
  printf "%s\n" "@%:@define HAVE_LIBPTHREAD 1" >>confdefs.h

  LIBS="-lpthread $LIBS"

fi
 ;;
esac
fi

    ac_fn_check_decl "$LINENO" "pthread_attr_setstack" "ac_cv_have_decl_pthread_attr_setstack" "#include <pthread.h>
" "$ac_c_undeclared_builtin_options" "CFLAGS"
if test "x$ac_cv_have_decl_pthread_attr_setstack" = xyes
then :
  
else case e in @%:@(
  e) as_fn_error $? "stacksize needs pthread_attr_setstack" "$LINENO" 5 ;;
esac
fi
    AM_CFLAGS="$AM_CFLAGS -DHAVE_STACK_SIZE"
fi

if test "$ENABLED_STACKSIZE" = "verbose"
then
    if test "$thread_ls_on" != "yes"
    then
        as_fn_error $? "stacksize-verbose needs thread-local storage." "$LINENO" 5
    fi
    AM_CFLAGS="$AM_CFLAGS -DHAVE_STACK_SIZE_VERBOSE"
fi


# MEMORY
@%:@ Check whether --enable-memory was given.
if test ${enable_memory+y}
then :
  enableval=$enable_memory;  ENABLED_MEMORY=$enableval 
else case e in @%:@(
  e)  ENABLED_MEMORY=yes 
     ;;
esac
fi


if test "$ENABLED_MEMORY" = "no"
then
    AM_CFLAGS="$AM_CFLAGS -DNO_WOLFSSL_MEMORY"
else
    # turn off memory cb if leanpsk or leantls on
    if test "$ENABLED_LEANPSK" = "yes" || test "$ENABLED_LEANTLS" = "yes"
    then
        # but don't turn on NO_WOLFSSL_MEMORY because using own
        ENABLED_MEMORY=no
    fi
fi


# MEMORY SIZE info
@%:@ Check whether --enable-trackmemory was given.
if test ${enable_trackmemory+y}
then :
  enableval=$enable_trackmemory;  ENABLED_TRACKMEMORY=$enableval 
else case e in @%:@(
  e)  ENABLED_TRACKMEMORY=no 
     ;;
esac
fi


if test "$ENABLED_TRACKMEMORY" != "no"
then
    if test "$ENABLED_MEMORY" = "yes"
    then
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_TRACK_MEMORY"
    else
        as_fn_error $? "trackmemory requires using wolfSSL memory (--enable-memory)." "$LINENO" 5
    fi
    if test "$ENABLED_TRACKMEMORY" = "verbose"
    then
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_TRACK_MEMORY_VERBOSE"
    fi
fi

# MEMORY usage logging
@%:@ Check whether --enable-memorylog was given.
if test ${enable_memorylog+y}
then :
  enableval=$enable_memorylog;  ENABLED_MEMORYLOG=$enableval 
else case e in @%:@(
  e)  ENABLED_MEMORYLOG=no 
     ;;
esac
fi


if test "$ENABLED_MEMORYLOG" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_MEMORY_LOG"
fi


# STACK usage logging
@%:@ Check whether --enable-stacklog was given.
if test ${enable_stacklog+y}
then :
  enableval=$enable_stacklog;  ENABLED_STACKLOG=$enableval 
else case e in @%:@(
  e)  ENABLED_STACKLOG=no 
     ;;
esac
fi


if test "$ENABLED_STACKLOG" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_STACK_LOG -finstrument-functions"
fi


ENABLED_WOLFSENTRY=no


@%:@ Check whether --with-wolfsentry was given.
if test ${with_wolfsentry+y}
then :
  withval=$with_wolfsentry; WOLFSENTRY_INSTALLDIR=$withval
else case e in @%:@(
  e) WOLFSENTRY_INSTALLDIR="" ;;
esac
fi



@%:@ Check whether --with-wolfsentry-lib was given.
if test ${with_wolfsentry_lib+y}
then :
  withval=$with_wolfsentry_lib; WOLFSENTRY_LIB=$withval
else case e in @%:@(
  e) WOLFSENTRY_LIB="" ;;
esac
fi



@%:@ Check whether --with-wolfsentry-include was given.
if test ${with_wolfsentry_include+y}
then :
  withval=$with_wolfsentry_include; WOLFSENTRY_INCLUDE=$withval
else case e in @%:@(
  e) WOLFSENTRY_INCLUDE="" ;;
esac
fi


if test -n "$WOLFSENTRY_INSTALLDIR" || test -n "$WOLFSENTRY_LIB" || test -n "$WOLFSENTRY_INCLUDE"
then
    ENABLED_WOLFSENTRY=yes
fi

@%:@ Check whether --enable-wolfsentry was given.
if test ${enable_wolfsentry+y}
then :
  enableval=$enable_wolfsentry;  ENABLED_WOLFSENTRY=$enableval 
fi


if test "$WOLFSENTRY_LIB" = "" && test -n "$WOLFSENTRY_INSTALLDIR"
then
    WOLFSENTRY_LIB="${WOLFSENTRY_INSTALLDIR}/lib"
fi

if test "$WOLFSENTRY_INCLUDE" = "" && test -n "$WOLFSENTRY_INSTALLDIR"
then
    WOLFSENTRY_INCLUDE="${WOLFSENTRY_INSTALLDIR}/include"
fi

if test -n "$WOLFSENTRY_LIB"
then
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $WOLFSENTRY_LIB" >&5
printf %s "checking for $WOLFSENTRY_LIB... " >&6; }
    if ! test -d "$WOLFSENTRY_LIB"
    then
        as_fn_error $? "wolfSentry lib dir $WOLFSENTRY_LIB not found." "$LINENO" 5
    fi
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
    WOLFSENTRY_LIB="-L$WOLFSENTRY_LIB"
fi

if test -n "$WOLFSENTRY_INCLUDE"
then
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $WOLFSENTRY_INCLUDE" >&5
printf %s "checking for $WOLFSENTRY_INCLUDE... " >&6; }
    if ! test -d "$WOLFSENTRY_INCLUDE"
    then
        as_fn_error $? "wolfSentry include dir $WOLFSENTRY_INCLUDE not found." "$LINENO" 5
    fi
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
    WOLFSENTRY_INCLUDE="-I$WOLFSENTRY_INCLUDE"
fi

if test "$ENABLED_WOLFSENTRY" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_WOLFSENTRY_HOOKS -DHAVE_EX_DATA -DHAVE_EX_DATA_CLEANUP_HOOKS"
    WOLFSENTRY_LIB="$WOLFSENTRY_LIB -lwolfsentry"
fi





if test "$ENABLED_QT" = "yes"
then
    # Requires opensslextra and opensslall
    if test "x$ENABLED_OPENSSLALL" = "xno" && test "x$ENABLED_OPENSSLCOEXIST" = "xno"
    then
        ENABLED_OPENSSLALL="yes"
        ENABLED_OPENSSLEXTRA="yes"
        AM_CFLAGS="$AM_CFLAGS -DOPENSSL_EXTRA -DOPENSSL_ALL -DHAVE_EX_DATA"
    fi
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_QT -DSESSION_CERTS -DOPENSSL_NO_SSL2"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_KEY_GEN -DHAVE_EX_DATA"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CUSTOM_CURVES -DHAVE_ECC_SECPR2 -DHAVE_ECC_SECPR3 -DHAVE_ECC_BRAINPOOL -DHAVE_ECC_KOBLITZ"
    if test "x$ENABLED_ALL" = "xno"; then
        # Don't enable old SSL/TLS for --enable-all, which is used by distro
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ALLOW_SSLV3 -DWOLFSSL_ALLOW_TLSV10"
    fi

    # Requires OCSP make sure on
    if test "x$ENABLED_OCSP" = "xno"
    then
        ENABLED_OCSP="yes"
    fi

    # Requires PSK make sure on
    if test "x$ENABLED_PSK" = "xno"
    then
        ENABLED_PSK="yes"
    fi

    # Requires RC4 make sure on (if not forcefully disabled with --disable-arc4)
    test "$enable_arc4" = "" && enable_arc4=yes

    if test "x$ENABLED_CERTEXT" = "xno"
    then
        ENABLED_CERTEXT="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CERT_EXT"
    fi

    if test "x$ENABLED_CERTGEN" = "xno"
    then
        ENABLED_CERTGEN="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CERT_GEN"
    fi

    # requires oldnames disabled
    enable_oldnames=no
fi

@%:@ Check whether --enable-qt-test was given.
if test ${enable_qt_test+y}
then :
  enableval=$enable_qt_test;  ENABLED_QT_TEST=$enableval 
else case e in @%:@(
  e)  ENABLED_QT_TEST=no 
     ;;
esac
fi


if test "$ENABLED_QT_TEST" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DOPENSSL_NO_SSL3 -DWOLFSSL_STATIC_RSA"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_STATIC_PSK"
fi

# RSA
@%:@ Check whether --enable-rsa was given.
if test ${enable_rsa+y}
then :
  enableval=$enable_rsa;  ENABLED_RSA=$enableval 
else case e in @%:@(
  e)  ENABLED_RSA=yes 
     ;;
esac
fi


if test "$ENABLED_RSA" = "no"
then
    AM_CFLAGS="$AM_CFLAGS -DNO_RSA"
else
    # turn off RSA if leanpsk or leantls on
    if test "$ENABLED_LEANPSK" = "yes" || test "$ENABLED_LEANTLS" = "yes"
    then
        AM_CFLAGS="$AM_CFLAGS -DNO_RSA"
        ENABLED_RSA=no
     else
        ENABLED_CERTS=yes
    fi
fi

@%:@ Check whether --enable-oaep was given.
if test ${enable_oaep+y}
then :
  enableval=$enable_oaep;  ENABLED_OAEP=$enableval 
else case e in @%:@(
  e)  ENABLED_OAEP=yes 
     ;;
esac
fi


if test "$ENABLED_OAEP" = "no"
then
    AM_CFLAGS="$AM_CFLAGS -DWC_NO_RSA_OAEP"
fi

@%:@ Check whether --enable-rsapub was given.
if test ${enable_rsapub+y}
then :
  enableval=$enable_rsapub;  ENABLED_RSAPUB=$enableval 
else case e in @%:@(
  e)  ENABLED_RSAPUB=no 
     ;;
esac
fi


if test "$ENABLED_RSAPUB" = "yes"
then
    if test "$ENABLED_RSA" = "no"
    then
        ENABLED_RSA="yes"
    fi
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_RSA_PUBLIC_ONLY"
fi

@%:@ Check whether --enable-rsavfy was given.
if test ${enable_rsavfy+y}
then :
  enableval=$enable_rsavfy;  ENABLED_RSAVFY=$enableval 
else case e in @%:@(
  e)  ENABLED_RSAVFY=no 
     ;;
esac
fi


if test "$ENABLED_RSAVFY" = "yes"
then
    if test "$ENABLED_RSA" = "no"
    then
        ENABLED_RSA="yes"
    fi
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_RSA_PUBLIC_ONLY -DWOLFSSL_RSA_VERIFY_ONLY"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_RSA_VERIFY_INLINE -DNO_SIG_WRAPPER"
    AM_CFLAGS="$AM_CFLAGS -DNO_CHECK_PRIVATE_KEY"
fi


# RSA-PSS
@%:@ Check whether --enable-rsapss was given.
if test ${enable_rsapss+y}
then :
  enableval=$enable_rsapss;  ENABLED_RSAPSS=$enableval 
else case e in @%:@(
  e)  ENABLED_RSAPSS=no 
     ;;
esac
fi


if test "$ENABLED_RSA" = "no"
then
    ENABLED_RSAPSS="no"
else
    if test "$ENABLED_TLS13" = "yes"
    then
        ENABLED_RSAPSS="yes"
    fi
fi
if test "$ENABLED_RSAPSS" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWC_RSA_PSS -DWOLFSSL_PSS_LONG_SALT"
fi


# DH
@%:@ Check whether --enable-dh was given.
if test ${enable_dh+y}
then :
  enableval=$enable_dh;  ENABLED_DH=$enableval 
else case e in @%:@(
  e)  ENABLED_DH=yes 
     ;;
esac
fi


if test "$ENABLED_OPENSSH" = "yes" && test "$ENABLED_DH" = "no"
then
    ENABLED_DH="yes"
fi

if test "$ENABLED_DH" = "no"
then
    AM_CFLAGS="$AM_CFLAGS -DNO_DH"
else
    # turn off DH if leanpsk or leantls on
    if test "$ENABLED_LEANPSK" = "yes" || test "$ENABLED_LEANTLS" = "yes"
    then
        AM_CFLAGS="$AM_CFLAGS -DNO_DH"
        ENABLED_DH=no
    fi
fi

if test "$ENABLED_DH" = "const"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DH_CONST"
fi

if test "$ENABLED_SNIFFER" = "yes" && test "$ENABLED_DH" != "no"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DH_EXTRA"
fi


# Anonymous
@%:@ Check whether --enable-anon was given.
if test ${enable_anon+y}
then :
  enableval=$enable_anon;  ENABLED_ANON=$enableval 
else case e in @%:@(
  e)  ENABLED_ANON=no 
     ;;
esac
fi


if test "x$ENABLED_WPAS" = "xyes"    || test "x$ENABLED_NGINX" = "xyes" || \
   test "x$ENABLED_HAPROXY" = "xyes" || test "$ENABLED_RSYSLOG" = "yes"
then
    ENABLED_ANON=yes
fi
if test "x$ENABLED_ANON" = "xyes"
then
    if test "$ENABLED_DH" = "no"
    then
        as_fn_error $? "Anonymous suite requires DH." "$LINENO" 5
    fi
    AM_CFLAGS="$AM_CFLAGS -DHAVE_ANON"
fi


# ASN
# turn off asn, which means no certs, no rsa, no dsa, no ecc,
# and no big int (unless dh is on)
@%:@ Check whether --enable-asn was given.
if test ${enable_asn+y}
then :
  enableval=$enable_asn;  ENABLED_ASN=$enableval 
else case e in @%:@(
  e)  ENABLED_ASN=yes 
     ;;
esac
fi


if test "$ENABLED_ASN" = "no"
then
    AM_CFLAGS="$AM_CFLAGS -DNO_ASN -DNO_ASN_CRYPT"
    enable_pwdbased=no
else
    if test "$ENABLED_ASN" = "template"; then
        ENABLED_ASN="yes"
    fi
    if test "$ENABLED_ASN" = "yes"; then
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ASN_TEMPLATE"
    else
        if test "$ENABLED_ASN" != "original"; then
            as_fn_error $? "Invalid asn option. Valid are: template or original. Seen: $ENABLED_ASN." "$LINENO" 5
        fi
    fi

    # turn off ASN if leanpsk on
    if test "$ENABLED_LEANPSK" = "yes"
    then
        AM_CFLAGS="$AM_CFLAGS -DNO_ASN -DNO_BIG_INT"
        ENABLED_ASN=no
    else
        if test "$ENABLED_ASN" = "nocrypt"
        then
            AM_CFLAGS="$AM_CFLAGS -DNO_ASN_CRYPT"
            enable_pwdbased=no
        fi
    fi
fi

if test "$ENABLED_RSA" = "yes" && test "$ENABLED_RSAVFY" = "no" && \
   test "$ENABLED_ASN" = "no" && test "$ENABLED_LOWRESOURCE" = "no"
then
    as_fn_error $? "please disable rsa if disabling asn." "$LINENO" 5
fi

if test "$ENABLED_DSA" = "yes" && test "$ENABLED_ASN" = "no"
then
    as_fn_error $? "please disable dsa if disabling asn." "$LINENO" 5
fi

if test "x$ENABLED_ECC" != "xno" && test "x$ENABLED_ASN" = "xno"
then
    as_fn_error $? "please disable ecc if disabling asn." "$LINENO" 5
fi

# No Big Int (ASN, DSA, RSA, DH, ECC and compatibility layer need bigint)
if test "$ENABLED_ASN" = "no" && test "$ENABLED_DSA" = "no" && \
   test "$ENABLED_DH" = "no" && test "$ENABLED_ECC" = "no" && \
   test "$ENABLED_RSA" = "no" && test "$ENABLED_OPENSSLEXTRA" = "no" && \
   test "$ENABLED_OPENSSLALL" = "yes"
then
    ENABLED_SP_MATH_ALL="no"
    ENABLED_FASTMATH="no"
    ENABLED_HEAPMATH="no"
    ENABLED_BIGNUM="no"
else
    ENABLED_BIGNUM="yes"
fi

case $host_os in
*linux* | *darwin* | *freebsd*)
    DEF_ASN_PRINT="yes"
    ;;
*)
    DEF_ASN_PRINT="no"
    ;;
esac

@%:@ Check whether --enable-asn-print was given.
if test ${enable_asn_print+y}
then :
  enableval=$enable_asn_print;  ENABLED_ASN_PRINT=$enableval 
else case e in @%:@(
  e)  ENABLED_ASN_PRINT=$DEF_ASN_PRINT 
     ;;
esac
fi


if test "$ENABLED_ASN_PRINT" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ASN_PRINT"
fi


# AES
@%:@ Check whether --enable-aes was given.
if test ${enable_aes+y}
then :
  enableval=$enable_aes;  ENABLED_AES=$enableval 
else case e in @%:@(
  e)  ENABLED_AES=yes 
     ;;
esac
fi


if test "$ENABLED_AES" = "no"
then
    AM_CFLAGS="$AM_CFLAGS -DNO_AES"
    if test "$ENABLED_FORTRESS" = "yes"
    then
        as_fn_error $? "fortress requires aes" "$LINENO" 5
    fi
    if test "$ENABLED_ECC_ENCRYPT" = "yes"
    then
        as_fn_error $? "cannot enable eccencrypt and hkdf without aes." "$LINENO" 5
    fi
    if test "$ENABLED_AESGCM" != "no"
    then
        as_fn_error $? "AESGCM requires AES." "$LINENO" 5
    fi
    if test "$ENABLED_AESCCM" = "yes"
    then
        as_fn_error $? "AESCCM requires AES." "$LINENO" 5
    fi
    if test "$ENABLED_AESCTR" = "yes"
    then
        as_fn_error $? "AESCTR requires AES." "$LINENO" 5
    fi
else
    # turn off AES if leanpsk on
    if test "$ENABLED_LEANPSK" = "yes"
    then
        AM_CFLAGS="$AM_CFLAGS -DNO_AES"
        ENABLED_AES=no
    fi
fi

# DTLSv1.3
@%:@ Check whether --enable-dtls13 was given.
if test ${enable_dtls13+y}
then :
  enableval=$enable_dtls13;  ENABLED_DTLS13=$enableval 
else case e in @%:@(
  e)  ENABLED_DTLS13=no 
     ;;
esac
fi

if test "x$ENABLED_DTLS13" = "xyes"
then
        if test "x$ENABLED_DTLS" != "xyes" || test "x$ENABLED_TLS13" != "xyes"
        then
                as_fn_error $? "You need to enable both DTLS and TLSv1.3 to use DTLSv1.3" "$LINENO" 5
        fi
        if test "x$ENABLED_SEND_HRR_COOKIE" = "xundefined"
        then
                { printf "%s\n" "$as_me:${as_lineno-$LINENO}: DTLSv1.3 is enabled, enabling HRR cookie" >&5
printf "%s\n" "$as_me: DTLSv1.3 is enabled, enabling HRR cookie" >&6;}
                AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SEND_HRR_COOKIE"
                ENABLED_SEND_HRR_COOKIE="yes"
        fi
  AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DTLS13 -DWOLFSSL_W64_WRAPPER"
  if test "x$ENABLED_AES" = "xyes"
  then
      AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_AES_DIRECT"
  fi
fi

# DTLS CID support
@%:@ Check whether --enable-dtlscid was given.
if test ${enable_dtlscid+y}
then :
  enableval=$enable_dtlscid;  ENABLED_DTLS_CID=$enableval 
else case e in @%:@(
  e)  ENABLED_DTLS_CID=no 
     ;;
esac
fi

if test "x$ENABLED_DTLS_CID" = "xyes"
then
        if test "x$ENABLED_DTLS13" != "xyes"
        then
                as_fn_error $? "You need to enable DTLSv1.3 to use DTLS ConnectionID" "$LINENO" 5
        fi
  AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DTLS_CID"
fi

# DTLS 1.3 Fragment Second ClientHello
@%:@ Check whether --enable-dtls-frag-ch was given.
if test ${enable_dtls_frag_ch+y}
then :
  enableval=$enable_dtls_frag_ch;  ENABLED_DTLS_CH_FRAG=$enableval 
else case e in @%:@(
  e)  ENABLED_DTLS_CH_FRAG=no 
     ;;
esac
fi

if test "x$ENABLED_DTLS_CH_FRAG" = "xyes"
then
  if test "x$ENABLED_DTLS13" != "xyes"
  then
    as_fn_error $? "You need to enable DTLSv1.3 to use DTLS ClientHello fragmenting" "$LINENO" 5
  fi
  AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DTLS_CH_FRAG"
fi

# CODING
@%:@ Check whether --enable-coding was given.
if test ${enable_coding+y}
then :
  enableval=$enable_coding;  ENABLED_CODING=$enableval 
else case e in @%:@(
  e)  ENABLED_CODING=yes 
     ;;
esac
fi


if test "$ENABLED_CODING" = "no"
then
    AM_CFLAGS="$AM_CFLAGS -DNO_CODING"
else
    # turn off CODING if leanpsk on
    if test "$ENABLED_LEANPSK" = "yes"
    then
        AM_CFLAGS="$AM_CFLAGS -DNO_CODING"
        ENABLED_CODING=no
    fi
fi


# Base64 Encode
BASE64ENCODE_DEFAULT=no
if test "$host_cpu" = "x86_64" || test "$host_cpu" = "amd64"
then
BASE64ENCODE_DEFAULT=yes
fi
@%:@ Check whether --enable-base64encode was given.
if test ${enable_base64encode+y}
then :
  enableval=$enable_base64encode;  ENABLED_BASE64ENCODE=$enableval 
else case e in @%:@(
  e)  ENABLED_BASE64ENCODE=$BASE64ENCODE_DEFAULT 
     ;;
esac
fi

if test "$ENABLED_BASE64ENCODE" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_BASE64_ENCODE"
fi


# Base16
@%:@ Check whether --enable-base16 was given.
if test ${enable_base16+y}
then :
  enableval=$enable_base16;  ENABLED_BASE16=$enableval 
else case e in @%:@(
  e)  ENABLED_BASE16=no 
     ;;
esac
fi


if test "$ENABLED_CAAM" = "qnx"
then
    ENABLED_BASE16=yes
fi

if test "$ENABLED_BASE16" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_BASE16"
fi


# MD4
@%:@ Check whether --enable-md4 was given.
if test ${enable_md4+y}
then :
  enableval=$enable_md4;  ENABLED_MD4=$enableval 
else case e in @%:@(
  e)  ENABLED_MD4=no 
     ;;
esac
fi



# DES3
@%:@ Check whether --enable-des3 was given.
if test ${enable_des3+y}
then :
  enableval=$enable_des3;  ENABLED_DES3=$enableval 
else case e in @%:@(
  e)  ENABLED_DES3=no 
     ;;
esac
fi


# Enable 3DES with OpenSSH and FIPS 140-2 but not 140-3
if (test "$ENABLED_OPENSSH" = "yes" && \
        (test "x$ENABLED_FIPS" = "xno" || test "$HAVE_FIPS_VERSION" -le 2)) || \
   test "$ENABLED_QT" = "yes" || test "$ENABLED_OPENVPN" = "yes" || \
   test "x$ENABLED_WPAS" != "xno"  || test "$ENABLED_NETSNMP" = "yes" || \
   test "$ENABLED_LIBSSH2" = "yes" || test "$ENABLED_KRB" = "yes" || \
   test "$ENABLED_WOLFENGINE" = "yes" || test "$ENABLED_STRONGSWAN" = "yes"
then
    ENABLED_DES3="yes"
fi

# ARC4
if (test "$ENABLED_OPENSSH" = "yes" && test "x$ENABLED_FIPS" = "xno") || \
   test "$ENABLED_WPAS" = "yes" || test "$ENABLED_KRB" = "yes"
then
    # Requires RC4 make sure on (if not forcefully disabled with --disable-arc4)
    test "$enable_arc4" = "" && enable_arc4=yes
fi

@%:@ Check whether --enable-arc4 was given.
if test ${enable_arc4+y}
then :
  enableval=$enable_arc4;  ENABLED_ARC4=$enableval 
else case e in @%:@(
  e)  ENABLED_ARC4=no 
     ;;
esac
fi


# MD5
@%:@ Check whether --enable-md5 was given.
if test ${enable_md5+y}
then :
  enableval=$enable_md5;  ENABLED_MD5=$enableval 
else case e in @%:@(
  e)  ENABLED_MD5=yes 
     ;;
esac
fi


# SHA
@%:@ Check whether --enable-sha was given.
if test ${enable_sha+y}
then :
  enableval=$enable_sha;  ENABLED_SHA=$enableval 
else case e in @%:@(
  e)  ENABLED_SHA=yes 
     ;;
esac
fi

if test "$ENABLED_SHA" = "no"
then
    AM_CFLAGS="$AM_CFLAGS -DNO_SHA -DNO_OLD_TLS"
else
    # turn off SHA if leanpsk or leantls on
    if test "$ENABLED_LEANPSK" = "yes" || test "$ENABLED_LEANTLS" = "yes"
    then
        AM_CFLAGS="$AM_CFLAGS -DNO_SHA -DNO_OLD_TLS"
        ENABLED_SHA=no
    fi
fi

if test "$ENABLED_SHA" = "no" && test "$ENABLED_DSA" != "no"
then
    as_fn_error $? "please disable DSA if disabling SHA-1." "$LINENO" 5
fi


# SipHash
@%:@ Check whether --enable-siphash was given.
if test ${enable_siphash+y}
then :
  enableval=$enable_siphash;  ENABLED_SIPHASH=$enableval 
else case e in @%:@(
  e)  ENABLED_SIPHASH=no 
     ;;
esac
fi


if test "x$ENABLED_SIPHASH" = "xyes"
then :
  AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SIPHASH"
fi


# CMAC
@%:@ Check whether --enable-cmac was given.
if test ${enable_cmac+y}
then :
  enableval=$enable_cmac;  ENABLED_CMAC=$enableval 
else case e in @%:@(
  e)  ENABLED_CMAC=no 
     ;;
esac
fi


if test "$ENABLED_WPAS" != "no" || test "$ENABLED_NTP" = "yes" || test "$ENABLED_AESSIV" = "yes" || test "$ENABLED_WOLFENGINE" = "yes" || test "$ENABLED_AESEAX" = "yes"
then
    ENABLED_CMAC=yes
fi

if test "x$ENABLED_CMAC" = "xyes"
then :
  AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CMAC -DWOLFSSL_AES_DIRECT"
fi


# AES-XTS
@%:@ Check whether --enable-aesxts was given.
if test ${enable_aesxts+y}
then :
  enableval=$enable_aesxts;  ENABLED_AESXTS=$enableval 
else case e in @%:@(
  e)  ENABLED_AESXTS=no 
     ;;
esac
fi


# legacy old option name, for compatibility:
@%:@ Check whether --enable-xts was given.
if test ${enable_xts+y}
then :
  enableval=$enable_xts;  ENABLED_AESXTS=$enableval 
    
fi


# Web Server Build
@%:@ Check whether --enable-webserver was given.
if test ${enable_webserver+y}
then :
  enableval=$enable_webserver;  ENABLED_WEBSERVER=$enableval 
else case e in @%:@(
  e)  ENABLED_WEBSERVER=no 
     ;;
esac
fi


if test "$ENABLED_WEBSERVER" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_WEBSERVER"
fi

# Web Client Build (HTTP Client)
@%:@ Check whether --enable-webclient was given.
if test ${enable_webclient+y}
then :
  enableval=$enable_webclient;  ENABLED_WEBCLIENT=$enableval 
else case e in @%:@(
  e)  ENABLED_WEBCLIENT=no 
     ;;
esac
fi


if test "$ENABLED_WEBCLIENT" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_HTTP_CLIENT"
fi

# RC2
@%:@ Check whether --enable-rc2 was given.
if test ${enable_rc2+y}
then :
  enableval=$enable_rc2;  ENABLED_RC2=$enableval 
else case e in @%:@(
  e)  ENABLED_RC2=no 
     ;;
esac
fi


if test "$ENABLED_RC2" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWC_RC2"
fi


# FIPS feature and macro setup
case $FIPS_VERSION in @%:@(
  v5*|ready|dev) :
     # FIPS 140-3

        AM_CFLAGS="$AM_CFLAGS \
            -DHAVE_FIPS \
            -DHAVE_FIPS_VERSION=$HAVE_FIPS_VERSION \
            -DHAVE_FIPS_VERSION_MINOR=$HAVE_FIPS_VERSION_MINOR \
            -DHAVE_ECC_CDH \
            -DWC_RSA_NO_PADDING \
            -DECC_USER_CURVES \
            -DHAVE_ECC384 \
            -DHAVE_ECC521 \
            -DWOLFSSL_VALIDATE_FFC_IMPORT \
            -DHAVE_FFDHE_Q \
            -DHAVE_FFDHE_3072 \
            -DHAVE_FFDHE_4096 \
            -DHAVE_FFDHE_6144 \
            -DHAVE_FFDHE_8192"

        # KCAPI API does not support custom k for sign, don't force enable ECC key sizes and do not use seed callback
        if test "x$ENABLED_KCAPI_ECC" = "xno"
then :
  AM_CFLAGS="$AM_CFLAGS \
                -DWC_RNG_SEED_CB \
                -DWOLFSSL_ECDSA_SET_K \
                -DWOLFSSL_VALIDATE_ECC_IMPORT \
                -DWOLFSSL_VALIDATE_ECC_KEYGEN \
                -DHAVE_ECC192 \
                -DHAVE_ECC224 \
                -DHAVE_ECC256"
fi

        DEFAULT_MAX_CLASSIC_ASYM_KEY_BITS=8192

        # force various features to FIPS 140-3 defaults, unless overridden with dev:

        if test "$ENABLED_KEYGEN" != "yes" && (test "$FIPS_VERSION" != "dev" || test "$enable_keygen" != "no")
then :
  ENABLED_KEYGEN="yes"; AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_KEY_GEN"
fi

        if test "$ENABLED_COMPKEY" = "yes" && (test "$FIPS_VERSION" != "dev" || test "$enable_compkey" != "yes")
then :
  ENABLED_COMPKEY="no"
fi

        if test "$ENABLED_SHA224" != "yes" && (test "$FIPS_VERSION" != "dev" || test "$enable_sha224" != "no")
then :
  ENABLED_SHA224="yes"; AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SHA224"
fi

        if test "$ENABLED_WOLFSSH" != "yes" && (test "$FIPS_VERSION" != "dev" || test "$enable_ssh" != "no")
then :
  enable_ssh="yes"
fi

        # Shake128 is a SHA-3 algorithm not in our FIPS algorithm list
        if test "$ENABLED_SHAKE128" != "no" && (test "$FIPS_VERSION" != "dev" || test "$enable_shake128" != "yes")
then :
  ENABLED_SHAKE128=no; AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_NO_SHAKE128"
fi

        # Shake256 is a SHA-3 algorithm not in our FIPS algorithm list
        if test "$ENABLED_SHAKE256" != "no" && (test "$FIPS_VERSION" != "dev" || test "$enable_shake256" != "yes")
then :
  ENABLED_SHAKE256=no; AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_NO_SHAKE256"
fi

        # SHA512-224 and SHA512-256 are SHA-2 algorithms not in our FIPS algorithm list
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_NOSHA512_224 -DWOLFSSL_NOSHA512_256"

        if test "$ENABLED_AESCCM" != "yes" && (test "$FIPS_VERSION" != "dev" || test "$enable_aesccm" != "no")
then :
  ENABLED_AESCCM="yes"; AM_CFLAGS="$AM_CFLAGS -DHAVE_AESCCM"
fi

        if test "$ENABLED_AESXTS" = "yes" && (test "$FIPS_VERSION" != "dev" || test "$enable_aesxts" != "yes")
then :
  ENABLED_AESXTS="no"
fi

        if test "$ENABLED_RSAPSS" != "yes" && (test "$FIPS_VERSION" != "dev" || test "$enable_rsapss" != "no")
then :
  ENABLED_RSAPSS="yes"; AM_CFLAGS="$AM_CFLAGS -DWC_RSA_PSS"
fi

        if test "$ENABLED_ECC" != "yes" && (test "$FIPS_VERSION" != "dev" || test "$enable_ecc" != "no")
then :
  ENABLED_ECC="yes"; AM_CFLAGS="$AM_CFLAGS -DHAVE_ECC -DTFM_ECC256"
             if test "$ENABLED_ECC_SHAMIR" = "yes" && (test "$FIPS_VERSION" != "dev" || test "$enable_eccshamir" != "no")
then :
  AM_CFLAGS="$AM_CFLAGS -DECC_SHAMIR"
fi
fi

        if test "$ENABLED_AESCTR" != "yes" && (test "$FIPS_VERSION" != "dev" || test "$enable_aesctr" != "no")
then :
  ENABLED_AESCTR="yes"; AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_AES_COUNTER"
fi

        if test "$ENABLED_CMAC" != "yes" && (test "$FIPS_VERSION" != "dev" || test "$enable_cmac" != "no")
then :
  ENABLED_CMAC="yes"; AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CMAC"
fi

        if test "$ENABLED_HKDF" != "yes" && (test "$FIPS_VERSION" != "dev" || test "$enable_hkdf" != "no")
then :
  ENABLED_HKDF="yes"; AM_CFLAGS="$AM_CFLAGS -DHAVE_HKDF"
fi

        if test "$ENABLED_INTELASM" = "yes"
then :
  AM_CFLAGS="$AM_CFLAGS -DFORCE_FAILURE_RDSEED"
fi

        if test "$ENABLED_SHA512" = "no" && (test "$FIPS_VERSION" != "dev" || test "$enable_sha512" != "no")
then :
  ENABLED_SHA512="yes"; AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SHA512 -DWOLFSSL_SHA384"
fi

        if test "$ENABLED_AESGCM" = "no" && (test "$FIPS_VERSION" != "dev" || test "$enable_aesgcm" != "no")
then :
  ENABLED_AESGCM="yes"; AM_CFLAGS="$AM_CFLAGS -DHAVE_AESGCM"; AM_CCASFLAGS="$AM_CCASFLAGS -DHAVE_AESGCM"
fi

        # AES-GCM streaming isn't part of the current FIPS suite.
        if test "$ENABLED_AESGCM_STREAM" = "yes" && (test "$FIPS_VERSION" != "dev" || test "$enable_aesgcm_stream" != "yes")
then :
  ENABLED_AESGCM_STREAM="no"
fi

        # Old TLS requires MD5 + HMAC, which is not allowed under FIPS 140-3
        if test "$ENABLED_OLD_TLS" != "no"
then :
  ENABLED_OLD_TLS="no"; AM_CFLAGS="$AM_CFLAGS -DNO_OLD_TLS"
fi

        if test $HAVE_FIPS_VERSION_MINOR -ge 2
then :
  if test "x$ENABLED_AESOFB" = "xno" && (test "$FIPS_VERSION" != "dev" || test "$enable_aesofb" != "no")
then :
  ENABLED_AESOFB="yes"; AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_AES_OFB"
fi
fi

        if (test "$ENABLED_AESCCM" = "yes" && test "$HAVE_AESCCM_PORT" != "yes") ||
               (test "$ENABLED_AESCTR" = "yes" && test "$HAVE_AESCTR_PORT" != "yes") ||
               (test "$ENABLED_AESGCM" = "yes" && test "$HAVE_AESGCM_PORT" != "yes") ||
               (test "$ENABLED_AESOFB" = "yes" && test "$HAVE_AESOFB_PORT" != "yes") ||
               (test "$ENABLED_AESXTS" = "yes" && test "$HAVE_AESXTS_PORT" != "yes")
then :
  AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_AES_DIRECT -DHAVE_AES_ECB"
fi
     ;; @%:@(
  v2) :
     # FIPS 140-2, Cert 3389
        AM_CFLAGS="$AM_CFLAGS \
            -DHAVE_FIPS \
            -DHAVE_FIPS_VERSION=$HAVE_FIPS_VERSION \
            -DHAVE_FIPS_VERSION_MINOR=$HAVE_FIPS_VERSION_MINOR \
            -DWOLFSSL_KEY_GEN \
            -DWOLFSSL_SHA224 \
            -DWOLFSSL_AES_DIRECT \
            -DHAVE_AES_ECB \
            -DHAVE_ECC_CDH \
            -DWC_RSA_NO_PADDING \
            -DWOLFSSL_VALIDATE_FFC_IMPORT \
            -DHAVE_FFDHE_Q \
            -DHAVE_PUBLIC_FFDHE"

        ENABLED_KEYGEN="yes"
        ENABLED_SHA224="yes"
        ENABLED_DES3="yes"
        # Shake256 is a SHA-3 algorithm not in our FIPS algorithm list
        ENABLED_SHAKE256=no
        # SHA512-224 and SHA512-256 are SHA-2 algorithms not in our FIPS algorithm list
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_NOSHA512_224 -DWOLFSSL_NOSHA512_256"
        if test "x$ENABLED_AESCCM" != "xyes"
then :
  ENABLED_AESCCM="yes"
               AM_CFLAGS="$AM_CFLAGS -DHAVE_AESCCM"
fi
        if test "x$ENABLED_RSAPSS" != "xyes"
then :
  ENABLED_RSAPSS="yes"
               AM_CFLAGS="$AM_CFLAGS -DWC_RSA_PSS"
fi
        if test "x$ENABLED_ECC" != "xyes"
then :
  ENABLED_ECC="yes"
               AM_CFLAGS="$AM_CFLAGS -DHAVE_ECC -DTFM_ECC256 -DWOLFSSL_VALIDATE_ECC_IMPORT"
               if test "x$ENABLED_ECC_SHAMIR" = "xyes"
then :
  AM_CFLAGS="$AM_CFLAGS -DECC_SHAMIR"
fi
else case e in @%:@(
  e) AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_VALIDATE_ECC_IMPORT" ;;
esac
fi
        if test "x$ENABLED_AESCTR" != "xyes"
then :
  ENABLED_AESCTR="yes"
               AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_AES_COUNTER"
fi
        if test "x$ENABLED_AESCTR" != "xyes"
then :
  ENABLED_AESCTR="yes"
               AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_AES_COUNTER"
fi
        if test "x$ENABLED_CMAC" != "xyes"
then :
  ENABLED_CMAC="yes"
               AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CMAC"
fi
        if test "x$ENABLED_HKDF" != "xyes"
then :
  ENABLED_HKDF="yes"
               AM_CFLAGS="$AM_CFLAGS -DHAVE_HKDF"
fi
        if test "x$ENABLED_INTELASM" = "xyes"
then :
  AM_CFLAGS="$AM_CFLAGS -DFORCE_FAILURE_RDSEED"
fi
        if test "x$ENABLED_SHA512" = "xno"
then :
  ENABLED_SHA512="yes"; AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SHA512 -DWOLFSSL_SHA384"
fi
        if test "x$ENABLED_AESGCM" = "xno"
then :
  ENABLED_AESGCM="yes"; AM_CFLAGS="$AM_CFLAGS -DHAVE_AESGCM"
fi
     ;; @%:@(
  "rand") :
    
        AM_CFLAGS="$AM_CFLAGS -DWOLFCRYPT_FIPS_RAND -DHAVE_FIPS -DHAVE_FIPS_VERSION=$HAVE_FIPS_VERSION -DHAVE_FIPS_VERSION_MINOR=$HAVE_FIPS_VERSION_MINOR"
     ;; @%:@(
  "v1") :
     # FIPS 140-2, Cert 2425
        AM_CFLAGS="$AM_CFLAGS -DHAVE_FIPS"
        if test "x$ENABLED_SHA512" = "xno"
then :
  ENABLED_SHA512="yes"; AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SHA512 -DWOLFSSL_SHA384"
fi
        if test "x$ENABLED_AESGCM" = "xno"
then :
  ENABLED_AESGCM="yes"; AM_CFLAGS="$AM_CFLAGS -DHAVE_AESGCM"
fi
        if test "x$ENABLED_DES3" = "xno"
then :
  ENABLED_DES3="yes"
fi
     ;; @%:@(
  *) :
     ;;
esac

if test "x$ENABLED_FIPS" = "xyes" && test "x$thread_ls_on" = "xno" && test "$ENABLE_LINUXKM" = "no"
then :
  as_fn_error $? "FIPS requires Thread Local Storage" "$LINENO" 5
fi

if (test "$ENABLED_NULL_CIPHER" = "yes" || test "$ENABLED_LEANPSK" = "yes") && test "$ENABLED_FIPS" != "no" && test "$FIPS_VERSION" != "dev"
then :
  as_fn_error $? "FIPS is incompatible with nullcipher" "$LINENO" 5
fi

# SELFTEST
@%:@ Check whether --enable-selftest was given.
if test ${enable_selftest+y}
then :
  enableval=$enable_selftest;  ENABLED_SELFTEST=$enableval 
else case e in @%:@(
  e)  ENABLED_SELFTEST="no" 
     ;;
esac
fi


case $ENABLED_SELFTEST in @%:@(
  "v2") :
    
        # selftest v2 (wolfCrypt 4.1.0)
        ENABLED_SELFTEST="yes"
        SELFTEST_VERSION="v2"
     ;; @%:@(
  "no") :
    SELFTEST_VERSION="none" ;; @%:@(
  *) :
    
        # selftest v1 (wolfCrypt 3.14.2)
        ENABLED_SELFTEST="yes"
        SELFTEST_VERSION="v1"
     ;;
esac

case $SELFTEST_VERSION in @%:@(
  "v2") :
    
        AM_CFLAGS="$AM_CFLAGS -DHAVE_SELFTEST -DHAVE_SELFTEST_VERSION=2 -DHAVE_PUBLIC_FFDHE"
     ;; @%:@(
  "v1") :
    
        AM_CFLAGS="$AM_CFLAGS -DHAVE_SELFTEST -DHAVE_PUBLIC_FFDHE"
     ;; @%:@(
  *) :
     ;;
esac


if test "x$ENABLED_AESXTS" = "xyes"
then :
  AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_AES_XTS -DWOLFSSL_AES_DIRECT"
fi
if test "x$ENABLED_AESXTS" = "xyes" && test "x$ENABLED_INTELASM" = "xyes"
then :
  AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_AES_XTS"
fi
if test "x$ENABLED_AESXTS" = "xyes" && test "x$ENABLED_AESNI" = "xyes"
then :
  AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_AES_XTS"
fi


# Set SHA-3 flags
if test "$ENABLED_SHA3" != "no" && test "$ENABLED_32BIT" = "no"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SHA3"
fi

# Set SHAKE128 flags
# FIPS does not support SHAKE 128
if test "x$ENABLED_FIPS" = "xyes"
then :
  ENABLED_SHAKE128="no"
fi

if test "$ENABLED_SHAKE128" != "no" && test "$ENABLED_32BIT" = "no"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SHAKE128"
    if test "$ENABLED_SHA3" = "no"
    then
        as_fn_error $? "Must have SHA-3 enabled: --enable-sha3" "$LINENO" 5
    fi
else
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_NO_SHAKE128"
fi

# Set SHAKE256 flags
# FIPS does not support SHAKE 256
if test "x$ENABLED_FIPS" = "xyes"
then :
  ENABLED_SHAKE256="no"
fi

if test "$ENABLED_SHAKE256" != "no" && test "$ENABLED_32BIT" = "no"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SHAKE256"
    if test "$ENABLED_SHA3" = "no"
    then
        as_fn_error $? "Must have SHA-3 enabled: --enable-sha3" "$LINENO" 5
    fi
else
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_NO_SHAKE256"
fi

# set POLY1305 default
POLY1305_DEFAULT=yes

if test "x$ENABLED_FIPS" = "xyes"
then
POLY1305_DEFAULT=no
fi

# POLY1305
@%:@ Check whether --enable-poly1305 was given.
if test ${enable_poly1305+y}
then :
  enableval=$enable_poly1305;  ENABLED_POLY1305=$enableval 
else case e in @%:@(
  e)  ENABLED_POLY1305=$POLY1305_DEFAULT
     ;;
esac
fi


# leanpsk and leantls don't need poly1305
if test "$ENABLED_LEANPSK" = "yes" || test "$ENABLED_LEANTLS" = "yes"
then
    ENABLED_POLY1305=no
fi

if test "$ENABLED_POLY1305" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_POLY1305"
fi


# set CHACHA default
CHACHA_DEFAULT=yes

if test "x$ENABLED_FIPS" = "xyes"
then
CHACHA_DEFAULT=no
fi

# CHACHA
@%:@ Check whether --enable-chacha was given.
if test ${enable_chacha+y}
then :
  enableval=$enable_chacha;  ENABLED_CHACHA=$enableval 
else case e in @%:@(
  e)  ENABLED_CHACHA=$CHACHA_DEFAULT
     ;;
esac
fi


# leanpsk and leantls don't need chacha
if test "$ENABLED_LEANPSK" = "yes" || test "$ENABLED_LEANTLS" = "yes"
then
    ENABLED_CHACHA=no
fi

if test "$ENABLED_CHACHA" = "noasm" || test "$ENABLED_ASM" = "no"
then
    AM_CFLAGS="$AM_CFLAGS -DNO_CHACHA_ASM"
fi

if test "$ENABLED_CHACHA" != "no"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_CHACHA"
fi


# XCHACHA
@%:@ Check whether --enable-xchacha was given.
if test ${enable_xchacha+y}
then :
  enableval=$enable_xchacha;  ENABLED_XCHACHA=$enableval 
else case e in @%:@(
  e)  ENABLED_XCHACHA=no
     ;;
esac
fi


if test "$ENABLED_XCHACHA" = "yes"
then
    if test "$ENABLED_CHACHA" = "no"
    then
        as_fn_error $? "XChaCha (--enable-xchacha) depends on ChaCha (--enable-chacha)" "$LINENO" 5
    fi
    AM_CFLAGS="$AM_CFLAGS -DHAVE_XCHACHA"
fi


# Hash DRBG
@%:@ Check whether --enable-hashdrbg was given.
if test ${enable_hashdrbg+y}
then :
  enableval=$enable_hashdrbg;  ENABLED_HASHDRBG=$enableval 
else case e in @%:@(
  e)  ENABLED_HASHDRBG=yes 
     ;;
esac
fi


if test "x$ENABLED_HASHDRBG" = "xyes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_HASHDRBG"
else
    # turn on Hash DRBG if FIPS is on (don't force on for KCAPI)
    if test "x$ENABLED_FIPS" = "xyes" && test "x$ENABLED_KCAPI" = "xno"
    then
        AM_CFLAGS="$AM_CFLAGS -DHAVE_HASHDRBG"
        ENABLED_HASHDRBG=yes
    else
        AM_CFLAGS="$AM_CFLAGS -DWC_NO_HASHDRBG"
    fi
fi


# MemUse Entropy
@%:@ Check whether --enable-entropy-memuse was given.
if test ${enable_entropy_memuse+y}
then :
  enableval=$enable_entropy_memuse;  ENABLED_ENTROPY_MEMUSE=$enableval 
else case e in @%:@(
  e)  ENABLED_ENTROPY_MEMUSE=no 
     ;;
esac
fi


if test "x$ENABLED_ENTROPY_MEMUSE" != "xno"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_ENTROPY_MEMUSE"
    enable_sha3=yes

    for v in `echo $ENABLED_ENTROPY_MEMUSE | tr "," " "`
    do
      case $v in
      yes)
        ;;
      thread)
        AM_CFLAGS="$AM_CFLAGS -DENTROPY_MEMUSE_THREAD"
        ;;
      nofallback)
        AM_CFLAGS="$AM_CFLAGS -DENTROPY_MEMUSE_FORCE_FAILURE"
        ;;
      *)
        as_fn_error $? "Invalid MemUse Entropy option. Valid are: thread, nofallback. Seen: $ENABLED_ENTROPY_MEMUSE." "$LINENO" 5
        break;;
      esac
    done
fi


# Filesystem Build
if test "$ENABLED_LINUXKM" = "yes"
then
    ENABLED_FILESYSTEM_DEFAULT=no
else
    ENABLED_FILESYSTEM_DEFAULT=yes
fi
@%:@ Check whether --enable-filesystem was given.
if test ${enable_filesystem+y}
then :
  enableval=$enable_filesystem;  ENABLED_FILESYSTEM=$enableval 
else case e in @%:@(
  e)  ENABLED_FILESYSTEM=$ENABLED_FILESYSTEM_DEFAULT 
     ;;
esac
fi


if test "$ENABLED_FILESYSTEM" = "no"
then
    AM_CFLAGS="$AM_CFLAGS -DNO_FILESYSTEM"
else
    # turn off filesystem if leanpsk on
    if test "$ENABLED_LEANPSK" = "yes" || test "$ENABLED_LINUXKM" = "yes"
    then
        AM_CFLAGS="$AM_CFLAGS -DNO_FILESYSTEM"
        ENABLED_FILESYSTEM=no
    fi
fi


# inline Build
@%:@ Check whether --enable-inline was given.
if test ${enable_inline+y}
then :
  enableval=$enable_inline;  ENABLED_INLINE=$enableval 
else case e in @%:@(
  e)  ENABLED_INLINE=yes 
     ;;
esac
fi


if test "$ENABLED_INLINE" = "no"
then
    AM_CFLAGS="$AM_CFLAGS -DNO_INLINE"
fi


# OCSP
if test "x$ENABLED_OPENSSLALL" = "xyes" || test "x$ENABLED_NGINX" = "xyes" || test "x$ENABLED_LIGHTY" = "xyes"
then
    test "$enable_ocsp" = "" && enable_ocsp=yes
fi

@%:@ Check whether --enable-ocsp was given.
if test ${enable_ocsp+y}
then :
  enableval=$enable_ocsp;  ENABLED_OCSP=$enableval 
else case e in @%:@(
  e)  ENABLED_OCSP=no 
     ;;
esac
fi


if test "$ENABLED_OCSP" = "yes"
then
    # check openssl command tool for testing ocsp
    # Extract the first word of "openssl", so it can be a program name with args.
set dummy openssl; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_HAVE_OPENSSL_CMD+y}
then :
  printf %s "(cached) " >&6
else case e in @%:@(
  e) if test -n "$HAVE_OPENSSL_CMD"; then
  ac_cv_prog_HAVE_OPENSSL_CMD="$HAVE_OPENSSL_CMD" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in @%:@(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_HAVE_OPENSSL_CMD="yes"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_prog_HAVE_OPENSSL_CMD" && ac_cv_prog_HAVE_OPENSSL_CMD="no"
fi ;;
esac
fi
HAVE_OPENSSL_CMD=$ac_cv_prog_HAVE_OPENSSL_CMD
if test -n "$HAVE_OPENSSL_CMD"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HAVE_OPENSSL_CMD" >&5
printf "%s\n" "$HAVE_OPENSSL_CMD" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi



    if test "$HAVE_OPENSSL_CMD" = "yes"
    then
        AM_CFLAGS="$AM_CFLAGS -DHAVE_OPENSSL_CMD"
    else
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: openssl command line tool not available for testing ocsp" >&5
printf "%s\n" "$as_me: WARNING: openssl command line tool not available for testing ocsp" >&2;}
    fi
fi


# Certificate Status Request : a.k.a. OCSP Stapling
@%:@ Check whether --enable-ocspstapling was given.
if test ${enable_ocspstapling+y}
then :
  enableval=$enable_ocspstapling;  ENABLED_CERTIFICATE_STATUS_REQUEST=$enableval 
else case e in @%:@(
  e)  ENABLED_CERTIFICATE_STATUS_REQUEST=no 
     ;;
esac
fi


if test "x$ENABLED_NGINX" = "xyes" || test "x$ENABLED_WPAS" = "xyes" || test "x$ENABLED_HAPROXY" = "xyes" || test "x$ENABLED_LIGHTY" = "xyes"
then
    ENABLED_CERTIFICATE_STATUS_REQUEST="yes"
fi

if test "x$ENABLED_CERTIFICATE_STATUS_REQUEST" = "xyes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_TLS_EXTENSIONS -DHAVE_CERTIFICATE_STATUS_REQUEST"

    # Requires OCSP make sure on
    if test "x$ENABLED_OCSP" = "xno"
    then
        ENABLED_OCSP="yes"
    fi
fi


# Certificate Status Request v2 : a.k.a. OCSP stapling v2
@%:@ Check whether --enable-ocspstapling2 was given.
if test ${enable_ocspstapling2+y}
then :
  enableval=$enable_ocspstapling2;  ENABLED_CERTIFICATE_STATUS_REQUEST_V2=$enableval 
else case e in @%:@(
  e)  ENABLED_CERTIFICATE_STATUS_REQUEST_V2=no 
     ;;
esac
fi


if test "x$ENABLED_NGINX" = "xyes" || test "x$ENABLED_WPAS" = "xyes" || test "x$ENABLED_HAPROXY" = "xyes" || test "x$ENABLED_LIGHTY" = "xyes"
then
    ENABLED_CERTIFICATE_STATUS_REQUEST_V2=yes
fi

if test "x$ENABLED_CERTIFICATE_STATUS_REQUEST_V2" = "xyes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_TLS_EXTENSIONS -DHAVE_CERTIFICATE_STATUS_REQUEST_V2"

    # Requires OCSP make sure on
    if test "x$ENABLED_OCSP" = "xno"
    then
        ENABLED_OCSP="yes"
    fi
fi


# CRL
@%:@ Check whether --enable-crl was given.
if test ${enable_crl+y}
then :
  enableval=$enable_crl;  ENABLED_CRL=$enableval 
else case e in @%:@(
  e)  ENABLED_CRL=no 
     ;;
esac
fi


if test "x$ENABLED_NGINX" = "xyes" || test "x$ENABLED_HAPROXY" = "xyes" || test "x$ENABLED_OPENVPN" = "xyes" || \
   test "x$ENABLED_WPAS" != "xno" || test "x$ENABLED_LIGHTY" = "xyes" || test "x$ENABLED_NETSNMP" = "xyes" || \
   test "x$ENABLED_KRB" = "xyes" || test "x$ENABLED_STRONGSWAN" = "xyes"
then
    ENABLED_CRL=yes
fi

if test "$ENABLED_CRL" != "no"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_CRL"
fi
if test "$ENABLED_CRL" = "io"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_CRL_IO"
fi


# CRL Monitor
@%:@ Check whether --enable-crl-monitor was given.
if test ${enable_crl_monitor+y}
then :
  enableval=$enable_crl_monitor;  ENABLED_CRL_MONITOR=$enableval 
else case e in @%:@(
  e)  ENABLED_CRL_MONITOR=no 
     ;;
esac
fi


if test "$ENABLED_CRL_MONITOR" = "yes"
then
    case $host_os in
    *linux* | *darwin* | *freebsd*)
        if test "x$ENABLED_SINGLETHREADED" = "xno"; then
            AM_CFLAGS="$AM_CFLAGS -DHAVE_CRL_MONITOR"
        else
            ENABLED_CRL_MONITOR="no"
            as_fn_error $? "crl monitor requires threading / pthread" "$LINENO" 5
        fi
        ;;
    *)
        if test "x$ENABLED_DISTRO" = "xyes" ; then
            ENABLED_CRL_MONITOR="no"
        else
            as_fn_error $? "crl monitor only allowed on linux, OS X, or freebsd" "$LINENO" 5
        fi
        break;;
    esac
fi

# Whitewood netRandom client library
ENABLED_WNR="no"
trywnrdir=""

@%:@ Check whether --with-wnr was given.
if test ${with_wnr+y}
then :
  withval=$with_wnr; 
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for Whitewood netRandom" >&5
printf %s "checking for Whitewood netRandom... " >&6; }
        LIBS="$LIBS -lwnr"

        cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <wnr.h>
int
main (void)
{
 wnr_setup(0, 0); 
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
   wnr_linked=yes 
else case e in @%:@(
  e)  wnr_linked=no  ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext

        if test "x$wnr_linked" = "xno" ; then
            if test "x$withval" != "xno" ; then
                trywnrdir=$withval
            fi
            if test "x$withval" = "xyes" ; then
                trywnrdir="/usr/local"
            fi

            CPPFLAGS="$AM_CPPFLAGS -DHAVE_WNR -I$trywnrdir/include"
            LDFLAGS="$AM_LDFLAGS $LDFLAGS -L$trywnrdir/lib"

            cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <wnr.h>
int
main (void)
{
 wnr_setup(0, 0); 
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
   wnr_linked=yes 
else case e in @%:@(
  e)  wnr_linked=no  ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext

            if test "x$wnr_linked" = "xno" ; then
                as_fn_error $? "Whitewood netRandom isn't found.
                If it's already installed, specify its path using --with-wnr=/dir/" "$LINENO" 5
            fi
            { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
            AM_CPPFLAGS="$CPPFLAGS"
            AM_LDFLAGS="$AM_LDFLAGS -L$trywnrdir/lib"
        else
            { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
        fi

        AM_CFLAGS="$AM_CFLAGS -DHAVE_WNR"
        ENABLED_WNR="yes"
    

fi



# SNI
# enable SNI automatically for x86_64/x86/aarch64/amd64
SNI_DEFAULT=no
if test "$host_cpu" = "x86_64" || test "$host_cpu" = "x86" || test "$host_cpu" = "aarch64" || test "$host_cpu" = "amd64"
then
    SNI_DEFAULT=yes
fi
@%:@ Check whether --enable-sni was given.
if test ${enable_sni+y}
then :
  enableval=$enable_sni;  ENABLED_SNI=$enableval 
else case e in @%:@(
  e)  ENABLED_SNI=$SNI_DEFAULT 
     ;;
esac
fi

if test "x$ENABLED_QT" = "xyes" || test "$ENABLED_QUIC" = "yes"
then
    ENABLED_SNI="yes"
fi

if test "x$ENABLED_SNI" = "xyes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_TLS_EXTENSIONS -DHAVE_SNI"
fi

# Maximum Fragment Length
@%:@ Check whether --enable-maxfragment was given.
if test ${enable_maxfragment+y}
then :
  enableval=$enable_maxfragment;  ENABLED_MAX_FRAGMENT=$enableval 
else case e in @%:@(
  e)  ENABLED_MAX_FRAGMENT=no 
     ;;
esac
fi


# ALPN
@%:@ Check whether --enable-alpn was given.
if test ${enable_alpn+y}
then :
  enableval=$enable_alpn;  ENABLED_ALPN=$enableval 
else case e in @%:@(
  e)  ENABLED_ALPN=no 
     ;;
esac
fi


if test "$ENABLED_BIND" = "yes"
then
    ENABLED_ALPN=yes
fi

if test "$ENABLED_QUIC" = "yes"
then
    ENABLED_ALPN=yes
fi

if test "x$ENABLED_ALPN" = "xyes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_TLS_EXTENSIONS -DHAVE_ALPN"
fi

# Maximum Fragment Length
if test "x$ENABLED_MAX_FRAGMENT" = "xyes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_TLS_EXTENSIONS -DHAVE_MAX_FRAGMENT"
fi

# Trusted CA Indication Extension
@%:@ Check whether --enable-trustedca was given.
if test ${enable_trustedca+y}
then :
  enableval=$enable_trustedca;  ENABLED_TRUSTED_CA=$enableval 
else case e in @%:@(
  e)  ENABLED_TRUSTED_CA=no  ;;
esac
fi


if test "x$ENABLED_TRUSTED_CA" = "xyes"
then :
  AM_CFLAGS="$AM_CFLAGS -DHAVE_TLS_EXTENSIONS -DHAVE_TRUSTED_CA"
fi

# Truncated HMAC
@%:@ Check whether --enable-truncatedhmac was given.
if test ${enable_truncatedhmac+y}
then :
  enableval=$enable_truncatedhmac;  ENABLED_TRUNCATED_HMAC=$enableval 
else case e in @%:@(
  e)  ENABLED_TRUNCATED_HMAC=no 
     ;;
esac
fi


if test "x$ENABLED_TRUNCATED_HMAC" = "xyes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_TLS_EXTENSIONS -DHAVE_TRUNCATED_HMAC"
fi

# Renegotiation Indication - (FAKE Secure Renegotiation)
# Client will send TLS_EMPTY_RENEGOTIATION_INFO_SCSV, not supported
# with enabling secure renegotiation
@%:@ Check whether --enable-renegotiation-indication was given.
if test ${enable_renegotiation_indication+y}
then :
  enableval=$enable_renegotiation_indication;  ENABLED_RENEGOTIATION_INDICATION=$enableval 
else case e in @%:@(
  e)  ENABLED_RENEGOTIATION_INDICATION=no 
     ;;
esac
fi


if test "x$ENABLED_RENEGOTIATION_INDICATION" = "xyes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_RENEGOTIATION_INDICATION"
fi

# Secure Renegotiation
@%:@ Check whether --enable-secure-renegotiation was given.
if test ${enable_secure_renegotiation+y}
then :
  enableval=$enable_secure_renegotiation;  ENABLED_SECURE_RENEGOTIATION=$enableval 
else case e in @%:@(
  e)  ENABLED_SECURE_RENEGOTIATION=no 
     ;;
esac
fi


if test "x$ENABLED_HAPROXY" = "xyes"
then
    ENABLED_SECURE_RENEGOTIATION=yes
fi

if test "x$ENABLED_SECURE_RENEGOTIATION" = "xyes"
then
    if test "x$ENABLED_RENEGOTIATION_INDICATION" = "xyes"
    then
        as_fn_error $? "cannot enable renegotiation-indication and secure-renegotiation." "$LINENO" 5
    fi
    AM_CFLAGS="$AM_CFLAGS -DHAVE_TLS_EXTENSIONS -DHAVE_SECURE_RENEGOTIATION -DHAVE_SERVER_RENEGOTIATION_INFO"
fi

# Secure Renegotiation Info
@%:@ Check whether --enable-secure-renegotiation-info was given.
if test ${enable_secure_renegotiation_info+y}
then :
  enableval=$enable_secure_renegotiation_info;  ENABLED_SECURE_RENEGOTIATION_INFO=$enableval 
else case e in @%:@(
  e)  ENABLED_SECURE_RENEGOTIATION_INFO=yes 
     ;;
esac
fi



# Fallback SCSV
@%:@ Check whether --enable-fallback-scsv was given.
if test ${enable_fallback_scsv+y}
then :
  enableval=$enable_fallback_scsv;  ENABLED_FALLBACK_SCSV=$enableval 
else case e in @%:@(
  e)  ENABLED_FALLBACK_SCSV=no 
     ;;
esac
fi


if test "x$ENABLED_FALLBACK_SCSV" = "xyes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_FALLBACK_SCSV"
fi

# Exporting Keying Material
@%:@ Check whether --enable-keying-material was given.
if test ${enable_keying_material+y}
then :
  enableval=$enable_keying_material;  ENABLED_KEYING_MATERIAL=$enableval 
else case e in @%:@(
  e)  ENABLED_KEYING_MATERIAL=no 
     ;;
esac
fi


if test "$ENABLED_CHRONY" = "yes" || test "$ENABLED_SRTP" = "yes"
then
    ENABLED_KEYING_MATERIAL=yes
fi
if test "x$ENABLED_KEYING_MATERIAL" = "xyes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_KEYING_MATERIAL"
fi

# Supported Elliptic Curves Extensions
@%:@ Check whether --enable-supportedcurves was given.
if test ${enable_supportedcurves+y}
then :
  enableval=$enable_supportedcurves; ENABLED_SUPPORTED_CURVES=$enableval
else case e in @%:@(
  e) ENABLED_SUPPORTED_CURVES=yes ;;
esac
fi


if test "x$ENABLED_SUPPORTED_CURVES" = "xyes"
then
    if test "x$ENABLED_ECC" = "xno" && test "x$ENABLED_CURVE25519" = "xno" && test "x$ENABLED_CURVE448" = "xno"
then :
  ENABLED_SUPPORTED_CURVES=no
else case e in @%:@(
  e) AM_CFLAGS="$AM_CFLAGS -DHAVE_TLS_EXTENSIONS -DHAVE_SUPPORTED_CURVES" ;;
esac
fi
fi

# Diffie-Hellman
if test "$ENABLED_DH" != "no"
then
    if test "$ENABLED_TLS13" = "yes" || test "$ENABLED_SUPPORTED_CURVES" = "yes"
    then
        AM_CFLAGS="$AM_CFLAGS -DHAVE_FFDHE_2048"
    fi
fi

# FFDHE parameters only
@%:@ Check whether --enable-ffdhe-only was given.
if test ${enable_ffdhe_only+y}
then :
  enableval=$enable_ffdhe_only;  ENABLED_FFDHE_ONLY=$enableval 
else case e in @%:@(
  e)  ENABLED_FFDHE_ONLY=no 
     ;;
esac
fi


if test "x$ENABLED_FFDHE_ONLY" = "xyes"
then
    if test "$ENABLED_DH" = "no"
    then
        as_fn_error $? "FFDHE only support requires DH support" "$LINENO" 5
    fi
    if test "$ENABLED_SUPPORTED_CURVES" = "no"
    then
        as_fn_error $? "FFDHE only support requires Supported Curves extension" "$LINENO" 5
    fi
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_REQUIRE_FFDHE"
fi

# TLS 1.3 Requires either ECC or (RSA/DH), or CURVE25519/ED25519 or CURVE448/ED448 or libOQS
if test "x$ENABLED_PSK" = "xno" && test "x$ENABLED_ECC" = "xno" && \
    (test "x$ENABLED_RSA" = "xno" || test "x$ENABLED_DH" = "xno") && \
    (test "x$ENABLED_CURVE25519" = "xno" || test "x$ENABLED_ED25519" = "xno") && \
    (test "x$ENABLED_CURVE448" = "xno" || test "x$ENABLED_ED448" = "xno") && \
    test "x$ENABLED_LIBOQS" = "xno"
then
    # disable TLS 1.3
    ENABLED_TLS13=no
fi
if test "$ENABLED_TLS13" = "yes" && (test "x$ENABLED_ECC" = "xyes" || \
    test "$ENABLED_DH" != "no")
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_SUPPORTED_CURVES"
fi
if test "$ENABLED_TLS13" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_TLS13 -DHAVE_TLS_EXTENSIONS"
fi


# Session Ticket Extension
@%:@ Check whether --enable-session-ticket was given.
if test ${enable_session_ticket+y}
then :
  enableval=$enable_session_ticket;  ENABLED_SESSION_TICKET=$enableval 
else case e in @%:@(
  e)  ENABLED_SESSION_TICKET=no 
     ;;
esac
fi


if test "x$ENABLED_NGINX" = "xyes" || test "$ENABLED_WPAS" = "yes" || test "x$ENABLED_HAPROXY" = "xyes" || test "x$ENABLED_LIGHTY" = "xyes"
then
    ENABLED_SESSION_TICKET=yes
fi

if test "x$ENABLED_SESSION_TICKET" = "xyes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_TLS_EXTENSIONS -DHAVE_SESSION_TICKET"
fi

@%:@ Check whether --enable-ticket-nonce-malloc was given.
if test ${enable_ticket_nonce_malloc+y}
then :
  enableval=$enable_ticket_nonce_malloc;  ENABLED_TICKET_NONCE_MALLOC=$enableval 
else case e in @%:@(
  e)  ENABLED_TICKET_NONCE_MALLOC=no 
     ;;
esac
fi


if test "$ENABLED_TICKET_NONCE_MALLOC" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_TICKET_NONCE_MALLOC"
fi

# Extended Master Secret Extension
@%:@ Check whether --enable-extended-master was given.
if test ${enable_extended_master+y}
then :
  enableval=$enable_extended_master;  ENABLED_EXTENDED_MASTER=$enableval 
else case e in @%:@(
  e)  ENABLED_EXTENDED_MASTER=yes 
     ;;
esac
fi


if test "$ENABLED_CRYPTONLY" = "yes"
then
    ENABLED_EXTENDED_MASTER=no
fi
if test "x$ENABLED_EXTENDED_MASTER" = "xyes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_EXTENDED_MASTER"
fi

# TLS Extensions
@%:@ Check whether --enable-tlsx was given.
if test ${enable_tlsx+y}
then :
  enableval=$enable_tlsx;  ENABLED_TLSX=$enableval 
else case e in @%:@(
  e)  ENABLED_TLSX=no 
     ;;
esac
fi


if test "x$ENABLED_NGINX" = "xyes" || test "x$ENABLED_HAPROXY" = "xyes" || test "x$ENABLED_SIGNAL" = "xyes" || test "x$ENABLED_LIGHTY" = "xyes" || test "$ENABLED_CHRONY" = "yes"
then
    ENABLED_TLSX=yes
fi

if test "x$ENABLED_TLSX" = "xyes"
then
    ENABLED_SNI=yes
    ENABLED_MAX_FRAGMENT=yes
    ENABLED_TRUNCATED_HMAC=yes
    ENABLED_ALPN=yes
    ENABLED_TRUSTED_CA=yes
    ENABLED_ENCRYPT_THEN_MAC=yes
    AM_CFLAGS="$AM_CFLAGS -DHAVE_TLS_EXTENSIONS -DHAVE_SNI -DHAVE_MAX_FRAGMENT -DHAVE_TRUNCATED_HMAC -DHAVE_ALPN -DHAVE_TRUSTED_CA"
    # Check the ECC supported curves prereq
    if test "x$ENABLED_ECC" != "xno" || test "x$ENABLED_CURVE25519" = "xyes" || test "x$ENABLED_CURVE448" = "xyes" || test "x$ENABLED_TLS13" = "xyes"
then :
  ENABLED_SUPPORTED_CURVES=yes
           AM_CFLAGS="$AM_CFLAGS -DHAVE_SUPPORTED_CURVES"
fi
fi

# Early Data handshake in TLS v1.3 and above
@%:@ Check whether --enable-earlydata was given.
if test ${enable_earlydata+y}
then :
  enableval=$enable_earlydata;  ENABLED_TLS13_EARLY_DATA=$enableval 
else case e in @%:@(
  e)  ENABLED_TLS13_EARLY_DATA=no 
     ;;
esac
fi


if test "$ENABLED_TLS13_EARLY_DATA" = "group"
then
    ENABLED_TLS13_EARLY_DATA="yes"
    # Group EarlyData with ClientHello
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_EARLY_DATA_GROUP"
fi
if test "$ENABLED_TLS13_EARLY_DATA" = "yes"
then
    if test "x$ENABLED_TLS13" = "xno" && test "x$ENABLED_ALL" = "xno"
    then
        as_fn_error $? "cannot enable earlydata without enabling tls13." "$LINENO" 5
    fi
    if test "x$ENABLED_SESSION_TICKET" = "xno" && test "x$ENABLED_PSK" = "xno"
    then
        as_fn_error $? "cannot enable earlydata without enabling session tickets and/or PSK." "$LINENO" 5
    fi
    if test "x$ENABLED_TLS13" = "xyes"
    then
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_EARLY_DATA"
    fi
fi

if test "$ENABLED_TLSV12" = "no" && test "$ENABLED_TLS13" = "yes" && test "x$ENABLED_SESSION_TICKET" = "xno"
then
    AM_CFLAGS="$AM_CFLAGS -DNO_SESSION_CACHE"
fi

# PKCS7
@%:@ Check whether --enable-pkcs7 was given.
if test ${enable_pkcs7+y}
then :
  enableval=$enable_pkcs7;  ENABLED_PKCS7=$enableval 
else case e in @%:@(
  e)  ENABLED_PKCS7=no 
     ;;
esac
fi


if test "x$ENABLED_WPAS_DPP" = "xyes"
then
    ENABLED_PKCS7=yes
fi

# wolfSSH Options
@%:@ Check whether --enable-wolfssh was given.
if test ${enable_wolfssh+y}
then :
  enableval=$enable_wolfssh;  ENABLED_WOLFSSH=$enableval 
else case e in @%:@(
  e)  ENABLED_WOLFSSH=no 
     ;;
esac
fi


@%:@ Check whether --enable-ssh was given.
if test ${enable_ssh+y}
then :
  enableval=$enable_ssh;  ENABLED_SSH=$enableval 
else case e in @%:@(
  e)  ENABLED_SSH=no 
     ;;
esac
fi


if test "x$ENABLED_SSH" = "xyes"
then
    ENABLED_WOLFSSH="yes"
fi

# wolfTPM Options
@%:@ Check whether --enable-wolftpm was given.
if test ${enable_wolftpm+y}
then :
  enableval=$enable_wolftpm;  ENABLED_WOLFTPM=$enableval 
else case e in @%:@(
  e)  ENABLED_WOLFTPM=no 
     ;;
esac
fi


# wolfCLU Options
@%:@ Check whether --enable-wolfclu was given.
if test ${enable_wolfclu+y}
then :
  enableval=$enable_wolfclu;  ENABLED_WOLFCLU=$enableval 
else case e in @%:@(
  e)  ENABLED_WOLFCLU=no 
     ;;
esac
fi



if test "x$ENABLED_WOLFTPM" = "xyes"
then
    # Requires cryptocb (set in its enable section)
    # Requires certgen, certreq, certext
    if test "x$ENABLED_CERTGEN" = "xno"
    then
        ENABLED_CERTGEN="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CERT_GEN"
    fi
    if test "x$ENABLED_CERTREQ" = "xno"
    then
        ENABLED_CERTREQ="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CERT_REQ"
    fi
    if test "x$ENABLED_CERTEXT" = "xno"
    then
        ENABLED_CERTEXT="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CERT_EXT"
    fi

    # Requires PKCS7
    if test "x$ENABLED_PKCS7" = "xno"
    then
        ENABLED_PKCS7="yes"
    fi

    # Requires aescfb
    if test "x$ENABLED_AESCFB" = "xno"
    then
        ENABLED_AESCFB="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_AES_CFB"
    fi

    # Requires public mp_
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_PUBLIC_MP"
fi

if test "x$ENABLED_SMIME" = "xyes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_SMIME"
    # Requires PKCS7
    if test "x$ENABLED_PKCS7" = "xno"
    then
        ENABLED_PKCS7="yes"
    fi
fi

# Simple Certificate Enrollment Protocol (SCEP)
@%:@ Check whether --enable-scep was given.
if test ${enable_scep+y}
then :
  enableval=$enable_scep;  ENABLED_WOLFSCEP=$enableval 
else case e in @%:@(
  e)  ENABLED_WOLFSCEP=no 
     ;;
esac
fi



# Secure Remote Password
@%:@ Check whether --enable-srp was given.
if test ${enable_srp+y}
then :
  enableval=$enable_srp;  ENABLED_SRP=$enableval 
else case e in @%:@(
  e)  ENABLED_SRP=no 
     ;;
esac
fi


if test "x$ENABLED_SRP" = "xyes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFCRYPT_HAVE_SRP"
fi


# Indefinite length encoded BER message support
@%:@ Check whether --enable-indef was given.
if test ${enable_indef+y}
then :
  enableval=$enable_indef;  ENABLED_BER_INDEF=$enableval 
else case e in @%:@(
  e)  ENABLED_BER_INDEF=no 
     ;;
esac
fi


if test "x$ENABLED_BER_INDEF" = "xyes"
then
    AM_CFLAGS="$AM_CFLAGS -DASN_BER_TO_DER"
fi

# Alternate certification chains, as opposed to requiring full chain validation.
# Certificate validation behavior is relaxed, similar to openssl and
# browsers. Only the peer certificate must validate to a trusted
# certificate. Without this, all certificates sent by a peer must be
# used in the trust chain or the connection will be rejected.
@%:@ Check whether --enable-altcertchains was given.
if test ${enable_altcertchains+y}
then :
  enableval=$enable_altcertchains;  ENABLED_ALT_CERT_CHAINS=$enableval 
else case e in @%:@(
  e)  ENABLED_ALT_CERT_CHAINS=no 
     ;;
esac
fi


if test "x$ENABLED_ALT_CERT_CHAINS" = "xyes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ALT_CERT_CHAINS"
fi

# Small Stack - Cache on object
@%:@ Check whether --enable-smallstackcache was given.
if test ${enable_smallstackcache+y}
then :
  enableval=$enable_smallstackcache;  ENABLED_SMALL_STACK_CACHE=$enableval 
else case e in @%:@(
  e)  ENABLED_SMALL_STACK_CACHE=no 
     ;;
esac
fi


if test "x$ENABLED_SMALL_STACK_CACHE" = "xyes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SMALL_STACK_CACHE"
fi

# Small Stack
if test "$ENABLED_LINUXKM_DEFAULTS" = "yes"
then
    ENABLED_SMALL_STACK_DEFAULT=yes
else
    ENABLED_SMALL_STACK_DEFAULT=no
fi
@%:@ Check whether --enable-smallstack was given.
if test ${enable_smallstack+y}
then :
  enableval=$enable_smallstack;  ENABLED_SMALL_STACK=$enableval 
else case e in @%:@(
  e)  ENABLED_SMALL_STACK=$ENABLED_SMALL_STACK_DEFAULT 
     ;;
esac
fi


if test "x$ENABLED_SMALL_STACK_CACHE" = "xyes"
then
    ENABLED_SMALL_STACK=yes
fi
if test "x$ENABLED_SMALL_STACK" = "xyes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SMALL_STACK"
fi


#valgrind
@%:@ Check whether --enable-valgrind was given.
if test ${enable_valgrind+y}
then :
  enableval=$enable_valgrind;  ENABLED_VALGRIND=$enableval 
else case e in @%:@(
  e)  ENABLED_VALGRIND=no 
     ;;
esac
fi


if test "$ENABLED_VALGRIND" = "yes"
then
    # Extract the first word of "valgrind", so it can be a program name with args.
set dummy valgrind; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_HAVE_VALGRIND+y}
then :
  printf %s "(cached) " >&6
else case e in @%:@(
  e) if test -n "$HAVE_VALGRIND"; then
  ac_cv_prog_HAVE_VALGRIND="$HAVE_VALGRIND" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in @%:@(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_HAVE_VALGRIND="yes"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_prog_HAVE_VALGRIND" && ac_cv_prog_HAVE_VALGRIND="no"
fi ;;
esac
fi
HAVE_VALGRIND=$ac_cv_prog_HAVE_VALGRIND
if test -n "$HAVE_VALGRIND"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HAVE_VALGRIND" >&5
printf "%s\n" "$HAVE_VALGRIND" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi



    if test "$HAVE_VALGRIND" = "no"
    then
        as_fn_error $? "Valgrind not found." "$LINENO" 5
    fi
    enable_shared=no
    enable_static=yes
    AM_CFLAGS="$AM_CFLAGS -DHAVE_VALGRIND"
fi


# Test certs, use internal cert functions for extra testing
@%:@ Check whether --enable-testcert was given.
if test ${enable_testcert+y}
then :
  enableval=$enable_testcert;  ENABLED_TESTCERT=$enableval 
else case e in @%:@(
  e)  ENABLED_TESTCERT=no 
     ;;
esac
fi


if test "$ENABLED_TESTCERT" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_TEST_CERT"
fi


# I/O Pool, an example to show user how to override memory handler and use
# a pool for the input/output buffer requests
@%:@ Check whether --enable-iopool was given.
if test ${enable_iopool+y}
then :
  enableval=$enable_iopool;  ENABLED_IOPOOL=$enableval 
else case e in @%:@(
  e)  ENABLED_IOPOOL=no 
     ;;
esac
fi


if test "$ENABLED_IOPOOL" = "yes"
then
    if test "$thread_ls_on" = "no"
    then
        as_fn_error $? "I/O Pool example requires Thread Local Storage" "$LINENO" 5
    fi
    AM_CFLAGS="$AM_CFLAGS -DHAVE_IO_POOL -DXMALLOC_USER"
fi


# Certificate Service Support
@%:@ Check whether --enable-certservice was given.
if test ${enable_certservice+y}
then :
  enableval=$enable_certservice;  ENABLED_CERT_SERVICE=$enableval 
else case e in @%:@(
  e)  ENABLED_CERT_SERVICE=no 
     ;;
esac
fi

if test "$ENABLED_CERT_SERVICE" = "yes"
then
    # Requires ecc,certgen, and opensslextra make sure on
    if test "x$ENABLED_CERTGEN" = "xno"
    then
        ENABLED_CERTGEN="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CERT_GEN"
    fi
    if test "x$ENABLED_ECC" = "xno"
    then
        ENABLED_ECC="yes"
        AM_CFLAGS="$AM_CFLAGS -DHAVE_ECC -DTFM_ECC256"

        if test "$ENABLED_ECC_SHAMIR" = "yes"
        then
            AM_CFLAGS="$AM_CFLAGS -DECC_SHAMIR"
        fi
    fi
    if test "x$ENABLED_OPENSSLEXTRA" = "xno" && test "x$ENABLED_OPENSSLCOEXIST" = "xno"
    then
        ENABLED_OPENSSLEXTRA="yes"
        AM_CFLAGS="$AM_CFLAGS -DOPENSSL_EXTRA"
    fi
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_HAVE_CERT_SERVICE"
fi


# wolfSSL JNI
@%:@ Check whether --enable-jni was given.
if test ${enable_jni+y}
then :
  enableval=$enable_jni;  ENABLED_JNI=$enableval 
else case e in @%:@(
  e)  ENABLED_JNI=no 
     ;;
esac
fi

if test "$ENABLED_JNI" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_JNI"
    AM_CFLAGS="$AM_CFLAGS -DHAVE_EX_DATA"
    AM_CFLAGS="$AM_CFLAGS -DKEEP_PEER_CERT"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ALWAYS_VERIFY_CB"

    # Enable prereqs if not already enabled
    if test "x$ENABLED_DTLS" = "xno"
    then
        ENABLED_DTLS="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DTLS"
    fi
    if test "x$ENABLED_OPENSSLEXTRA" = "xno"
    then
        ENABLED_OPENSSLEXTRA="yes"
        AM_CFLAGS="$AM_CFLAGS -DOPENSSL_EXTRA"
    fi
    if test "x$ENABLED_OPENSSLALL" = "xno"
    then
        ENABLED_OPENSSLALL="yes"
        AM_CFLAGS="$AM_CFLAGS -DOPENSSL_ALL"
    fi
    if test "x$ENABLED_CRL" = "xno"
    then
        ENABLED_CRL="yes"
        AM_CFLAGS="$AM_CFLAGS -DHAVE_CRL"
    fi
    if test "x$ENABLED_OCSP" = "xno"
    then
        ENABLED_OCSP="yes"
    fi
    if test "x$ENABLED_CRL_MONITOR" = "xno" && test "x$ENABLED_DISTRO" = "xno"
    then
        ENABLED_CRL_MONITOR="yes"
        AM_CFLAGS="$AM_CFLAGS -DHAVE_CRL_MONITOR"
    fi
    if test "x$ENABLED_SAVESESSION" = "xno"
    then
        ENABLED_SAVESESSION="yes"
        AM_CFLAGS="$AM_CFLAGS -DPERSIST_SESSION_CACHE"
    fi
    if test "x$ENABLED_SAVECERT" = "xno"
    then
        ENABLED_SAVECERT="yes"
        AM_CFLAGS="$AM_CFLAGS -DPERSIST_CERT_CACHE"
    fi
    if test "x$ENABLED_ATOMICUSER" = "xno"
    then
        ENABLED_ATOMICUSER="yes"
        AM_CFLAGS="$AM_CFLAGS -DATOMIC_USER"
    fi
    if test "x$ENABLED_ECC" = "xno"
    then
        ENABLED_ECC="yes"
        AM_CFLAGS="$AM_CFLAGS -DHAVE_ECC -DTFM_ECC256"

        if test "$ENABLED_ECC_SHAMIR" = "yes"
        then
            AM_CFLAGS="$AM_CFLAGS -DECC_SHAMIR"
        fi
    fi
    # Do not enable PK Callbacks in FIPS mode with JNI
    if test "x$ENABLED_PKCALLBACKS" = "xno" && test "$ENABLED_FIPS" = "no"
    then
        ENABLED_PKCALLBACKS="yes"
        AM_CFLAGS="$AM_CFLAGS -DHAVE_PK_CALLBACKS"
    fi
    if test "x$ENABLED_DH" = "xno"
    then
        ENABLED_DH="yes"
        AM_CFLAGS="$AM_CFLAGS -DHAVE_DH"
    fi
    if test "x$ENABLED_PSK" = "xno"
    then
        ENABLED_PSK="yes"
    fi
    if test "x$ENABLED_CERTEXT" = "xno"
    then
        ENABLED_CERTEXT="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CERT_EXT"
    fi
    if test "x$ENABLED_CERTGEN" = "xno"
    then
        ENABLED_CERTGEN="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CERT_GEN"
    fi
    # wolfCrypt JNI/JCE uses keygen, enable by default here so
    # both JCE and JSSE builds can use --enable-jni
    if test "x$ENABLED_KEYGEN" = "xno"
    then
        ENABLED_KEYGEN="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_KEY_GEN"
    fi
    if test "x$ENABLED_CERTREQ" = "xno"
    then
        ENABLED_CERTREQ="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CERT_REQ"
    fi
    if test "x$ENABLED_SNI" = "xno"
    then
        ENABLED_SNI="yes"
        AM_CFLAGS="$AM_CFLAGS -DHAVE_TLS_EXTENSIONS -DHAVE_SNI"
    fi
    if test "x$ENABLED_ALPN" = "xno"
    then
        ENABLED_ALPN="yes"
        AM_CFLAGS="$AM_CFLAGS -DHAVE_ALPN"
    fi
    if test "x$ENABLED_ALT_CERT_CHAINS" = "xno"
    then
        ENABLED_ALT_CERT_CHAINS="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ALT_CERT_CHAINS"
    fi

    # cert gen requires alt names
    ENABLED_ALTNAMES="yes"
fi

if test "$ENABLED_LIGHTY" = "yes"
then
    # Requires opensslextra make sure on
    if test "x$ENABLED_OPENSSLEXTRA" = "xno" && test "x$ENABLED_OPENSSLCOEXIST" = "xno"
    then
        ENABLED_OPENSSLEXTRA="yes"
        AM_CFLAGS="$AM_CFLAGS -DOPENSSL_EXTRA"
    fi
    AM_CFLAGS="$AM_CFLAGS -DHAVE_LIGHTY -DHAVE_WOLFSSL_SSL_H=1"
    AM_CFLAGS="$AM_CFLAGS -DHAVE_EX_DATA"
    AM_CFLAGS="$AM_CFLAGS -DOPENSSL_ALL"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_KEY_GEN"
    # recommended if building wolfSSL specifically for use by lighttpd
    if test "x$ENABLED_ALL" = "xno"; then
        AM_CFLAGS="$AM_CFLAGS -DOPENSSL_NO_SSL2 -DOPENSSL_NO_COMP"
        if test "x$ENABLED_SSLV3" = "xno"; then
            AM_CFLAGS="$AM_CFLAGS -DOPENSSL_NO_SSL3"
            if test "x$ENABLED_TLSV10" = "xno"; then
                AM_CFLAGS="$AM_CFLAGS -DNO_OLD_TLS"
                ENABLED_OLD_TLS=no
            fi
        fi
        if test "x$ENABLED_CRL_MONITOR" = "xno"; then
            AM_CFLAGS="$AM_CFLAGS -DSINGLE_THREADED"
            ENABLED_SINGLETHREADED="yes"
        fi

        # w/ lighttpd 1.4.56 once wolfSSL updated to expose non-filesystem funcs
        #AM_CFLAGS="$AM_CFLAGS -DNO_BIO"
        #AM_CFLAGS="$AM_CFLAGS -DNO_FILESYSTEM"
        #ENABLED_FILESYSTEM=no
    fi
fi

if test "$ENABLED_NGINX" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_NGINX -DWOLFSSL_SIGNER_DER_CERT"
    AM_CFLAGS="$AM_CFLAGS -DOPENSSL_COMPATIBLE_DEFAULTS"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ERROR_CODE_OPENSSL"
fi

if test "$ENABLED_HAPROXY" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_HAPROXY -DOPENSSL_COMPATIBLE_DEFAULTS"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SIGNER_DER_CERT"
    # --enable-all defines its own DEFAULT_MAX_CLASSIC_ASYM_KEY_BITS
    if test -z "$DEFAULT_MAX_CLASSIC_ASYM_KEY_BITS"
    then
        DEFAULT_MAX_CLASSIC_ASYM_KEY_BITS=8192
    fi
    # Requires opensslextra and opensslall
    if test "x$ENABLED_OPENSSLALL" = "xno" && test "x$ENABLED_OPENSSLCOEXIST" = "xno"
    then
        ENABLED_OPENSSLALL="yes"
        ENABLED_OPENSSLEXTRA="yes"
        AM_CFLAGS="$AM_CFLAGS -DOPENSSL_EXTRA -DOPENSSL_ALL"
    fi

    if test "x$ENABLED_CERTGEN" = "xno"
    then
        ENABLED_CERTGEN="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CERT_GEN"
    fi

    if test "x$ENABLED_CERTREQ" = "xno"
    then
        ENABLED_CERTREQ="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CERT_REQ"
    fi

    # Requires sessioncerts make sure on
    if test "x$ENABLED_SESSIONCERTS" = "xno"
    then
        ENABLED_SESSIONCERTS="yes"
        AM_CFLAGS="$AM_CFLAGS -DSESSION_CERTS"
    fi

    # Requires key gen make sure on
    if test "x$ENABLED_KEYGEN" = "xno"
    then
        ENABLED_KEYGEN="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_KEY_GEN"
    fi
fi

if test "$ENABLED_NETSNMP" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_EX_DATA"

    if test "x$ENABLED_AESCFB" = "xno"
    then
        ENABLED_AESCFB="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_AES_CFB"
    fi

    if test "x$ENABLED_DTLS" = "xno"
    then
        ENABLED_DTLS="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DTLS"
    fi
fi

if test "$ENABLED_KRB" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_KRB -DWOLFSSL_AES_DIRECT -DWOLFSSL_DES_ECB"
    AM_CFLAGS="$AM_CFLAGS -DHAVE_EX_DATA"

    # Requires PKCS7
    if test "x$ENABLED_PKCS7" = "xno"
    then
        ENABLED_PKCS7="yes"
    fi
fi

if test "$ENABLED_FFMPEG" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_FFMPEG -DOPENSSL_COMPATIBLE_DEFAULTS"
fi

if test "$ENABLED_SIGNAL" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SIGNAL -DWOLFSSL_AES_COUNTER -DWOLFSSL_AES_DIRECT"
    # Requires opensslextra make sure on
    if test "x$ENABLED_OPENSSLEXTRA" = "xno" && test "x$ENABLED_OPENSSLCOEXIST" = "xno"
    then
        ENABLED_OPENSSLEXTRA="yes"
        AM_CFLAGS="$AM_CFLAGS -DOPENSSL_EXTRA"
    fi
fi

if test "$ENABLED_BIND" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_BIND -DWOLFSSL_DSA_768_MODULUS"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_AES_DIRECT -DHAVE_AES_ECB -DWOLFSSL_DES_ECB"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SHA224 -DWOLFSSL_SHA384 -DWOLFSSL_SHA512"
    AM_CFLAGS="$AM_CFLAGS -DOPENSSL_COMPATIBLE_DEFAULTS"
    ENABLED_SHA224="yes"
    ENABLED_SHA384="yes"
    ENABLED_SHA512="yes"
fi

if test "$ENABLED_RSYSLOG" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_RSYSLOG -DWOLFSSL_ERROR_CODE_OPENSSL"
    AM_CFLAGS="$AM_CFLAGS -DHAVE_EX_DATA -DOPENSSL_COMPATIBLE_DEFAULTS"
fi

if test "$ENABLED_OPENVPN" = "yes"
then
    ENABLED_SUPPORTED_CURVES="yes"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_OPENVPN -DHAVE_KEYING_MATERIAL"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DES_ECB -DHAVE_EX_DATA -DWOLFSSL_KEY_GEN"
fi

if test "$ENABLED_HITCH" = "yes"
then
    # Requires opensslextra make sure on
    if test "x$ENABLED_OPENSSLEXTRA" = "xno" && test "x$ENABLED_OPENSSLCOEXIST" = "xno"
    then
        ENABLED_OPENSSLEXTRA="yes"
        AM_CFLAGS="$AM_CFLAGS -DOPENSSL_EXTRA"
    fi

    # Requires OCSP make sure on
    if test "x$ENABLED_OCSP" = "xno"
    then
        ENABLED_OCSP="yes"
    fi

    # Requires ALPN
    if test "x$ENABLED_ALPN" = "xno"
    then
        ENABLED_ALPN="yes"
        AM_CFLAGS="$AM_CFLAGS -DHAVE_TLS_EXTENSIONS -DHAVE_ALPN"
    fi

    if test "x$ENABLED_KEYGEN" = "xno"
    then
        ENABLED_KEYGEN="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_KEY_GEN"
    fi

    # Requires sessioncerts make sure on
    if test "x$ENABLED_SESSIONCERTS" = "xno"
    then
        ENABLED_SESSIONCERTS="yes"
        AM_CFLAGS="$AM_CFLAGS -DSESSION_CERTS"
    fi

    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_HITCH -DHAVE_EX_DATA -DWOLFSSL_SIGNER_DER_CERT"
    AM_CFLAGS="$AM_CFLAGS -DOPENSSL_COMPATIBLE_DEFAULTS -DWOLFSSL_CIPHER_INTERNALNAME"
fi

if test "$ENABLED_MEMCACHED" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SESSION_ID_CTX"
    AM_CFLAGS="$AM_CFLAGS -DHAVE_EXT_CACHE -DHAVE_MEMCACHED"
fi


if test "$ENABLED_NGINX" = "yes"|| test "x$ENABLED_HAPROXY" = "xyes" || test "x$ENABLED_LIGHTY" = "xyes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ALWAYS_VERIFY_CB"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ALWAYS_KEEP_SNI"
    AM_CFLAGS="$AM_CFLAGS -DKEEP_OUR_CERT -DKEEP_PEER_CERT"
    AM_CFLAGS="$AM_CFLAGS -DHAVE_EXT_CACHE -DHAVE_EX_DATA"

    ENABLED_CERTGEN="yes"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CERT_GEN"
fi

if (test "$ENABLED_OPENSSH" = "yes" && test "x$ENABLED_FIPS" = "xno") || \
   test "$ENABLED_WPAS" = "yes" || test "$ENABLED_QT" = "yes"
then
    test "$enable_arc4" = "" && enable_arc4=yes
fi

if test "$ENABLED_ARC4" = "no"
then
    AM_CFLAGS="$AM_CFLAGS -DNO_RC4"
else
    # turn off ARC4 if leanpsk or leantls on
    if test "$ENABLED_LEANPSK" = "yes" || test "$ENABLED_LEANTLS" = "yes"
    then
        AM_CFLAGS="$AM_CFLAGS -DNO_RC4"
        ENABLED_ARC4=no
    fi
fi

# Asio Support
@%:@ Check whether --enable-asio was given.
if test ${enable_asio+y}
then :
  enableval=$enable_asio;  ENABLED_ASIO=$enableval 
else case e in @%:@(
  e)  ENABLED_ASIO=no 
     ;;
esac
fi

if test "$ENABLED_ASIO" = "yes"
then
    # Requires opensslextra and opensslall
    if test "x$ENABLED_OPENSSLALL" = "xno" && test "x$ENABLED_OPENSSLCOEXIST" = "xno"
    then
        ENABLED_OPENSSLALL="yes"
        ENABLED_OPENSSLEXTRA="yes"
        AM_CFLAGS="$AM_CFLAGS -DOPENSSL_EXTRA -DOPENSSL_ALL"
    fi
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ASIO -DASIO_USE_WOLFSSL -DWOLFSSL_KEY_GEN"
    AM_CFLAGS="$AM_CFLAGS -DBOOST_ASIO_USE_WOLFSSL -DHAVE_EX_DATA"
    AM_CFLAGS="$AM_CFLAGS -DSSL_TXT_TLSV1_2"
    AM_CFLAGS="$AM_CFLAGS -DOPENSSL_NO_SSL2 -DOPENSSL_NO_SSL3"
    if test "$ENABLED_TLSV10" = "yes"
    then
        AM_CFLAGS="$AM_CFLAGS -DSSL_TXT_TLSV1"
    fi
    if test "$ENABLED_OLD_TLS" = "yes"
    then
        AM_CFLAGS="$AM_CFLAGS -DSSL_TXT_TLSV1_1"
    fi

    # Requires OCSP make sure on
    if test "x$ENABLED_OCSP" = "xno"
    then
        ENABLED_OCSP="yes"
    fi
fi

# Apache HTTPD
@%:@ Check whether --enable-apachehttpd was given.
if test ${enable_apachehttpd+y}
then :
  enableval=$enable_apachehttpd;  ENABLED_APACHE_HTTPD=$enableval 
else case e in @%:@(
  e)  ENABLED_APACHE_HTTPD=no 
     ;;
esac
fi

if test "$ENABLED_APACHE_HTTPD" = "yes"
then
    # Requires opensslextra and opensslall
    if test "x$ENABLED_OPENSSLALL" = "xno" && test "x$ENABLED_OPENSSLCOEXIST" = "xno"
    then
        ENABLED_OPENSSLALL="yes"
        ENABLED_OPENSSLEXTRA="yes"
        AM_CFLAGS="$AM_CFLAGS -DOPENSSL_EXTRA -DOPENSSL_ALL"
    fi
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_APACHE_HTTPD"
    AM_CFLAGS="$AM_CFLAGS -DOPENSSL_NO_SSL2 -DOPENSSL_NO_SSL3 -DOPENSSL_NO_COMP"
    AM_CFLAGS="$AM_CFLAGS -DHAVE_EX_DATA -DWOLFSSL_SIGNER_DER_CERT"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CERT_EXT -DWOLFSSL_CERT_GEN"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ALWAYS_KEEP_SNI"
    AM_CFLAGS="$AM_CFLAGS -DOPENSSL_COMPATIBLE_DEFAULTS"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_NO_OCSP_ISSUER_CHECK"

    # Requires OCSP make sure on
    if test "x$ENABLED_OCSP" = "xno"
    then
        ENABLED_OCSP="yes"
    fi

    # Requires sessioncerts make sure on
    if test "x$ENABLED_SESSIONCERTS" = "xno"
    then
        ENABLED_SESSIONCERTS="yes"
        AM_CFLAGS="$AM_CFLAGS -DSESSION_CERTS"
    fi

    # Requires ALPN
    if test "x$ENABLED_ALPN" = "xno"
    then
        ENABLED_ALPN="yes"
        AM_CFLAGS="$AM_CFLAGS -DHAVE_TLS_EXTENSIONS -DHAVE_ALPN"
    fi

    # Requires CRL
    if test "x$ENABLED_CRL" = "xno"
    then
        ENABLED_CRL="yes"
        AM_CFLAGS="$AM_CFLAGS -DHAVE_CRL"
    fi

    # Requires Certificate Generation, Request and Extensions
    if test "x$ENABLED_CERTGEN" = "xno"
    then
        ENABLED_CERTGEN="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CERT_GEN"
    fi
    if test "x$ENABLED_CERTREQ" = "xno"
    then
        ENABLED_CERTREQ="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CERT_REQ"
    fi
    if test "x$ENABLED_CERTEXT" = "xno"
    then
        ENABLED_CERTEXT="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CERT_EXT"
    fi

    # Requires Secure Renegotiation
    if test "x$ENABLED_SECURE_RENEGOTIATION" = "xno"
    then
            AM_CFLAGS="$AM_CFLAGS -DHAVE_TLS_EXTENSIONS -DHAVE_SECURE_RENEGOTIATION -DHAVE_SERVER_RENEGOTIATION_INFO"
    fi
fi

# Encrypt-Then-Mac
@%:@ Check whether --enable-enc-then-mac was given.
if test ${enable_enc_then_mac+y}
then :
  enableval=$enable_enc_then_mac;  ENABLED_ENCRYPT_THEN_MAC=$enableval 
else case e in @%:@(
  e)  ENABLED_ENCRYPT_THEN_MAC=yes 
     ;;
esac
fi


if test "x$ENABLED_TLSX" = "xyes"
then
    ENABLED_ENCRYPT_THEN_MAC=yes
fi

if test "x$ENABLED_ENCRYPT_THEN_MAC" = "xyes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_ENCRYPT_THEN_MAC"
fi


# stunnel Support
@%:@ Check whether --enable-stunnel was given.
if test ${enable_stunnel+y}
then :
  enableval=$enable_stunnel;  ENABLED_STUNNEL=$enableval 
else case e in @%:@(
  e)  ENABLED_STUNNEL=no 
     ;;
esac
fi

if test "$ENABLED_WPAS" = "yes"
then
    ENABLED_STUNNEL="yes"
fi
# stunnel support requires all the features enabled within this conditional.
if test "$ENABLED_STUNNEL" = "yes"
then
    if test "x$ENABLED_OPENSSLEXTRA" = "xno" && test "x$ENABLED_OPENSSLCOEXIST" = "xno"
    then
        ENABLED_OPENSSLEXTRA="yes"
        AM_CFLAGS="$AM_CFLAGS -DOPENSSL_EXTRA"
    fi

    if test "x$ENABLED_SESSION_TICKET" = "xno"
    then
        ENABLED_SESSION_TICKET="yes"
        AM_CFLAGS="$AM_CFLAGS -DHAVE_SESSION_TICKET"
    fi

    if test "x$ENABLED_OCSP" = "xno"
    then
        ENABLED_OCSP="yes"
    fi

    if test "x$ENABLED_CODING" = "xno"
    then
        ENABLED_CODING="yes"
    fi

    if test "x$ENABLED_SESSIONCERTS" = "xno"
    then
        ENABLED_SESSIONCERTS="yes"
        AM_CFLAGS="$AM_CFLAGS -DSESSION_CERTS"
    fi

    if test "x$ENABLED_CRL" = "xno"
    then
        ENABLED_CRL="yes"
        AM_CFLAGS="$AM_CFLAGS -DHAVE_CRL"
    fi

    if test "x$ENABLED_DES3" = "xno"
    then
        ENABLED_DES3="yes"
    fi

    if test "x$ENABLED_TLSX" = "xno"
    then
        ENABLED_TLSX="yes"
        AM_CFLAGS="$AM_CFLAGS -DHAVE_TLS_EXTENSIONS -DHAVE_SNI -DHAVE_MAX_FRAGMENT -DHAVE_TRUNCATED_HMAC"

        # Check the ECC supported curves prereq
        if test "x$ENABLED_ECC" != "xno" || test "x$ENABLED_CURVE25519" = "xyes"
then :
  ENABLED_SUPPORTED_CURVES=yes
               AM_CFLAGS="$AM_CFLAGS -DHAVE_SUPPORTED_CURVES"
fi
    fi

    if test "x$ENABLED_ECC" = "xno"
    then
        ENABLED_OPENSSLEXTRA="yes"
        ENABLED_ECC="yes"
        AM_CFLAGS="$AM_CFLAGS -DHAVE_ECC -DTFM_ECC256"

        if test "$ENABLED_ECC_SHAMIR" = "yes"
        then
            AM_CFLAGS="$AM_CFLAGS -DECC_SHAMIR"
        fi
    fi

    if test "x$ENABLED_CERTEXT" = "xno"
    then
        ENABLED_CERTEXT="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CERT_EXT"
    fi

    if test "x$ENABLED_CERTGEN" = "xno"
    then
        ENABLED_CERTGEN="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CERT_GEN"
    fi

    if test "x$ENABLED_KEYGEN" = "xno"
    then
        ENABLED_KEYGEN="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_KEY_GEN"
    fi

    AM_CFLAGS="$AM_CFLAGS -DHAVE_STUNNEL -DWOLFSSL_ALWAYS_VERIFY_CB"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ALWAYS_KEEP_SNI -DHAVE_EX_DATA"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DES_ECB -DWOLFSSL_SIGNER_DER_CERT"
    AM_CFLAGS="$AM_CFLAGS -DOPENSSL_COMPATIBLE_DEFAULTS -DWOLFSSL_TICKET_HAVE_ID"
fi

# curl Support
@%:@ Check whether --enable-curl was given.
if test ${enable_curl+y}
then :
  enableval=$enable_curl;  ENABLED_CURL=$enableval 
else case e in @%:@(
  e)  ENABLED_CURL=no 
     ;;
esac
fi

# curl support requires all the features enabled within this conditional.
if test "$ENABLED_CURL" = "yes"
then
    if test "$ENABLED_MD4" = "no"
    then
        ENABLED_MD4="yes"
    fi

    if test "x$ENABLED_DES3" = "xno"
    then
        ENABLED_DES3="yes"
    fi

    if test "x$ENABLED_ALPN" = "xno"
    then
        ENABLED_ALPN="yes"
    fi

    if test "x$ENABLED_WOLFSSH" = "xno"
    then
        ENABLED_WOLFSSH="yes"
    fi

    if test "x$ENABLED_OPENSSLEXTRA" = "xno" && test "x$ENABLED_OPENSSLCOEXIST" = "xno"
    then
        ENABLED_OPENSSLEXTRA="yes"
    fi

    if test "x$ENABLED_CRL" = "xno"
    then
        ENABLED_CRL="yes"
        AM_CFLAGS="$AM_CFLAGS -DHAVE_CRL"
    fi

    if test "x$ENABLED_OCSP" = "xno"
    then
        ENABLED_OCSP="yes"
    fi

    if test "x$ENABLED_CERTIFICATE_STATUS_REQUEST" = "xno"
    then
        ENABLED_CERTIFICATE_STATUS_REQUEST="yes"
        AM_CFLAGS="$AM_CFLAGS -DHAVE_TLS_EXTENSIONS -DHAVE_CERTIFICATE_STATUS_REQUEST"
    fi

    if test "x$ENABLED_CERTIFICATE_STATUS_REQUEST_V2" = "xno"
    then
        ENABLED_CERTIFICATE_STATUS_REQUEST_V2="yes"
        AM_CFLAGS="$AM_CFLAGS -DHAVE_TLS_EXTENSIONS -DHAVE_CERTIFICATE_STATUS_REQUEST_V2"
    fi

    if test "x$ENABLED_SNI" = "xno"
    then
        ENABLED_SNI="yes"
        AM_CFLAGS="$AM_CFLAGS -DHAVE_TLS_EXTENSIONS -DHAVE_SNI"
    fi

    if test "x$ENABLED_ALT_CERT_CHAINS" = "xno"
    then
        ENABLED_ALT_CERT_CHAINS="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ALT_CERT_CHAINS"
    fi

    if test "x$ENABLE_IP_ALT_NAME" = "xno"
    then
        ENABLE_IP_ALT_NAME="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_IP_ALT_NAME"
    fi

    if test "x$ENABLED_SESSION_TICKET" = "xno"
    then
        ENABLED_SESSION_TICKET="yes"
        AM_CFLAGS="$AM_CFLAGS -DHAVE_TLS_EXTENSIONS -DHAVE_SESSION_TICKET"
    fi

    # FTPS server requires pointer to session cache
    AM_CFLAGS="$AM_CFLAGS -DNO_SESSION_CACHE_REF"

    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DES_ECB"
fi

if test "$ENABLED_PSK" = "no" && test "$ENABLED_LEANPSK" = "no" \
    && test "x$ENABLED_STUNNEL" = "xno"
then
    AM_CFLAGS="$AM_CFLAGS -DNO_PSK"
fi

if test "$ENABLED_PSK" = "no" &&  \
    (test "$ENABLED_LEANPSK" = "yes" || test "x$ENABLED_STUNNEL" = "xyes")
then
    ENABLED_PSK=yes
fi

# tcpdump support
@%:@ Check whether --enable-tcpdump was given.
if test ${enable_tcpdump+y}
then :
  enableval=$enable_tcpdump;  ENABLED_TCPDUMP=$enableval 
else case e in @%:@(
  e)  ENABLED_TCPDUMP=no 
     ;;
esac
fi

# tcpdump support requires all the features enabled within this conditional.
if test "$ENABLED_TCPDUMP" = "yes"
then
    if test "x$ENABLED_OPENSSLEXTRA" = "xno" && test "x$ENABLED_OPENSSLCOEXIST" = "xno"
    then
        ENABLED_OPENSSLEXTRA="yes"
        AM_CFLAGS="$AM_CFLAGS -DOPENSSL_EXTRA"
    fi

    if test "x$ENABLED_DES3" = "xno"
    then
        ENABLED_DES3="yes"
    fi
fi

# sblim-sfcb support
@%:@ Check whether --enable-sblim-sfcb was given.
if test ${enable_sblim_sfcb+y}
then :
  enableval=$enable_sblim_sfcb;  ENABLED_SBLIM_SFCB=$enableval 
else case e in @%:@(
  e)  ENABLED_SBLIM_SFCB=no 
     ;;
esac
fi

# sblim-sfcb support requires all the features enabled within this conditional.
if test "$ENABLED_SBLIM_SFCB" = "yes"
then
    if test "x$ENABLED_OPENSSLEXTRA" = "xno" && test "x$ENABLED_OPENSSLCOEXIST" = "xno"
    then
        ENABLED_OPENSSLEXTRA="yes"
        AM_CFLAGS="$AM_CFLAGS -DOPENSSL_EXTRA"
    fi

    if test "x$ENABLED_CERTGEN" = "xno"
    then
        ENABLED_CERTGEN="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CERT_GEN"
    fi

    AM_CFLAGS="$AM_CFLAGS -DHAVE_SBLIM_SFCB -DWOLFSSL_SIGNER_DER_CERT"
fi

# libest Support
@%:@ Check whether --enable-libest was given.
if test ${enable_libest+y}
then :
  enableval=$enable_libest;  ENABLED_LIBEST=$enableval 
else case e in @%:@(
  e)  ENABLED_LIBEST=no 
     ;;
esac
fi


if test "$ENABLED_LIBEST" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_EX_DATA -DHAVE_LIBEST -DWOLFSSL_ALT_NAMES"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_PSS_SALT_LEN_DISCOVER"

    # Requires opensslextra and opensslall
    if test "x$ENABLED_OPENSSLALL" = "xno" && test "x$ENABLED_OPENSSLCOEXIST" = "xno"
    then
        ENABLED_OPENSSLALL="yes"
        ENABLED_OPENSSLEXTRA="yes"
        AM_CFLAGS="$AM_CFLAGS -DOPENSSL_EXTRA -DOPENSSL_ALL"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_EITHER_SIDE -DWC_RSA_NO_PADDING"
        AM_CFLAGS="$AM_CFLAGS -DWC_RSA_PSS -DWOLFSSL_PSS_LONG_SALT"
    fi

    # Requires OCSP
    if test "x$ENABLED_OCSP" = "xno"
    then
        ENABLED_OCSP="yes"
    fi

    # Requires PKCS7
    if test "x$ENABLED_PKCS7" = "xno"
    then
        ENABLED_PKCS7="yes"
    fi

    # Requires Certificate Generation and Request
    if test "x$ENABLED_CERTGEN" = "xno"
    then
        ENABLED_CERTGEN="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CERT_GEN"
    fi
    if test "x$ENABLED_CERTREQ" = "xno"
    then
        ENABLED_CERTREQ="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CERT_REQ"
    fi
    if test "x$ENABLED_CERTEXT" = "xno"
    then
        ENABLED_CERTEXT="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CERT_EXT"
    fi

    # Requires CRL
    if test "x$ENABLED_CRL" = "xno"
    then
        ENABLED_CRL="yes"
        AM_CFLAGS="$AM_CFLAGS -DHAVE_CRL"
    fi

    if test "x$ENABLED_SRP" = "xno"
    then
        ENABLED_SRP="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFCRYPT_HAVE_SRP"
    fi

    # Enable prereqs if not already enabled
    if test "x$ENABLED_KEYGEN" = "xno"
    then
        ENABLED_KEYGEN="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_KEY_GEN"
    fi

    # Requires sessioncerts make sure on
    if test "x$ENABLED_SESSIONCERTS" = "xno"
    then
        ENABLED_SESSIONCERTS="yes"
        AM_CFLAGS="$AM_CFLAGS -DSESSION_CERTS"
    fi

    if test "x$ENABLED_DSA" = "xno"
    then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: Enabling DSA with --enable-dsa is recommended for libest" >&5
printf "%s\n" "$as_me: WARNING: Enabling DSA with --enable-dsa is recommended for libest" >&2;}
    fi
fi

if test "$ENABLED_MD4" = "no"
then
    #turn on MD4 if using stunnel
    if test "x$ENABLED_STUNNEL" = "xyes" || test "x$ENABLED_WPAS" != "xno" || test "x$ENABLED_KRB" = "xyes"
    then
        ENABLED_MD4="yes"
    else
        AM_CFLAGS="$AM_CFLAGS -DNO_MD4"
    fi
fi


# Encrypted keys
@%:@ Check whether --enable-enckeys was given.
if test ${enable_enckeys+y}
then :
  enableval=$enable_enckeys;  ENABLED_ENCKEYS=$enableval 
else case e in @%:@(
  e)  ENABLED_ENCKEYS=no 
     ;;
esac
fi


if test "$ENABLED_OPENSSLEXTRA" = "yes" || test "$ENABLED_WEBSERVER" = "yes" || test "$ENABLED_WPAS" != "no"
then
    ENABLED_ENCKEYS=yes
fi

if test "$ENABLED_ENCKEYS" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ENCRYPTED_KEYS"
fi


# PKCS#12
# set PKCS#12 default
PKCS12_DEFAULT=yes
if test "$ENABLED_ASN" = "no" || test "$FIPS_VERSION" = "rand"
then
    PKCS12_DEFAULT=no
fi
@%:@ Check whether --enable-pkcs12 was given.
if test ${enable_pkcs12+y}
then :
  enableval=$enable_pkcs12;  ENABLED_PKCS12=$enableval 
else case e in @%:@(
  e)  ENABLED_PKCS12=$PKCS12_DEFAULT 
     ;;
esac
fi


if test "x$ENABLED_PKCS12" = "xno"
then
    AM_CFLAGS="$AM_CFLAGS -DNO_PKCS12"
fi

# PWDBASED has to come after certservice since we want it on w/o explicit on
# PWDBASED
@%:@ Check whether --enable-pwdbased was given.
if test ${enable_pwdbased+y}
then :
  enableval=$enable_pwdbased;  ENABLED_PWDBASED=$enableval 
else case e in @%:@(
  e)  ENABLED_PWDBASED=no 
     ;;
esac
fi


if test "$ENABLED_PWDBASED" = "no"
then
    if test "$ENABLED_OPENSSLEXTRA" = "yes" || test "$ENABLED_OPENSSLALL" = "yes" || \
       test "$ENABLED_WEBSERVER" = "yes" || test "$ENABLED_ENCKEYS" = "yes" || \
       test "$ENABLED_PKCS12" = "yes"
    then
        # opensslextra, opensslall, webserver, enckeys and pkcs12 need pwdbased
        ENABLED_PWDBASED=yes
    else
        AM_CFLAGS="$AM_CFLAGS -DNO_PWDBASED"
    fi
fi


@%:@ Check whether --enable-scrypt was given.
if test ${enable_scrypt+y}
then :
  enableval=$enable_scrypt;  ENABLED_SCRYPT=$enableval 
else case e in @%:@(
  e)  ENABLED_SCRYPT=no 
     ;;
esac
fi


if test "$ENABLED_SCRYPT" = "yes"
then
    if test "$ENABLED_PWDBASED" = "no"
    then
        as_fn_error $? "cannot enable scrypt without enabling pwdbased." "$LINENO" 5
    fi
    AM_CFLAGS="$AM_CFLAGS -DHAVE_SCRYPT"
fi


# wolfCrypt Only Build
if test "$ENABLED_CRYPTONLY" = "yes"
then
    if test "$ENABLED_OPENSSLALL" = "yes"
    then
        as_fn_error $? "cryptonly and opensslall are mutually incompatible." "$LINENO" 5
    fi
    AM_CFLAGS="$AM_CFLAGS -DWOLFCRYPT_ONLY"
fi

if test "x$ENABLED_CRYPTONLY" = "xno"
then
    if test "x$ENABLED_PSK" = "xno" && test "x$ENABLED_ASN" = "xno"
    then
        as_fn_error $? "please enable psk if disabling asn." "$LINENO" 5
    fi

    if test "$ENABLED_AFALG" = "yes"
    then
        # for TLS connections the intermediate hash needs to store buffer
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_AFALG_HASH_KEEP"
    fi

    if test "$ENABLED_DEVCRYPTO" = "yes"
    then
        # for TLS connections the intermediate hash needs to store buffer
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DEVCRYPTO_HASH_KEEP"
    fi
fi


# Enable Examples, used to disable examples
if test "$ENABLED_LINUXKM" = "yes"
then
    ENABLED_EXAMPLES_DEFAULT=no
else
    ENABLED_EXAMPLES_DEFAULT=yes
fi
@%:@ Check whether --enable-examples was given.
if test ${enable_examples+y}
then :
  enableval=$enable_examples;  ENABLED_EXAMPLES=$enableval 
else case e in @%:@(
  e)  ENABLED_EXAMPLES=$ENABLED_EXAMPLES_DEFAULT 
     ;;
esac
fi


if test "x$ENABLED_FILESYSTEM" = "xno"
then :
  ENABLED_EXAMPLES="no"
fi
if test "x$ENABLED_CRYPTONLY" = "xyes"
then :
  ENABLED_EXAMPLES="no"
fi


# Enable wolfCrypt test and benchmark
if test "$ENABLED_LINUXKM" = "yes"
then
    ENABLED_CRYPT_TESTS_DEFAULT=no
else
    ENABLED_CRYPT_TESTS_DEFAULT=yes
fi
@%:@ Check whether --enable-crypttests was given.
if test ${enable_crypttests+y}
then :
  enableval=$enable_crypttests;  ENABLED_CRYPT_TESTS=$enableval 
else case e in @%:@(
  e)  ENABLED_CRYPT_TESTS=$ENABLED_CRYPT_TESTS_DEFAULT 
     ;;
esac
fi



# Build wolfCrypt test and benchmark as libraries. This will compile test.c and
# benchmark.c and make their functions available via libraries, libwolfcrypttest
# and libwolfcryptbench, respectively. Note that this feature is not enabled by
# default, and the API of these libraries should NOT be treated as stable.
@%:@ Check whether --enable-crypttests-libs was given.
if test ${enable_crypttests_libs+y}
then :
  enableval=$enable_crypttests_libs;  ENABLED_CRYPT_TESTS_LIBS=$enableval 
else case e in @%:@(
  e)  ENABLED_CRYPT_TESTS_LIBS=no 
     ;;
esac
fi


# LIBZ
ENABLED_LIBZ="no"
trylibzdir=""

@%:@ Check whether --with-libz was given.
if test ${with_libz+y}
then :
  withval=$with_libz; 
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for libz" >&5
printf %s "checking for libz... " >&6; }
        CPPFLAGS="$CPPFLAGS -DHAVE_LIBZ"
        LIBS="$LIBS -lz"

        cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <zlib.h>
int
main (void)
{
 deflateInit(0, 8); 
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
   libz_linked=yes 
else case e in @%:@(
  e)  libz_linked=no  ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext

        if test "x$libz_linked" = "xno" ; then
            if test "x$withval" != "xno" ; then
                trylibzdir=$withval
            fi
            if test "x$withval" = "xyes" ; then
                trylibzdir="/usr"
            fi

            LDFLAGS="$LDFLAGS -L$trylibzdir/lib"
            CPPFLAGS="$CPPFLAGS -I$trylibzdir/include"

            cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <zlib.h>
int
main (void)
{
 deflateInit(0, 8); 
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
   libz_linked=yes 
else case e in @%:@(
  e)  libz_linked=no  ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext

            if test "x$libz_linked" = "xno" ; then
                as_fn_error $? "libz isn't found.
                If it's already installed, specify its path using --with-libz=/dir/" "$LINENO" 5
            fi
            { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
        else
            { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
        fi
        ENABLED_LIBZ="yes"
    

fi



# PKCS#11
@%:@ Check whether --enable-pkcs11 was given.
if test ${enable_pkcs11+y}
then :
  enableval=$enable_pkcs11;  ENABLED_PKCS11=$enableval 
else case e in @%:@(
  e)  ENABLED_PKCS11=no 
     ;;
esac
fi


if test "x$ENABLED_PKCS11" != "xno"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_PKCS11 -DHAVE_WOLF_BIGINT"
    if test "x$ENABLED_PKCS11" != "xstatic"
    then
        LIBS="$LIBS -ldl"
    else
        AM_CFLAGS="$AM_CFLAGS -DHAVE_PKCS11_STATIC"
        ENABLED_PKCS11="yes"
    fi
fi


# PKCS#8
@%:@ Check whether --enable-pkcs8 was given.
if test ${enable_pkcs8+y}
then :
  enableval=$enable_pkcs8;  ENABLED_PKCS8=$enableval 
else case e in @%:@(
  e)  ENABLED_PKCS8=yes 
     ;;
esac
fi


if test "x$ENABLED_PKCS8" = "xno"
then
    AM_CFLAGS="$AM_CFLAGS -DNO_PKCS8"
fi


# cavium
trycaviumdir=""

@%:@ Check whether --with-cavium was given.
if test ${with_cavium+y}
then :
  withval=$with_cavium; 
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for cavium" >&5
printf %s "checking for cavium... " >&6; }
        LIB_ADD="-lrt $LIB_ADD"

        if test "x$withval" = "xyes" ; then
            as_fn_error $? "need a PATH for --with-cavium" "$LINENO" 5
        fi
        if test "x$withval" != "xno" ; then
            trycaviumdir=$withval
        fi

        CPPFLAGS="$AM_CPPFLAGS -DHAVE_CAVIUM -I$trycaviumdir/include"
        LDFLAGS="$AM_LDFLAGS $trycaviumdir/api/cavium_common.o"

        cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include "cavium_common.h"
int
main (void)
{
 CspShutdown(CAVIUM_DEV_ID); 
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
   cavium_linked=yes 
else case e in @%:@(
  e)  cavium_linked=no  ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext

        if test "x$cavium_linked" = "xno" ; then
            as_fn_error $? "cavium isn't found.
            If it's already installed, specify its path using --with-cavium=/dir/" "$LINENO" 5
        else
            AM_CPPFLAGS="$CPPFLAGS"
            AM_LDFLAGS="$LDFLAGS"
        fi
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
        enable_shared=no
        enable_static=yes
        ENABLED_CAVIUM=yes
    
else case e in @%:@(
  e)  ENABLED_CAVIUM=no 
 ;;
esac
fi


# cavium V
trycaviumdir=""

@%:@ Check whether --with-cavium-v was given.
if test ${with_cavium_v+y}
then :
  withval=$with_cavium_v; 
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for cavium" >&5
printf %s "checking for cavium... " >&6; }
        AM_CFLAGS="$AM_CFLAGS -DHAVE_CAVIUM -DHAVE_CAVIUM_V"
        LIB_ADD="-lrt -lcrypto $LIB_ADD"

        if test "x$withval" = "xyes" ; then
            as_fn_error $? "need a PATH for --with-cavium" "$LINENO" 5
        fi
        if test "x$withval" != "xno" ; then
            trycaviumdir=$withval
        fi

        if test -e $trycaviumdir/lib/libnitrox.a
        then
            AM_CPPFLAGS="-I$trycaviumdir/include $AM_CPPFLAGS"
        else
            ENABLED_CAVIUM_V=no
        fi
        LIB_STATIC_ADD="$trycaviumdir/lib/libnitrox.a $LIB_STATIC_ADD"

        if test "$ENABLED_CAVIUM_V" = "no"; then
            as_fn_error $? "Could not find Nitrox library" "$LINENO" 5
        fi

        enable_shared=no
        enable_static=yes
        enable_opensslextra=yes

        ENABLED_CAVIUM=yes
        ENABLED_CAVIUM_V=yes
    
else case e in @%:@(
  e) 
        ENABLED_CAVIUM=no
        ENABLED_CAVIUM_V=no
    
 ;;
esac
fi



# Cavium Octeon
OCTEON_ROOT=""
: ${OCTEON_OBJ="obj-octeon2"}
: ${OCTEON_HOST="standalone"}


@%:@ Check whether --with-octeon-sync was given.
if test ${with_octeon_sync+y}
then :
  withval=$with_octeon_sync; 
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for octeon" >&5
printf %s "checking for octeon... " >&6; }

        if test "x$withval" = "xyes" ; then
            as_fn_error $? "need a PATH for --with-octeon" "$LINENO" 5
        fi
        if test "x$withval" != "xno" ; then
            OCTEON_ROOT=$withval
        fi

        AM_CFLAGS="$AM_CFLAGS -DHAVE_CAVIUM_OCTEON_SYNC"
        AM_CFLAGS="$AM_CFLAGS -DOCTEON_MODEL=$OCTEON_MODEL"
        AM_CFLAGS="$AM_CFLAGS -I$OCTEON_ROOT/executive"
        case $OCTEON_HOST in @%:@(
  'linux') :
    AM_CFLAGS="$AM_CFLAGS -DCVMX_BUILD_FOR_LINUX_HOST" ;; @%:@(
  *) :
     ;;
esac

        #-I$OCTEON_ROOT/target/include
        AM_LDFLAGS="$AM_LDFLAGS -lrt -Xlinker -T -Xlinker $OCTEON_ROOT/executive/cvmx-shared-linux.ld"
        AM_LDFLAGS="$AM_LDFLAGS -L$OCTEON_ROOT/executive/$OCTEON_OBJ -lcvmx -lfdt"

        enable_shared=no
        enable_static=yes

        ENABLED_OCTEON_SYNC=yes
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
    
else case e in @%:@(
  e) ENABLED_OCTEON_SYNC=no
 ;;
esac
fi



# Intel QuickAssist
QAT_DIR=""
BUILD_INTEL_QAT_VERSION=2


@%:@ Check whether --with-intelqa was given.
if test ${with_intelqa+y}
then :
  withval=$with_intelqa; ENABLED_INTEL_QA=yes; QAT_DIR=$withval
else case e in @%:@(
  e) ENABLED_INTEL_QA=no ;;
esac
fi



@%:@ Check whether --with-intelqa-sync was given.
if test ${with_intelqa_sync+y}
then :
  withval=$with_intelqa_sync; ENABLED_INTEL_QA_SYNC=yes; QAT_DIR=$withval
else case e in @%:@(
  e) ENABLED_INTEL_QA_SYNC=no ;;
esac
fi


if test "x$ENABLED_INTEL_QA" = "xyes" && test "x$ENABLED_INTEL_QA_SYNC" = "xyes"
then :
  as_fn_error $? "Both Intel QA Async and Sync are selected, only select one." "$LINENO" 5
fi

if test "x$ENABLED_INTEL_QA" = "xyes" || test "x$ENABLED_INTEL_QA_SYNC" = "xyes"
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for intelqa" >&5
printf %s "checking for intelqa... " >&6; }
     if test "x$ENABLED_INTEL_QA" = "xyes"
then :
  AM_CPPFLAGS="$AM_CPPFLAGS -DHAVE_INTEL_QA -DDO_CRYPTO -DUSER_SPACE"; intelqa_opt=""
else case e in @%:@(
  e) AM_CPPFLAGS="$AM_CPPFLAGS -DHAVE_INTEL_QA_SYNC -DQAT_USE_POLLING_THREAD -DO_CRYPTO -DUSER_SPACE"; intelqa_opt="-sync" ;;
esac
fi
     OLD_LIBS="$LIBS"
     OLD_CPPFLAGS="$CPPFLAGS"

     if test "x$QAT_DIR" = "xyes"
then :
  as_fn_error $? "need a PATH for --with-intelqa$intelqa_opt" "$LINENO" 5
fi

     QAT_FLAGS="-I$QAT_DIR/quickassist/include -I$QAT_DIR/quickassist/include/lac -I$QAT_DIR/quickassist/utilities/osal/include \
         -I$QAT_DIR/quickassist/utilities/osal/src/linux/user_space/include -I$QAT_DIR/quickassist/lookaside/access_layer/include \
         -I$QAT_DIR/quickassist/lookaside/access_layer/src/common/include -I$srcdir/wolfssl -I$srcdir/wolfssl/wolfcrypt/port/intel \
         -I$QAT_DIR/quickassist/utilities/libusdm_drv"
     AM_CPPFLAGS="$AM_CPPFLAGS $QAT_FLAGS"
     CPPFLAGS="$AM_CPPFLAGS"

     LDFLAGS="$LDFLAGS -L$QAT_DIR/build"
     LIBS="$LIBS -lqat_s -lusdm_drv_s"

     cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include "cpa_cy_common.h"
int
main (void)
{
Cpa16U count = 0; cpaCyGetNumInstances(&count);
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  intelqa_linked=yes
else case e in @%:@(
  e) intelqa_linked=no ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext

     if test "x$intelqa_linked" = "xno"
then :
  # Try old QAT driver libraries
            LIBS="$OLD_LIBS -licp_qa_al_s"
            cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include "cpa_cy_common.h"
int
main (void)
{
Cpa16U count = 0; cpaCyGetNumInstances(&count);
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  intelqa_linked=yes
else case e in @%:@(
  e) intelqa_linked=no ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
            if test "x$intelqa_linked" = "xno"
then :
  as_fn_error $? "Intel QuickAssist not found. If it's already installed, specify its path using --with-intelqa$intelqa_opt=/dir/" "$LINENO" 5
else case e in @%:@(
  e) BUILD_INTEL_QAT_VERSION=1 ;;
esac
fi
           
fi

     { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

     if test "x$BUILD_INTEL_QAT_VERSION" = "x1"
then :
  LIB_ADD="-ladf_proxy -losal -lrt $LIB_ADD"
else case e in @%:@(
  e) LIB_ADD="-losal -lrt $LIB_ADD" ;;
esac
fi
     CPPFLAGS="$OLD_CPPFLAGS"

fi

################################################################################
# Single Precision option handling                                             #
################################################################################

ENABLED_SP_RSA=no
ENABLED_SP_DH=no
ENABLED_SP_FF_2048=no
ENABLED_SP_FF_3072=no
ENABLED_SP_FF_4096=no
ENABLED_SP_ECC=no
ENABLED_SP_EC_256=no
ENABLED_SP_EC_384=no
ENABLED_SP_EC_521=no
ENABLED_SP_SM2=$ENABLED_SM2
ENABLED_SP_SAKKE_1024=$ENABLED_SAKKE
ENABLED_SP_NO_MALLOC=no
ENABLED_SP_NONBLOCK=no
ENABLED_SP_SMALL=no
for v in `echo $ENABLED_SP | tr "," " "`
do
  case $v in
  small)
    ENABLED_SP_SMALL=yes
    ENABLED_SP_RSA=yes
    ENABLED_SP_DH=yes
    ENABLED_SP_FF_2048=yes
    ENABLED_SP_FF_3072=yes
    ENABLED_SP_ECC=yes
    ENABLED_SP_EC_256=yes
    if test "$host_cpu" = "x86_64" || test "$host_cpu" = "aarch64" || test "$host_cpu" = "amd64"; then
      ENABLED_SP_FF_4096=yes
      ENABLED_SP_EC_384=yes
      ENABLED_SP_EC_521=yes
    fi
    ;;

  smallfast)
    ENABLED_SP_SMALL=yes
    ENABLED_SP_RSA=yes
    ENABLED_SP_DH=yes
    ENABLED_SP_FF_2048=yes
    ENABLED_SP_FF_3072=yes
    ENABLED_SP_ECC=yes
    ENABLED_SP_EC_256=yes
    if test "$host_cpu" = "x86_64" || test "$host_cpu" = "aarch64" || test "$host_cpu" = "amd64"; then
      ENABLED_SP_FF_4096=yes
      ENABLED_SP_EC_384=yes
      ENABLED_SP_EC_521=yes
    fi
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_FAST_MODEXP"
    ;;

  yes)
    ENABLED_SP_RSA=yes
    ENABLED_SP_DH=yes
    ENABLED_SP_FF_2048=yes
    ENABLED_SP_FF_3072=yes
    ENABLED_SP_ECC=yes
    ENABLED_SP_EC_256=yes
    if test "$host_cpu" = "x86_64" || test "$host_cpu" = "aarch64" || test "$host_cpu" = "amd64"; then
      ENABLED_SP_FF_4096=yes
      ENABLED_SP_EC_384=yes
      ENABLED_SP_EC_521=yes
    fi
    ;;

  no)
    ;;

  smallec256 | smallp256 | small256)
    ENABLED_SP_SMALL=yes
    ENABLED_SP_ECC=yes
    ENABLED_SP_EC_256=yes
    ;;
  ec256 | p256 | 256)
    ENABLED_SP_ECC=yes
    ENABLED_SP_EC_256=yes
    ;;
  smallec384 | smallp384 | small384)
    ENABLED_SP_SMALL=yes
    ENABLED_SP_ECC=yes
    ENABLED_SP_EC_384=yes
    ;;
  ec384 | p384 | 384)
    ENABLED_SP_ECC=yes
    ENABLED_SP_EC_384=yes
    ;;
  smallec521 | smallp521 | small521)
    ENABLED_SP_SMALL=yes
    ENABLED_SP_ECC=yes
    ENABLED_SP_EC_521=yes
    ;;
  ec521 | p521 | 521)
    ENABLED_SP_ECC=yes
    ENABLED_SP_EC_521=yes
    ;;
  smallec1024 | smallp1024 | small1024)
    ENABLED_SP_ECC=yes
    ENABLED_SP_SMALL=yes
    ENABLED_SP_SAKKE_1024=yes
    ;;
  ec1024 | p1024 | 1024)
    ENABLED_SP_ECC=yes
    ENABLED_SP_SAKKE_1024=yes
    ;;
  smallsm2)
    ENABLED_SP_SMALL=yes
    ENABLED_SP_ECC=yes
    ENABLED_SP_SM2=yes
    ;;
  sm2)
    ENABLED_SP_ECC=yes
    ENABLED_SP_SM2=yes
    ;;

  small2048)
    ENABLED_SP_SMALL=yes
    ENABLED_SP_RSA=yes
    ENABLED_SP_DH=yes
    ENABLED_SP_FF_2048=yes
    ;;
  2048)
    ENABLED_SP_RSA=yes
    ENABLED_SP_DH=yes
    ENABLED_SP_FF_2048=yes
    ;;
  smallrsa2048)
    ENABLED_SP_SMALL=yes
    ENABLED_SP_RSA=yes
    ENABLED_SP_FF_2048=yes
    ;;
  rsa2048)
    ENABLED_SP_RSA=yes
    ENABLED_SP_FF_2048=yes
    ;;

  small3072)
    ENABLED_SP_SMALL=yes
    ENABLED_SP_RSA=yes
    ENABLED_SP_DH=yes
    ENABLED_SP_FF_3072=yes
    ;;
  3072)
    ENABLED_SP_RSA=yes
    ENABLED_SP_DH=yes
    ENABLED_SP_FF_3072=yes
    ;;
  smallrsa3072)
    ENABLED_SP_SMALL=yes
    ENABLED_SP_RSA=yes
    ENABLED_SP_FF_3072=yes
    ;;
  rsa3072)
    ENABLED_SP_RSA=yes
    ENABLED_SP_FF_3072=yes
    ;;

  small4096)
    ENABLED_SP_SMALL=yes
    ENABLED_SP_RSA=yes
    ENABLED_SP_DH=yes
    ENABLED_SP_FF_4096=yes
    ;;
  4096 | +4096)
    ENABLED_SP_RSA=yes
    ENABLED_SP_DH=yes
    ENABLED_SP_FF_4096=yes
    ;;
  smallrsa4096)
    ENABLED_SP_SMALL=yes
    ENABLED_SP_RSA=yes
    ENABLED_SP_FF_4096=yes
    ;;
  rsa4096)
    ENABLED_SP_RSA=yes
    ENABLED_SP_FF_4096=yes
    ;;

  smallstack)
    ENABLED_SP_SMALL_STACK=yes
    ;;

  nomalloc)
    ENABLED_SP_NO_MALLOC=yes
    ;;

  nonblock)
    # Requires small and no malloc
    ENABLED_SP_NONBLOCK=yes
    ENABLED_SP_NO_MALLOC=yes
    ENABLED_SP_SMALL=yes
    ;;

  asm)
    ENABLED_SP_ASM=yes
    ;;

  noasm)
    ENABLED_SP_ASM=no
    ;;

  *)
    as_fn_error $? "Invalid choice of Single Precision length in bits 256, 384, 521, 1024, 2048, 3072, 4096: $ENABLED_SP." "$LINENO" 5
    break;;
  esac
done

ENABLED_SP_LINE="$ENABLE_SP"
ENABLED_SP=no
if test "$ENABLED_RSA" = "yes" && test "$ENABLED_SP_RSA" = "yes"; then
    ENABLED_SP=yes
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_HAVE_SP_RSA"
    AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_HAVE_SP_RSA"
fi
if test "$ENABLED_DH" != "no" && test "$ENABLED_SP_DH" = "yes"; then
    ENABLED_SP=yes
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_HAVE_SP_DH"
    AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_HAVE_SP_DH"
fi
if test "$ENABLED_SP_RSA" = "yes" || test "$ENABLED_SP_DH" = "yes"; then
    if test "$ENABLED_SP_FF_2048" = "no"; then
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_NO_2048"
        AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_SP_NO_2048"
    fi
    if test "$ENABLED_SP_FF_3072" = "no"; then
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_NO_3072"
        AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_SP_NO_3072"
    fi
    if test "$ENABLED_SP_FF_4096" = "yes"; then
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_4096"
        AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_SP_4096"
    fi

    case $host_cpu in
    *x86_64* | *aarch64* | *amd64*)
      AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_LARGE_CODE"
      ;;
    *)
      ;;
    esac
fi
if test "$ENABLED_ECC" != "no" && test "$ENABLED_SP_ECC" = "yes"; then
    ENABLED_SP=yes
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_HAVE_SP_ECC"
    AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_HAVE_SP_ECC"
    if test "$ENABLED_SP_EC_256" = "no"; then
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_NO_256"
        AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_SP_NO_256"
    fi
    if test "$ENABLED_SP_EC_384" = "yes"; then
        AM_CFLAGS="$AM_CFLAGS -DHAVE_ECC384 -DWOLFSSL_SP_384"
        AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_SP_384"
    fi
    if test "$ENABLED_SP_EC_521" = "yes"; then
        AM_CFLAGS="$AM_CFLAGS -DHAVE_ECC521 -DWOLFSSL_SP_521"
        AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_SP_521"
    fi
    if test "$ENABLED_SP_SAKKE_1024" = "yes"; then
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_1024"
        AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_SP_1024"
    fi
    if test "$ENABLED_SP_SM2" = "yes"; then
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_SM2"
        AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_SP_SM2"
    fi
fi
if test "$ENABLED_SP_SMALL" = "yes"; then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_SMALL"
    AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_SP_SMALL"
fi
if test "$ENABLED_SP_SMALL_STACK" = "yes"; then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_SMALL_STACK"
    AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_SP_SMALL_STACK"
fi
if test "$ENABLED_SP_NO_MALLOC" = "yes"; then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_NO_MALLOC"
    AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_SP_NO_MALLOC"
fi
if test "$ENABLED_SP_NONBLOCK" = "yes"; then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_NONBLOCK"
    AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_SP_NONBLOCK"
fi

if test "$ENABLED_SP_MATH" = "yes"; then
    if test "$ENABLED_SP" = "no"; then
        if test "$ENABLED_RSA" != "no"; then
            as_fn_error $? "Must have SP enabled with SP math for RSA: --enable-sp" "$LINENO" 5
        fi
        if test "$ENABLED_DH" != "no"; then
            as_fn_error $? "Must have SP enabled with SP math for DH: --enable-sp" "$LINENO" 5
        fi
        if test "$ENABLED_ECC" != "no"; then
            as_fn_error $? "Must have SP enabled with SP math for ECC: --enable-sp" "$LINENO" 5
        fi
    fi
    if test "$ENABLED_ECCCUSTCURVES" != "no"; then
        as_fn_error $? "Cannot use single precision math and custom curves" "$LINENO" 5
    fi
    if test "$ENABLED_DSA" = "yes"; then
        as_fn_error $? "Cannot use single precision math and DSA" "$LINENO" 5
    fi
    if test "$ENABLED_SRP" = "yes"; then
        as_fn_error $? "Cannot use single precision math and SRP" "$LINENO" 5
    fi
    if test "$ENABLED_SP_RSA" = "no" && test "$ENABLED_RSA" = "yes"; then
        as_fn_error $? "Cannot use RSA single precision only math and RSA" "$LINENO" 5
    fi
    if test "$ENABLED_SP_DH" = "no" && test "$ENABLED_DH" != "no"; then
        as_fn_error $? "Cannot use DH single precision only math and DH" "$LINENO" 5
    fi
fi

for v in `echo $ENABLED_SP_MATH_ALL | tr "," " "`
do
  case $v in
  yes | no)
    ;;
  small)
    ENABLED_SP_MATH_ALL="yes"
    ENABLED_SP_SMALL="yes"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_SMALL"
    AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_SP_SMALL"
    ;;
  huge)
    ENABLED_SP_MATH_ALL="yes"
    ENABLED_FASTHUGEMATH="yes"
    AM_CFLAGS="$AM_CFLAGS $OPTIMIZE_HUGE_CFLAGS"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_INT_LARGE_COMBA"
    ;;
  256 | 384 | 521 | 1024 | 2048 | 3072 | 4096)
    if test -z "$DEFAULT_MAX_CLASSIC_ASYM_KEY_BITS" -o "$DEFAULT_MAX_CLASSIC_ASYM_KEY_BITS" -lt "$v"
    then
        DEFAULT_MAX_CLASSIC_ASYM_KEY_BITS="$v"
    fi
    ENABLED_SP_MATH_ALL="yes"
    ;;
  nomalloc)
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_NO_MALLOC"
    ENABLED_SP_MATH_ALL="yes"
    ;;
  neg)
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_INT_NEGATIVE"
    ENABLED_SP_MATH_ALL="yes"
    ;;
  *)
    as_fn_error $? "Support SP int bit sizes: 256, 384, 521, 1024, 2048, 3072, 4096. $ENABLED_SP_MATH_ALL not supported" "$LINENO" 5
    ;;
  esac
done


@%:@ Check whether --with-arm-target was given.
if test ${with_arm_target+y}
then :
  withval=$with_arm_target; ARM_TARGET="$withval"
else case e in @%:@(
  e) ARM_TARGET='' ;;
esac
fi


if test "$ENABLED_SP_MATH_ALL" = "yes" && test "$ENABLED_ASM" != "no"; then

  ENABLED_FASTMATH="no"
  ENABLED_SLOWMATH="no"

  AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_MATH_ALL"

  case $host_cpu in
  *x86_64* | *amd64*)
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_X86_64"
    ;;
  *x86*)
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_X86"
    ;;
  *aarch64*)
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_ARM64 -DWOLFSSL_AARCH64_BUILD"
    ;;
  *arm*)
    if test "$host_alias" = "thumb" || test "$ARM_TARGET" = "thumb"; then
      AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_ARM_THUMB"
    else
      if test "$host_alias" = "cortex" || test "$ARM_TARGET" = "cortex"; then
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_ARM_CORTEX_M"
      else
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_ARM32"
      fi
    fi
    ;;
  *ppc64* | *powerpc64*)
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_PPC64"
    ;;
  *ppc* | *powerpc*)
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_PPC"
    ;;
  *mips64*)
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_MIPS64"
    ;;
  *mips*)
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_MIPS"
    ;;
  *riscv32*)
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_RISCV32"
    ;;
  *riscv64*)
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_RISCV64"
    ;;
  *s390x*)
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_S390X"
    ;;
  esac

  if test "$ENABLED_FIPS" != "no" || test "$SELFTEST_VERSION" != "none"; then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_INT_NEGATIVE"
  fi
fi


if test "$ENABLED_SP_ASM" = "yes" && test "$ENABLED_SP" = "yes"; then
  if test "$ENABLED_SP_NONBLOCK" = "yes"; then
    as_fn_error $? "SP non-blocking not supported with sp-asm" "$LINENO" 5
  fi
  if test "$ENABLED_ASM" = "no"; then
    as_fn_error $? "Assembly code turned off" "$LINENO" 5
  fi

  AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_ASM"
  AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_SP_ASM"
  case $host_cpu in
  *aarch64*)
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_ARM64_ASM"
    AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_SP_ARM64_ASM"
    ENABLED_SP_ARM64_ASM=yes
    ;;
  *armv7a*)
    if test "$ENABLED_ARMASM" = "no"; then
      AM_CPPFLAGS="$AM_CPPFLAGS -march=armv7-a -mfpu=neon -DWOLFSSL_ARM_ARCH=7 -marm"
    fi
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_ARM32_ASM"
    AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_SP_ARM32_ASM"
    ENABLED_SP_ARM32_ASM=yes
    ;;
  *cortex* | *armv7m*)
    if test "$ENABLED_ARMASM" = "no"; then
        AM_CPPFLAGS="$AM_CPPFLAGS -march=armv7-r -D__thumb__ -DWOLFSSL_ARM_ARCH=7"
    fi
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_ARM_CORTEX_M_ASM"
    AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_SP_ARM_CORTEX_M_ASM"
    ENABLED_SP_ARM_CORTEX_ASM=yes
    ;;
  *armv6*)
    if test "$ENABLED_ARMASM" = "no"; then
      AM_CPPFLAGS="$AM_CPPFLAGS -march=armv6 -DWOLFSSL_ARM_ARCH=6"
    fi
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_ARM32_ASM"
    AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_SP_ARM32_ASM"
    ENABLED_SP_ARM32_ASM=yes
    ;;
  *armv4*)
    if test "$ENABLED_ARMASM" = "no"; then
      AM_CPPFLAGS="$AM_CPPFLAGS -march=armv4 -DWOLFSSL_ARM_ARCH=4"
    fi
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_ARM32_ASM"
    AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_SP_ARM32_ASM"
    ENABLED_SP_ARM32_ASM=yes
    ;;
  *arm*)
    if test "$host_alias" = "thumb" || test "$ARM_TARGET" = "thumb"; then
      AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_ARM_THUMB_ASM"
      AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_SP_ARM_THUMB_ASM"
      ENABLED_SP_ARM_THUMB_ASM=yes
    else
      AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_ARM32_ASM"
      AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_SP_ARM32_ASM"
      ENABLED_SP_ARM32_ASM=yes
    fi
    ;;
  *x86_64* | *amd64*)
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_X86_64_ASM"
    AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_SP_X86_64_ASM"
    ENABLED_SP_X86_64_ASM=yes
    ;;
  *)
    as_fn_error $? "ASM not available for CPU. Supported CPUs: x86_64, aarch64, arm" "$LINENO" 5
    ;;
  esac

fi


if test "$ENABLED_SP_MATH" = "yes"; then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_MATH"
fi

################################################################################
# End - Single Precision option handling                                       #
################################################################################

# static memory use
@%:@ Check whether --enable-staticmemory was given.
if test ${enable_staticmemory+y}
then :
  enableval=$enable_staticmemory;  ENABLED_STATICMEMORY=$enableval 
else case e in @%:@(
  e)  ENABLED_STATICMEMORY=no 
     ;;
esac
fi


if test "x$ENABLED_STATICMEMORY" = "xyes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_STATIC_MEMORY"

    if test "x$ENABLED_HEAPMATH" = "xyes"
    then
        as_fn_error $? "please use --enable-fastmath if enabling staticmemory." "$LINENO" 5
    fi
    if test "$ENABLED_LOWRESOURCE" = "yes" && test "$ENABLED_RSA" = "no"
    then
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_STATIC_MEMORY_SMALL"
    fi
fi


# microchip api
@%:@ Check whether --enable-mcapi was given.
if test ${enable_mcapi+y}
then :
  enableval=$enable_mcapi;  ENABLED_MCAPI=$enableval 
else case e in @%:@(
  e)  ENABLED_MCAPI=no 
     ;;
esac
fi


if test "$ENABLED_MCAPI" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_MCAPI"
    if test "x$ENABLED_AESCTR" != "xyes"
    then
        # These flags are already implied by --enable-aesctr
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_AES_COUNTER -DWOLFSSL_AES_DIRECT"
    fi
    if test "x$ENABLED_AESGCM" != "xyes" && test "x$ENABLED_AESGCM" != "xno"
    then
        # Use the smaller object size implementation
        ENABLED_AESGCM=yes
    fi
fi

if test "$ENABLED_MCAPI" = "yes" && test "$ENABLED_SHA512" = "no"
then
    as_fn_error $? "please enable sha512 if enabling mcapi." "$LINENO" 5
fi

if test "$ENABLED_MCAPI" = "yes" && test "$ENABLED_ECC" = "no"
then
    as_fn_error $? "please enable ecc if enabling mcapi." "$LINENO" 5
fi

if test "$ENABLED_MCAPI" = "yes" && test "$ENABLED_LIBZ" = "no"
then
    as_fn_error $? "please use --with-libz if enabling mcapi." "$LINENO" 5
fi


# cryptodev is old name, replaced with cryptocb
@%:@ Check whether --enable-cryptodev was given.
if test ${enable_cryptodev+y}
then :
  enableval=$enable_cryptodev;  ENABLED_CRYPTOCB=$enableval 
else case e in @%:@(
  e)  ENABLED_CRYPTOCB=no  ;;
esac
fi


# Support for crypto callbacks
@%:@ Check whether --enable-cryptocb was given.
if test ${enable_cryptocb+y}
then :
  enableval=$enable_cryptocb;  ENABLED_CRYPTOCB=$enableval 
else case e in @%:@(
  e)  ENABLED_CRYPTOCB=no 
     ;;
esac
fi


if test "x$ENABLED_PKCS11" = "xyes" || test "x$ENABLED_WOLFTPM" = "xyes" || test "$ENABLED_CAAM" != "no"
then
    ENABLED_CRYPTOCB=yes
fi
if test "$ENABLED_CRYPTOCB" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLF_CRYPTO_CB"
fi



# Asynchronous Crypto
@%:@ Check whether --enable-asynccrypt was given.
if test ${enable_asynccrypt+y}
then :
  enableval=$enable_asynccrypt;  ENABLED_ASYNCCRYPT=$enableval 
else case e in @%:@(
  e)  ENABLED_ASYNCCRYPT=no 
     ;;
esac
fi


# Asynchronous crypto using software (i.e. not hardware). Required for
# non-blocking crypto with TLS/DTLS.
@%:@ Check whether --enable-asynccrypt-sw was given.
if test ${enable_asynccrypt_sw+y}
then :
  enableval=$enable_asynccrypt_sw;  ENABLED_ASYNCCRYPT_SW=$enableval 
else case e in @%:@(
  e)  ENABLED_ASYNCCRYPT_SW=no 
     ;;
esac
fi

if test "$ENABLED_ASYNCCRYPT_SW" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ASYNC_CRYPT_SW"
    ENABLED_ASYNCCRYPT=yes
fi

if test "$ENABLED_ASYNCCRYPT" = "yes"
then
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: Enabling asynchronous support" >&5
printf "%s\n" "$as_me: Enabling asynchronous support" >&6;}
    if ! test -f ${srcdir}/wolfcrypt/src/async.c || ! test -f ${srcdir}/wolfssl/wolfcrypt/async.h
    then
        as_fn_error $? "--enable-asynccrypt requested, but WOLFSSL_ASYNC_CRYPT source files are missing." "$LINENO" 5
    fi

    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ASYNC_CRYPT -DHAVE_WOLF_EVENT -DHAVE_WOLF_BIGINT -DWOLFSSL_NO_HASH_RAW"

    # If no async backend (hardware or software) has been explicitly enabled,
    # use the software backend for testing.
    if test "x$ENABLED_CAVIUM" != "xyes" && test "x$ENABLED_INTEL_QA" != "xyes" && test "x$ENABLED_CRYPTOCB" != "xyes" && test "x$ENABLED_PKCALLBACKS" != "xyes" && test "x$ENABLED_ASYNCCRYPT_SW" != "xyes"
    then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: Enabling asynchronous software simulator" >&5
printf "%s\n" "$as_me: Enabling asynchronous software simulator" >&6;}
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ASYNC_CRYPT_SW"
        ENABLED_ASYNCCRYPT_SW=yes
    fi
fi

# check for async if using Intel QuckAssist or Cavium
if test "x$ENABLED_INTEL_QA" = "xyes" || test "x$ENABLED_CAVIUM" = "xyes" ; then
    if test "x$ENABLED_ASYNCCRYPT" = "xno" ; then
        as_fn_error $? "Please enable asynchronous support using --enable-asynccrypt" "$LINENO" 5
    fi
fi

# Asynchronous threading (Linux specific)
@%:@ Check whether --enable-asyncthreads was given.
if test ${enable_asyncthreads+y}
then :
  enableval=$enable_asyncthreads;  ENABLED_ASYNCTHREADS=$enableval 
else case e in @%:@(
  e)  ENABLED_ASYNCTHREADS=yes 
     ;;
esac
fi


if test "$ENABLED_ASYNCCRYPT" = "yes" && test "$ENABLED_ASYNCTHREADS" = "yes"
then
    AX_PTHREAD(ENABLED_ASYNCTHREADS=yes,ENABLED_ASYNCTHREADS=no)
else
    ENABLED_ASYNCTHREADS=no
fi

if test "$ENABLED_ASYNCTHREADS" = "yes"
then
    LIB_ADD="-lpthread $LIB_ADD"
    AM_CFLAGS="$AM_CFLAGS -D_GNU_SOURCE"
else
    AM_CFLAGS="$AM_CFLAGS -DWC_NO_ASYNC_THREADING"
fi


# Session Export
@%:@ Check whether --enable-sessionexport was given.
if test ${enable_sessionexport+y}
then :
  enableval=$enable_sessionexport;  ENABLED_SESSIONEXPORT=$enableval 
else case e in @%:@(
  e)  ENABLED_SESSIONEXPORT=no 
     ;;
esac
fi


if test "$ENABLED_SESSIONEXPORT" = "yes" ||
   test "$ENABLED_SESSIONEXPORT" = "nopeer"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SESSION_EXPORT"

    if test "$ENABLED_SESSIONEXPORT" = "nopeer"
    then
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SESSION_EXPORT_NOPEER"
    fi
fi


# AES key wrap
@%:@ Check whether --enable-aeskeywrap was given.
if test ${enable_aeskeywrap+y}
then :
  enableval=$enable_aeskeywrap;  ENABLED_AESKEYWRAP=$enableval 
else case e in @%:@(
  e)  ENABLED_AESKEYWRAP=no 
     ;;
esac
fi


if test "$ENABLED_WPAS" != "no" && test "$ENABLED_FIPS" = "no"
then
    ENABLED_AESKEYWRAP="yes"
fi

if test "$ENABLED_AESKEYWRAP" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_AES_KEYWRAP -DWOLFSSL_AES_DIRECT"
fi


# Old name support for backwards compatibility
@%:@ Check whether --enable-oldnames was given.
if test ${enable_oldnames+y}
then :
  enableval=$enable_oldnames;  ENABLED_OLDNAMES=$enableval 
else case e in @%:@(
  e)  ENABLED_OLDNAMES=yes 
     ;;
esac
fi


if test "x$ENABLED_OLDNAMES" = "xno" && test "x$ENABLED_OPENSSLCOEXIST" = "xno"
then
    AM_CFLAGS="$AM_CFLAGS -DNO_OLD_RNGNAME -DNO_OLD_WC_NAMES -DNO_OLD_SSL_NAMES"
    AM_CFLAGS="$AM_CFLAGS -DNO_OLD_SHA_NAMES -DNO_OLD_MD5_NAME"
fi


# Memory Tests
@%:@ Check whether --enable-memtest was given.
if test ${enable_memtest+y}
then :
  enableval=$enable_memtest;  ENABLED_MEMTEST=$enableval 
else case e in @%:@(
  e)  ENABLED_MEMTEST=no 
     ;;
esac
fi


if test "x$ENABLED_MEMTEST" != "xno"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_TRACK_MEMORY -DWOLFSSL_DEBUG_MEMORY"
fi

if test "x$ENABLED_MEMTEST" = "xfail"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_FORCE_MALLOC_FAIL_TEST"
fi

# Enable hash flags support
# Hash flags are useful for runtime options such as SHA3 KECCAK256 selection
@%:@ Check whether --enable-hashflags was given.
if test ${enable_hashflags+y}
then :
  enableval=$enable_hashflags;  ENABLED_HASHFLAGS=$enableval 
else case e in @%:@(
  e)  ENABLED_HASHFLAGS=no 
     ;;
esac
fi


if test "x$ENABLED_HASHFLAGS" != "xno"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_HASH_FLAGS"
fi

# Support for enabling setting default DH parameters in TLS
@%:@ Check whether --enable-defaultdhparams was given.
if test ${enable_defaultdhparams+y}
then :
  enableval=$enable_defaultdhparams;  ENABLED_DHDEFAULTPARAMS=$enableval 
else case e in @%:@(
  e)  ENABLED_DHDEFAULTPARAMS=yes 
     ;;
esac
fi

if test "x$ENABLED_DH" = "xyes" && test "x$ENABLED_DHDEFAULTPARAMS" = "xyes" && test "x$ENABLED_QT" != "xyes"
then
    ENABLED_DHDEFAULTPARAMS=yes
    AM_CFLAGS="$AM_CFLAGS -DHAVE_DH_DEFAULT_PARAMS"
fi



@%:@ Check whether --with-max-rsa-bits was given.
if test ${with_max_rsa_bits+y}
then :
  withval=$with_max_rsa_bits; WITH_MAX_CLASSIC_ASYM_KEY_BITS=$withval
else case e in @%:@(
  e) WITH_MAX_CLASSIC_ASYM_KEY_BITS="$DEFAULT_MAX_CLASSIC_ASYM_KEY_BITS" ;;
esac
fi


if test -n "$WITH_MAX_CLASSIC_ASYM_KEY_BITS"; then
   if test "$WITH_MAX_CLASSIC_ASYM_KEY_BITS" -lt 1024 -o "$WITH_MAX_CLASSIC_ASYM_KEY_BITS" -gt 16384; then
       as_fn_error $? "--with-max-rsa-bits argument must be between 1024 and 16384 inclusive" "$LINENO" 5
   fi
   if test "$ENABLED_FIPS" = "no"
   then
      AM_CFLAGS="$AM_CFLAGS -DRSA_MAX_SIZE=$WITH_MAX_CLASSIC_ASYM_KEY_BITS"
   fi
   MPI_MAX_KEY_BITS=$WITH_MAX_CLASSIC_ASYM_KEY_BITS
fi


@%:@ Check whether --with-max-ecc-bits was given.
if test ${with_max_ecc_bits+y}
then :
  withval=$with_max_ecc_bits; WITH_MAX_ECC_BITS=$withval
else case e in @%:@(
  e) WITH_MAX_ECC_BITS="$DEFAULT_MAX_ECC_BITS" ;;
esac
fi


if test -n "$WITH_MAX_ECC_BITS"; then
   if test "$WITH_MAX_ECC_BITS" -lt 112 -o "$WITH_MAX_ECC_BITS" -gt 1024; then
       as_fn_error $? "--with-max-ecc-bits argument must be between 112 and 1024 inclusive" "$LINENO" 5
   fi
   AM_CFLAGS="$AM_CFLAGS -DMAX_ECC_BITS=$WITH_MAX_ECC_BITS"
fi

if test -n "$MPI_MAX_KEY_BITS" -o -n "$WITH_MAX_ECC_BITS"; then
   if test -n "$MAX_MPI_KEY_BITS" -a -n "$WITH_MAX_ECC_BITS"; then
       if test "$MAX_MPI_KEY_BITS" -lt "$WITH_MAX_ECC_BITS"; then
           MPI_MAX_KEY_BITS="$WITH_MAX_ECC_BITS"
       fi
   elif test -n "$WITH_MAX_ECC_BITS"; then
       MPI_MAX_KEY_BITS="$WITH_MAX_ECC_BITS"
   fi
   if test "$MPI_MAX_KEY_BITS" -gt 1024; then
       AM_CFLAGS="$AM_CFLAGS -DFP_MAX_BITS=$((MPI_MAX_KEY_BITS * 2)) -DSP_INT_BITS=$MPI_MAX_KEY_BITS"
   fi
fi

@%:@ Check whether --enable-linuxkm-lkcapi-register was given.
if test ${enable_linuxkm_lkcapi_register+y}
then :
  enableval=$enable_linuxkm_lkcapi_register; ENABLED_LINUXKM_LKCAPI_REGISTER=$enableval
else case e in @%:@(
  e) ENABLED_LINUXKM_LKCAPI_REGISTER=none
     ;;
esac
fi

if test "$ENABLED_LINUXKM_LKCAPI_REGISTER" != "none"
then
    AM_CFLAGS="$AM_CFLAGS -DLINUXKM_LKCAPI_REGISTER"

    if test "$ENABLED_AESGCM" != "no" && test "$ENABLED_AESGCM_STREAM" = "no" && test "$ENABLED_ARMASM" = "no" && test "$ENABLED_FIPS" = "no"; then
        ENABLED_AESGCM_STREAM=yes
    fi

    for lkcapi_alg in $(echo "$ENABLED_LINUXKM_LKCAPI_REGISTER" | tr ',' ' ')
    do
        case "$lkcapi_alg" in
        all) AM_CFLAGS="$AM_CFLAGS -DLINUXKM_LKCAPI_REGISTER_ALL"           ;;
        'cbc(aes)') test "$ENABLED_AESCBC" != "no" || as_fn_error $? "linuxkm-lkcapi-register ${lkcapi_alg}: AES-CBC implementation not enabled." "$LINENO" 5
                    AM_CFLAGS="$AM_CFLAGS -DLINUXKM_LKCAPI_REGISTER_AESCBC" ;;
        'cfb(aes)') test "$ENABLED_AESCFB" != "no" || as_fn_error $? "linuxkm-lkcapi-register ${lkcapi_alg}: AES-CFB implementation not enabled." "$LINENO" 5
                    AM_CFLAGS="$AM_CFLAGS -DLINUXKM_LKCAPI_REGISTER_AESCFB" ;;
        'gcm(aes)') test "$ENABLED_AESGCM" != "no" || as_fn_error $? "linuxkm-lkcapi-register ${lkcapi_alg}: AES-GCM implementation not enabled." "$LINENO" 5
                    test "$ENABLED_AESGCM_STREAM" != "no" || as_fn_error $? "linuxkm-lkcapi-register ${lkcapi_alg}: --enable-aesgcm-stream is required for LKCAPI." "$LINENO" 5
                    AM_CFLAGS="$AM_CFLAGS -DLINUXKM_LKCAPI_REGISTER_AESGCM" ;;
        'xts(aes)') test "$ENABLED_AESXTS" != "no" || as_fn_error $? "linuxkm-lkcapi-register ${lkcapi_alg}: AES-XTS implementation not enabled." "$LINENO" 5
                    AM_CFLAGS="$AM_CFLAGS -DLINUXKM_LKCAPI_REGISTER_AESXTS" ;;
        *) as_fn_error $? "Unsupported LKCAPI algorithm \"$lkcapi_alg\"." "$LINENO" 5      ;;
        esac
    done
fi

# Library Suffix
LIBSUFFIX=""

@%:@ Check whether --with-libsuffix was given.
if test ${with_libsuffix+y}
then :
  withval=$with_libsuffix; 
        if test "x$withval" != "xno" ; then
            LIBSUFFIX=$withval
        fi
        if test "x$withval" = "xyes" ; then
            as_fn_error $? "Invalid argument to --with-libsuffix, no suffix given" "$LINENO" 5
        fi
    

fi



@%:@ Check whether --enable-context-extra-user-data was given.
if test ${enable_context_extra_user_data+y}
then :
  enableval=$enable_context_extra_user_data;  ENABLED_EX_DATA=$enableval 
else case e in @%:@(
  e)  ENABLED_EX_DATA=no 
     ;;
esac
fi

case "$ENABLED_EX_DATA" in
no) ;;
yes) AM_CFLAGS="$AM_CFLAGS -DHAVE_EX_DATA"
     ;;
[1-9]|[1-9][0-9]) AM_CFLAGS="$AM_CFLAGS -DHAVE_EX_DATA -DMAX_EX_DATA=$ENABLED_EX_DATA"
       ;;
*) as_fn_error $? "Invalid argument to --enable-context-extra-user-data -- must be yes, no, or a number from 1 to 99" "$LINENO" 5
   ;;
esac

# IoT-Safe support
@%:@ Check whether --enable-iotsafe was given.
if test ${enable_iotsafe+y}
then :
  enableval=$enable_iotsafe;  ENABLED_IOTSAFE=$enableval 
else case e in @%:@(
  e)  ENABLED_IOTSAFE=no 
     ;;
esac
fi


@%:@ Check whether --enable-iotsafe-hwrng was given.
if test ${enable_iotsafe_hwrng+y}
then :
  enableval=$enable_iotsafe_hwrng;  ENABLED_IOTSAFE_HWRNG=$enableval 
else case e in @%:@(
  e)  ENABLED_IOTSAFE_HWRNG=no 
     ;;
esac
fi


# Make clean
@%:@ Check whether --enable-makeclean was given.
if test ${enable_makeclean+y}
then :
  enableval=$enable_makeclean;  ENABLED_MAKECLEAN=$enableval 
else case e in @%:@(
  e)  ENABLED_MAKECLEAN=yes 
     ;;
esac
fi


# User Settings
@%:@ Check whether --enable-usersettings was given.
if test ${enable_usersettings+y}
then :
  enableval=$enable_usersettings;  ENABLED_USERSETTINGS=$enableval 
else case e in @%:@(
  e)  ENABLED_USERSETTINGS=no 
     ;;
esac
fi



# Default optimization CFLAGS enable
@%:@ Check whether --enable-optflags was given.
if test ${enable_optflags+y}
then :
  enableval=$enable_optflags;  ENABLED_OPTFLAGS=$enableval 
else case e in @%:@(
  e)  ENABLED_OPTFLAGS=yes 
     ;;
esac
fi


# Adds functionality to load CA certificates from the operating system.
@%:@ Check whether --enable-sys-ca-certs was given.
if test ${enable_sys_ca_certs+y}
then :
  enableval=$enable_sys_ca_certs;  ENABLED_SYS_CA_CERTS=$enableval 
else case e in @%:@(
  e)  ENABLED_SYS_CA_CERTS=yes 
     ;;
esac
fi


@%:@ Check whether --enable-dual-alg-certs was given.
if test ${enable_dual_alg_certs+y}
then :
  enableval=$enable_dual_alg_certs;  ENABLED_DUAL_ALG_CERTS=$enableval 
else case e in @%:@(
  e)  ENABLED_DUAL_ALG_CERTS=no 
     ;;
esac
fi


# check if should run the trusted peer certs test
# (for now checking both C_FLAGS and C_EXTRA_FLAGS)
case "$CFLAGS $CPPFLAGS" in @%:@(
  *'WOLFSSL_TRUST_PEER_CERT'*) :
    ENABLED_TRUSTED_PEER_CERT=yes ;; @%:@(
  *) :
     ;;
esac

# Allows disabling the OPENSSL_COMPATIBLE_DEFAULTS macro
@%:@ Check whether --enable-openssl-compatible-defaults was given.
if test ${enable_openssl_compatible_defaults+y}
then :
  enableval=$enable_openssl_compatible_defaults;  ENABLED_OPENSSL_COMPATIBLE_DEFAULTS=$enableval 
else case e in @%:@(
  e)  ENABLED_OPENSSL_COMPATIBLE_DEFAULTS=yes 
     ;;
esac
fi


case "$CFLAGS $CPPFLAGS $AM_CFLAGS" in @%:@(
  *'OPENSSL_COMPATIBLE_DEFAULTS'*) :
    FOUND_OPENSSL_COMPATIBLE_DEFAULTS=yes ;; @%:@(
  *) :
     ;;
esac
if test "x$FOUND_OPENSSL_COMPATIBLE_DEFAULTS" = "xyes"
then
    if test "x$ENABLED_OPENSSL_COMPATIBLE_DEFAULTS" = "xyes"
    then
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_TRUST_PEER_CERT"
        AM_CFLAGS="$AM_CFLAGS -DNO_SESSION_CACHE_REF"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_TLS13_NO_PEEK_HANDSHAKE_DONE"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ALT_CERT_CHAINS"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_PRIORITIZE_PSK"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CHECK_ALERT_ON_ERR"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_TICKET_HAVE_ID"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_NO_OCSP_ISSUER_CHECK"
        ENABLED_TRUSTED_PEER_CERT=yes
    else
        CFLAGS=$(printf "%s" "$CFLAGS" | sed 's/-DOPENSSL_COMPATIBLE_DEFAULTS//g')
        CPPFLAGS=$(printf "%s" "$CPPFLAGS" | sed 's/-DOPENSSL_COMPATIBLE_DEFAULTS//g')
        AM_CFLAGS=$(printf "%s" "$AM_CFLAGS" | sed 's/-DOPENSSL_COMPATIBLE_DEFAULTS//g')
    fi
fi

# determine if we have key validation mechanism
if test "x$ENABLED_ECC" != "xno" || test "x$ENABLED_RSA" = "xyes"
then
    if test "x$ENABLED_ASN" = "xyes"
    then
        ENABLED_PKI="yes"
    fi
fi

# When building for wolfRand, strip out all options to disable everything.
if test "x$ENABLED_FIPS" = "xyes" && test "x$FIPS_VERSION" = "xrand"
then :
  NEW_AM_CFLAGS="-DNO_AES -DNO_DH -DNO_ASN -DNO_RSA -DNO_SHA -DNO_MD5 -DNO_BIG_INT"
for v in $AM_CFLAGS
do
  case $v in
-DHAVE_FFDHE_2048 | -DTFM_TIMING_RESISTANT | -DECC_TIMING_RESISTANT | \
-DWC_RSA_BLINDING | -DHAVE_AESGCM | -DWOLFSSL_SHA512 | -DWOLFSSL_SHA384 | \
-DHAVE_ECC | -DTFM_ECC256 | -DECC_SHAMIR | -DHAVE_TLS_EXTENSIONS | \
-DHAVE_SUPPORTED_CURVES | -DHAVE_EXTENDED_MASTER | -DUSE_FAST_MATH | \
-DWOLFSSL_SHA3)
    printf "%s\n" "ignoring $v"
    ;;
  *)
    NEW_AM_CFLAGS="$NEW_AM_CFLAGS $v"
    ;;
  esac
done
AM_CFLAGS=$NEW_AM_CFLAGS
fi

case $host_cpu in
  *arm*)
    if test "$host_alias" = "thumb" || test "$ARM_TARGET" = "thumb"; then
      AM_CFLAGS="$AM_CFLAGS -mthumb -march=armv6"
    else
      if test "$host_alias" = "cortex" || test "$ARM_TARGET" = "cortex"; then
        AM_CFLAGS="$AM_CFLAGS -mcpu=cortex-r5"
      fi
    fi
    ;;
esac

if test "$ENABLED_LOWRESOURCE" = "yes" && test "$ENABLED_ECC" = "yes" && (test "$ENABLED_RSA" = "yes" || test "$ENABLED_DH" = "yes") && (test "$ENABLED_SP_MATH" = "yes" || test "$ENABLED_SP_MATH_ALL" = "yes")
then
    AM_CFLAGS="$AM_CFLAGS -DALT_ECC_SIZE"
fi

################################################################################
# Update ENABLE_* variables                                                    #
################################################################################

if test "x$ENABLED_SYS_CA_CERTS" = "xyes"
then
    if test "x$ENABLED_FILESYSTEM" = "xno"
    then
        ENABLED_SYS_CA_CERTS="no"
    elif test "x$ENABLED_CERTS" = "xno"
    then
        ENABLED_SYS_CA_CERTS="no"
    fi

    case $host_os in
        *darwin*)
            # Headers used for MacOS default system CA certs behavior. Only MacOS SDK will have this header
            ac_fn_c_check_header_compile "$LINENO" "Security/SecTrustSettings.h" "ac_cv_header_Security_SecTrustSettings_h" "$ac_includes_default"
if test "x$ac_cv_header_Security_SecTrustSettings_h" = xyes
then :
  printf "%s\n" "@%:@define HAVE_SECURITY_SECTRUSTSETTINGS_H 1" >>confdefs.h

fi

            # Headers used for Apple native cert validation. All device SDKs should have these headers
            ac_fn_c_check_header_compile "$LINENO" "Security/SecCertificate.h" "ac_cv_header_Security_SecCertificate_h" "$ac_includes_default"
if test "x$ac_cv_header_Security_SecCertificate_h" = xyes
then :
  printf "%s\n" "@%:@define HAVE_SECURITY_SECCERTIFICATE_H 1" >>confdefs.h

fi

            ac_fn_c_check_header_compile "$LINENO" "Security/SecTrust.h" "ac_cv_header_Security_SecTrust_h" "$ac_includes_default"
if test "x$ac_cv_header_Security_SecTrust_h" = xyes
then :
  printf "%s\n" "@%:@define HAVE_SECURITY_SECTRUST_H 1" >>confdefs.h

fi

            ac_fn_c_check_header_compile "$LINENO" "Security/SecPolicy.h" "ac_cv_header_Security_SecPolicy_h" "$ac_includes_default"
if test "x$ac_cv_header_Security_SecPolicy_h" = xyes
then :
  printf "%s\n" "@%:@define HAVE_SECURITY_SECPOLICY_H 1" >>confdefs.h

fi

            # Either Security/SecTrustSettings (for MacOS cert loading), or the
            # trio of Security/SecCertificate.h, Security/SecTrust.h, and
            # Security/SecPolicy.h (for native trust APIs on other apple devices)
            # must be present. Default to SecTrustSettings method on MacOS.
            if test "$ac_cv_header_Security_SecTrustSettings_h" = "yes" \
                   || (test "$ac_cv_header_Security_SecCertificate_h" = "yes" \
                       && test "$ac_cv_header_Security_SecTrust_h" = "yes" \
                       && test "$ac_cv_header_Security_SecPolicy_h" = "yes")
then :
  
                LDFLAGS="$LDFLAGS -framework CoreFoundation -framework Security"
                if test "$ac_cv_header_Security_SecTrustSettings_h" != "yes"
then :
  
                  AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_APPLE_NATIVE_CERT_VALIDATION"
                
fi
            
else case e in @%:@(
  e) 
              as_fn_error $? "Unable to find Apple Security.framework headers" "$LINENO" 5
             ;;
esac
fi
            ;;
    esac
fi

if test "x$ENABLED_WOLFCLU" = "xyes"
then
    if test "x$ENABLED_CERTGEN" = "xno"
    then
        ENABLED_CERTGEN="yes"
    fi
    if test "x$ENABLED_CERTREQ" = "xno"
    then
        ENABLED_CERTREQ="yes"
    fi
    if test "x$ENABLED_CERTEXT" = "xno"
    then
        ENABLED_CERTEXT="yes"
    fi

    # Requires md5
    if test "$ENABLED_MD5" = "no"
    then
        ENABLED_MD5="yes"
    fi

    # Requires aesctr
    if test "x$ENABLED_AESCTR" = "xno"
    then
        ENABLED_AESCTR="yes"
    fi

    # Uses key generation
    if test "x$ENABLED_KEYGEN" = "xno"
    then
        ENABLED_KEYGEN="yes"
    fi

    # Uses functions guarded by opensslall
    if test "$ENABLED_OPENSSLALL" = "no"
    then
        ENABLED_OPENSSLALL="yes"
    fi

    # Has option for signing with ED25519
    if test "$ENABLED_ED25519" = "no"
    then
        ENABLED_ED25519=yes
        ENABLED_FEMATH=yes
        ENABLED_GEMATH=yes
        ENABLED_CERTS=yes
    fi

    # Has sha512 hashing
    if test "$ENABLED_SHA512" = "no"
    then
        ENABLED_SHA512="yes"
    fi

    # Has support for DES3 encrypt/decrypt
    if test "$ENABLED_DES3" = "no"
    then
        ENABLED_DES3="yes"
    fi

    # Uses alt name
    ENABLED_ALTNAMES="yes"

    AM_CFLAGS="$AM_CFLAGS -DHAVE_OID_ENCODING -DWOLFSSL_NO_ASN_STRICT"

fi

if test "$ENABLED_STRONGSWAN" = "yes"; then
    if test "$ENABLED_CERTREQ" = "no"; then
        ENABLED_CERTREQ="yes"
    fi

    if test "$ENABLED_OCSP" = "no"; then
        ENABLED_OCSP="yes"
    fi
fi

if test "x$ENABLED_MCAPI" = "xyes"
then :
  if test "x$ENABLED_DES3" = "xno"
then :
  ENABLED_DES3="yes"
fi
fi

if test "$ENABLED_OPENSSH" = "yes" || test "$ENABLED_NGINX" = "yes" || \
   test "$ENABLED_SIGNAL" = "yes" || test "$ENABLED_WPAS" = "yes" || \
   test "$ENABLED_FORTRESS" = "yes" || test "$ENABLED_BUMP" = "yes" || \
   test "$ENABLED_OPENSSLALL" = "yes" || \
   test "$ENABLED_LIBWEBSOCKETS" = "yes" || \
   test "x$ENABLED_LIGHTY" = "xyes" || test "$ENABLED_LIBSSH2" = "yes" || \
   test "x$ENABLED_NTP" = "xyes" || test "$ENABLED_RSYSLOG" = "yes" || \
   test "$ENABLED_OPENLDAP" = "yes" || test "$ENABLED_HITCH" = "yes"
then
    ENABLED_OPENSSLEXTRA="yes"
fi

if test "$ENABLED_ED25519" != "no" && test "$ENABLED_32BIT" = "no"
then
    if test "$ENABLED_ED25519" = "small" || test "$ENABLED_LOWRESOURCE" = "yes"
    then
        ENABLED_ED25519_SMALL=yes
        ENABLED_CURVE25519_SMALL=yes
        ENABLED_ED25519=yes
    fi

    ENABLED_FEMATH=yes
    ENABLED_GEMATH=yes
    ENABLED_CERTS=yes
fi

if test "$ENABLED_ED25519" != "no" || test "$ENABLED_ED448" != "no"
then
    ENABLED_CERTS=yes
fi

if test "$ENABLED_MD5" = "yes"
then
    # turn off MD5 if leanpsk or leantls on
    if test "$ENABLED_LEANPSK" = "yes" || test "$ENABLED_LEANTLS" = "yes"
    then
        ENABLED_MD5=no
    fi
fi

if test "x$ENABLED_LEANPSK" = "xyes" || test "x$ENABLED_CERTS" = "xno" || \
   test "x$ENABLED_ASN" = "xno"
then
   ENABLED_CERTS=no
   ENABLED_ASN=no
fi

################################################################################
# Check for build-type conflicts                                               #
################################################################################

if test "x$ENABLED_MAXSTRENGTH" = "xyes" && \
       test "x$ENABLED_LEANPSK" = "xyes"
then :
  as_fn_error $? "Cannot use Max Strength and Lean PSK at the same time." "$LINENO" 5
fi

if test "x$ENABLED_OCSP" = "xyes" && \
       test "x$ENABLED_ASN" = "xno"
then :
  as_fn_error $? "please enable asn if enabling ocsp." "$LINENO" 5
fi

if test "x$ENABLED_SMIME" = "xyes" && \
       test "x$ENABLED_ASN" = "xno"
then :
  as_fn_error $? "please enable asn if enabling S/MIME." "$LINENO" 5
fi

if test "x$ENABLED_OCSP" = "xyes" && \
       test "x$ENABLED_RSA" = "xno" && \
       test "x$ENABLED_ECC" = "xno"
then :
  as_fn_error $? "please enable rsa or ecc if enabling ocsp." "$LINENO" 5
fi

# Sync Intel QA and Sync Cavium Octeon require the crypto callback
if test "x$ENABLED_INTEL_QA_SYNC" = "xyes" || test "x$ENABLED_OCTEON_SYNC" = "xyes"
then :
  if test "x$ENABLED_CRYPTOCB" = "xno"
then :
  as_fn_error $? "please enable the crypto callback support using --enable-cryptocb" "$LINENO" 5
fi
fi

# checks for pkcs7 needed enables
if test "x$ENABLED_PKCS7" = "xyes" && \
       test "x$ENABLED_RSA" = "xno" && \
       test "x$ENABLED_ECC" = "xno"
then :
  as_fn_error $? "please enable ecc or rsa if enabling pkcs7." "$LINENO" 5
fi

if test "x$ENABLED_PKCS7" = "xyes" && \
       test "x$ENABLED_SHA" = "xno" && \
       test "x$ENABLED_SHA256" = "xno"
then :
  as_fn_error $? "please enable sha or sha256 if enabling pkcs7." "$LINENO" 5
fi

if test "x$ENABLED_PKCS7" = "xyes" && \
       test "x$ENABLED_AES" = "xno" && \
       test "x$ENABLED_DES3" = "xno"
then :
  as_fn_error $? "please enable either AES or 3DES if enabling pkcs7." "$LINENO" 5
fi

if test "x$ENABLED_WOLFSCEP" = "xyes" && \
       test "x$ENABLED_AES" = "xno" && \
       test "x$ENABLED_DES3" = "xno"
then :
  as_fn_error $? "please enable either AES or 3DES if enabling scep." "$LINENO" 5
fi

if test "x$ENABLED_LEANTLS" = "xyes" && \
       test "x$ENABLED_ECC" = "xno"
then :
  as_fn_error $? "please enable ecc if enabling leantls." "$LINENO" 5
fi

if test "x$ENABLED_SNIFFER" = "xyes" && \
       test "x$ENABLED_RSA" = "xno" && \
       test "x$ENABLED_ECC" = "xno" && \
       test "x$ENABLED_CURVE25519" = "xno"
then :
  as_fn_error $? "please enable ecc, rsa or curve25519 if enabling sniffer." "$LINENO" 5
fi

# Lean TLS forces off prereqs of SCEP.
if test "x$ENABLED_SCEP" = "xyes" && \
       test "x$ENABLED_LEANTLS" = "xyes"
then :
  as_fn_error $? "Cannot use SCEP and Lean TLS at the same time." "$LINENO" 5
fi

# CMAC currently requires AES.
if test "x$ENABLED_CMAC" = "xyes" && \
       test "x$ENABLED_AES" = "xno"
then :
  as_fn_error $? "cannot use CMAC without AES." "$LINENO" 5
fi

# certreq requires certgen
if test "x$ENABLED_CERT_REQ" = "xyes" && \
       test "x$ENABLED_CERT_GEN" = "xno"
then :
  as_fn_error $? "cannot use certreq without certgen." "$LINENO" 5
fi

# ed25519 requires sha512
if test "x$ENABLED_ED25519" = "xyes" && \
       test "x$ENABLED_SHA512" = "xno" && \
       test "x$ENABLED_32BIT" = "xno"
then :
  as_fn_error $? "cannot enable ed25519 without enabling sha512." "$LINENO" 5
fi

# ed25519 stream requires ed25519
if test "x$ENABLED_ED25519_STREAM" = "xyes" && \
       test "x$ENABLED_ED25519" = "xno"
then :
  as_fn_error $? "ED25519 verify streaming enabled but ED25519 is disabled" "$LINENO" 5
fi

# Ensure only one size is enabled
if test "x$ENABLED_64BIT" = "xyes" && \
       test "x$ENABLED_32BIT" = "xyes"
then :
  as_fn_error $? "cannot specify 64-bit build and 32-bit build." "$LINENO" 5
fi
if test "x$ENABLED_64BIT" = "xyes" && \
       test "x$ENABLED_16BIT" = "xyes"
then :
  as_fn_error $? "cannot specify 64-bit build and 16-bit build." "$LINENO" 5
fi
if test "x$ENABLED_32BIT" = "xyes" && \
       test "x$ENABLED_16BIT" = "xyes"
then :
  as_fn_error $? "cannot specify 32-bit build and 16-bit build." "$LINENO" 5
fi

# 16-bit build not supported with SP
if test "x$ENABLED_16BIT" = "xyes" && \
       test "x$ENABLED_SP" = "xyes"
then :
  as_fn_error $? "16-bit build not available with SP." "$LINENO" 5
fi

################################################################################
# Update CFLAGS based on options                                               #
################################################################################
if test "x$ENABLED_SP_MATH_ALL" = "xno" && test "x$ENABLED_FASTMATH" = "xno" &&
    test "x$ENABLED_HEAPMATH" = "xno"
then :
  AM_CFLAGS="$AM_CFLAGS -DNO_BIG_INT"
fi

if test "x$ENABLED_CERTS" = "xno"
then :
  AM_CFLAGS="$AM_CFLAGS -DNO_CERTS"
fi

if test "x$ENABLED_ASN" = "xno"
then :
  AM_CFLAGS="$AM_CFLAGS -DNO_ASN"
fi

if test "x$ENABLED_SYS_CA_CERTS" = "xyes"
then :
  AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SYS_CA_CERTS"
fi

if test "x$ENABLED_DUAL_ALG_CERTS" = "xyes"
then :
  AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DUAL_ALG_CERTS"
fi

if test "x$ENABLED_ALTNAMES" = "xyes"
then :
  AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ALT_NAMES"
fi

if test "x$ENABLED_KEYGEN" = "xyes"
then :
  AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_KEY_GEN"
fi

if test "x$ENABLED_CERTREQ" = "xyes"
then :
  AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CERT_REQ"
fi

if test "x$ENABLED_CERTGEN" = "xyes"
then :
  AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CERT_GEN"
fi

if test "x$ENABLED_CERTEXT" = "xyes"
then :
  AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CERT_EXT"
fi

if test "x$ENABLED_ED25519" = "xyes" && test "x$ENABLED_32BIT" = "xno"
then :
  AM_CFLAGS="$AM_CFLAGS -DHAVE_ED25519"
fi
if test "x$ENABLED_ED25519" = "xyes" && test "x$ENABLED_32BIT" = "xno"
then :
  AM_CCASFLAGS="$AM_CCASFLAGS -DHAVE_ED25519"
fi

if test "x$ENABLED_ED25519_SMALL" = "xyes"
then :
  AM_CFLAGS="$AM_CFLAGS -DED25519_SMALL"
fi

if test "x$ENABLED_OCSP" = "xyes"
then :
  AM_CFLAGS="$AM_CFLAGS -DHAVE_OCSP"
fi

if test "x$ENABLED_STRONGSWAN" = "xyes"
then :
  AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DES_ECB -DWOLFSSL_LOG_PRINTF -DWOLFSSL_PUBLIC_MP -DHAVE_EX_DATA"
fi

if test "x$ENABLED_OPENLDAP" = "xyes"
then :
  AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SIGNER_DER_CERT"
fi

if test "$ENABLED_ED25519_STREAM" != "no" && test "$ENABLED_SE050" != "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ED25519_STREAMING_VERIFY"
    AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_ED25519_STREAMING_VERIFY"
fi

if test "$ENABLED_ERROR_QUEUE" = "no" || test "$ENABLED_JNI" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DNO_ERROR_QUEUE"
fi

if test "x$ENABLED_OPENSSLALL" = "xyes"
then :
  AM_CFLAGS="$AM_CFLAGS -DOPENSSL_ALL -DWOLFSSL_EITHER_SIDE -DWC_RSA_NO_PADDING -DWC_RSA_PSS -DWOLFSSL_PSS_LONG_SALT -DWOLFSSL_TICKET_HAVE_ID -DWOLFSSL_ERROR_CODE_OPENSSL -DWOLFSSL_CERT_NAME_ALL"
fi

if test "x$ENABLED_AESSIV" = "xyes"
then :
  AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_AES_SIV"
fi

if test "x$ENABLED_AESCTR" = "xyes" && test "x$ENABLED_FORTRESS" != "xyes"
then :
  AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_AES_COUNTER -DWOLFSSL_AES_DIRECT"
fi

if test "$ENABLED_MD5" = "no"
then
    AM_CFLAGS="$AM_CFLAGS -DNO_MD5 -DNO_OLD_TLS"
fi

if test "x$ENABLED_AESBS" = "xyes" && test "x$ENABLED_ARMASM" = "xyes"
then :
  AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_AES_DIRECT"
fi

if test "$ENABLED_HMAC" = "no"
then
    AM_CFLAGS="$AM_CFLAGS -DNO_HMAC"
fi

if test "$ENABLED_OPENSSLEXTRA" = "yes" && test "x$ENABLED_OPENSSLCOEXIST" = "xno"
then
  AM_CFLAGS="$AM_CFLAGS -DOPENSSL_EXTRA"
fi

if test "$ENABLED_OPENSSLEXTRA" = "x509small"
then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: Enabling only a subset of X509 opensslextra" >&5
printf "%s\n" "$as_me: Enabling only a subset of X509 opensslextra" >&6;}
  AM_CFLAGS="$AM_CFLAGS -DOPENSSL_EXTRA_X509_SMALL"
fi

if test "$ENABLED_WOLFSCEP" = "yes"
then
    # Enable prereqs if not already enabled
    if test "x$ENABLED_KEYGEN" = "xno"
    then
        ENABLED_KEYGEN="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_KEY_GEN"
    fi
    if test "x$ENABLED_CERTGEN" = "xno"
    then
        ENABLED_CERTGEN="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CERT_GEN"
    fi
    if test "x$ENABLED_CERTREQ" = "xno"
    then
        ENABLED_CERTREQ="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CERT_REQ"
    fi
    if test "x$ENABLED_CERTEXT" = "xno"
    then
        ENABLED_CERTEXT="yes"
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_CERT_EXT"
    fi
    if test "x$ENABLED_PKCS7" = "xno"
    then
        ENABLED_PKCS7="yes"
    fi
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_HAVE_WOLFSCEP"
fi

if test "x$ENABLED_PKCS7" = "xyes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_PKCS7"
    # Enable prereqs if not already enabled
    if test "x$ENABLED_AESKEYWRAP" = "xno"
    then
        ENABLED_AESKEYWRAP="yes"
        AM_CFLAGS="$AM_CFLAGS -DHAVE_AES_KEYWRAP -DWOLFSSL_AES_DIRECT"
    fi
    if test "x$ENABLED_X963KDF" = "xno" && test "$ENABLED_ECC" != "no"
    then
        ENABLED_X963KDF="yes"
        AM_CFLAGS="$AM_CFLAGS -DHAVE_X963_KDF"
    fi
fi

if test "x$ENABLED_DES3" = "xno"
then
    AM_CFLAGS="$AM_CFLAGS -DNO_DES3"
else
    # turn off DES3 if leanpsk or leantls on
    if test "$ENABLED_LEANPSK" = "yes" || test "$ENABLED_LEANTLS" = "yes"
    then
        AM_CFLAGS="$AM_CFLAGS -DNO_DES3"
        ENABLED_DES3=no
    fi
fi

if test "$ENABLED_AESGCM" != "no"
then
    if test "$ENABLED_AESGCM" = "word"
    then
        ENABLED_AESGCM=yes
    fi

    if test "$ENABLED_AESGCM" = "word32"
    then
        AM_CFLAGS="$AM_CFLAGS -DGCM_WORD32"
        ENABLED_AESGCM=yes
    fi

    if test "$ENABLED_AESGCM" = "small" || test "$ENABLED_LOWRESOURCE" = "yes"
    then
        AM_CFLAGS="$AM_CFLAGS -DGCM_SMALL"
        ENABLED_AESGCM=yes
    fi

    if test "$ENABLED_AESGCM" = "table"
    then
        AM_CFLAGS="$AM_CFLAGS -DGCM_TABLE"
        ENABLED_AESGCM=yes
    fi

    if test "$ENABLED_AESGCM" = "4bit"
    then
        AM_CFLAGS="$AM_CFLAGS -DGCM_TABLE_4BIT"
        ENABLED_AESGCM=yes
    fi

    AM_CFLAGS="$AM_CFLAGS -DHAVE_AESGCM"
fi
if test "$ENABLED_AESGCM_STREAM" != "no"
then
    if test "$ENABLED_AESGCM" = "no"
    then
        as_fn_error $? "AES-GCM streaming enabled but AES-GCM is disabled" "$LINENO" 5
    else
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_AESGCM_STREAM"
        AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_AESGCM_STREAM"
    fi
fi

if test "$ENABLED_IOTSAFE" != "no"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_IOTSAFE"
    ENABLED_IOTSAFE=yes
fi

if test "$ENABLED_IOTSAFE_HWRNG" != "no"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_IOTSAFE_HWRNG"
    ENABLED_IOTSAFE_HWRNG=yes
fi

if test "x$ENABLED_WOLFENGINE" = "xyes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_AES_ECB"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_AES_DIRECT"
    AM_CFLAGS="$AM_CFLAGS -DWC_RSA_NO_PADDING"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_PUBLIC_MP"
    AM_CFLAGS="$AM_CFLAGS -DECC_MIN_KEY_SZ=192"
fi

if test "$ENABLED_WOLFENGINE" = "yes" && test "$ENABLED_FIPS" != "no"
then
    AM_CFLAGS="$AM_CFLAGS -DSha3=wc_Sha3"
    AM_CFLAGS="$AM_CFLAGS -DNO_OLD_SHA256_NAMES"
    AM_CFLAGS="$AM_CFLAGS -DNO_OLD_MD5_NAME"
fi

if test "$ENABLED_WOLFENGINE" = "yes" && test "$FIPS_VERSION" != "v2"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_PSS_LONG_SALT"
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_PSS_SALT_LEN_DISCOVER"
fi

if test "x$ENABLED_MAXSTRENGTH" = "xyes"
then :
  AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_MAX_STRENGTH -DWOLFSSL_CIPHER_TEXT_CHECK"
fi

if test "x$ENABLED_MAXSTRENGTH" = "xyes" && \
       test "x$ENABLED_OLD_TLS" = "xyes"
then :
  AM_CFLAGS="$AM_CFLAGS -DNO_OLD_TLS"
       ENABLED_OLD_TLS=no
fi

if test "x$ENABLED_MAXSTRENGTH" = "xyes" && \
       test "x$ENABLED_SSLV3" = "xyes"
then :
  as_fn_error $? "Cannot use Max Strength and SSLv3 at the same time." "$LINENO" 5
fi

if test "x$ENABLED_SCTP" = "xyes"
then :
  AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SCTP"
fi

if test "x$ENABLED_SRTP" = "xyes"
then :
  AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SRTP"
fi

if test "x$ENABLED_MCAST" = "xyes"
then :
  AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_MULTICAST"
fi

# WOLFSSL_AFALG does not support SHA224 yet
if (test "x$ENABLED_AFALG" = "xyes") && (test "x$ENABLED_SHA224" = "xyes")
then :
  as_fn_error $? "--enable-sha224 with --enable-afalg not yet supported" "$LINENO" 5
fi

# WOLFSSL_DEVCRYPTO does not support SHA224 yet
if (test "x$ENABLED_DEVCRYPTO" = "xyes") && \
       (test "x$ENABLED_CAAM" = "xno") && \
       (test "x$ENABLED_SHA224" = "xyes")
then :
  as_fn_error $? "--enable-sha224 with --enable-devcrypto not yet supported" "$LINENO" 5
fi

# SCTP, Multicast, SRTP, and strongSwan require DTLS
if (test "x$ENABLED_DTLS" = "xno") && \
        (test "x$ENABLED_SCTP" = "xyes" || test "x$ENABLED_MCAST" = "xyes" || \
         test "x$ENABLED_SRTP" = "xyes" || \
         test "x$ENABLED_STRONGSWAN" = "xyes")
then :
  AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_DTLS"
       ENABLED_DTLS=yes
fi

# Multicast requires the null cipher
if test "x$ENABLED_NULL_CIPHER" = "xno" && \
        test "x$ENABLED_MCAST" = "xyes"
then :
  AM_CFLAGS="$AM_CFLAGS -DHAVE_NULL_CIPHER"
       ENABLED_NULL_CIPHER=yes
fi

# wolfSSH and WPA Supplicant both need Public MP, only enable once.
# This will let you know if you enabled wolfSSH but have any of the prereqs
# disabled. Some of these options, disabling them adds things to the FLAGS and
# you need to check and add items in two places depending on the option.
if test "x$ENABLED_WOLFSSH" = "xyes"
then :
  if test "x$ENABLED_WPAS" = "xno"
then :
  AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_PUBLIC_MP"
fi
fi

if test "x$ENABLED_OPENSSLCOEXIST" = "xyes"; then
    if test "x$ENABLED_OPENSSLALL" = "xyes"; then
        as_fn_error $? "Cannot use --enable-opensslcoexist with --enable-opensslall" "$LINENO" 5
    fi
    if test "x$ENABLED_OPENSSLEXTRA" = "xyes"; then
        as_fn_error $? "Cannot use --enable-opensslcoexist with --enable-opensslextra" "$LINENO" 5
    fi
fi

if test "$ENABLED_WOLFSSH" = "yes" && test "$ENABLED_HMAC" = "no"
then
    as_fn_error $? "WOLFSSH requires HMAC." "$LINENO" 5
fi

if test "x$ENABLED_WOLFSSH" = "xyes"
then :
  AM_CPPFLAGS="$AM_CPPFLAGS -DWOLFSSL_WOLFSSH"
fi

# only allow secure renegotiation info with TLSV12 and ASN
if test "x$ENABLED_ASN" = "xno" || \
    test "x$ENABLED_TLSV12" = "xno" || \
    test "x$ENABLED_RENEGOTIATION_INDICATION" = "xyes"; then
    ENABLED_SECURE_RENEGOTIATION_INFO="no"
fi

if test "x$ENABLED_SECURE_RENEGOTIATION_INFO" = "xyes"; then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_TLS_EXTENSIONS -DHAVE_SERVER_RENEGOTIATION_INFO"
fi


if test "$ENABLED_COMPKEY" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_COMP_KEY"
fi


# Deprecated Algorithm Handling
if test "$ENABLED_ARC4" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_ALLOW_RC4"
fi


# Link with the math library iff needed.
if test "$ENABLED_DH" != "no" && test "$ENABLED_DH" != "const"; then
   LT_LIB_M
fi


################################################################################

# USER SETTINGS
if test "x$ENABLED_USERSETTINGS" = "xyes"
then
    # Replace all options and just use WOLFSSL_USER_SETTINGS and
    # WOLFSSL_USER_SETTINGS_ASM.
    AM_CFLAGS="-DWOLFSSL_USER_SETTINGS -DWOLFSSL_USER_SETTINGS_ASM"
    AM_CCASFLAGS="$AM_CCASFLAGS -DWOLFSSL_USER_SETTINGS -DWOLFSSL_USER_SETTINGS_ASM"

    # Generate assembly-safe user_settings_asm.h (just preprocessor directives
    # from user_settings.h).
    $srcdir/scripts/user_settings_asm.sh "$CPPFLAGS $CFLAGS $CXXFLAGS"
    if test $? -ne 0; then
        as_fn_error $? "$srcdir/scripts/user_settings_asm.sh failed." "$LINENO" 5
    fi
fi

# OPTIMIZE FLAGS
# For distro disable custom build options that interfere with symbol generation
if test "$GCC" = "yes" && test "$ENABLED_DISTRO" = "no"
then
    AM_CFLAGS="$AM_CFLAGS -Wall -Wno-unused"
    if test "$ax_enable_debug" = "no"
    then
    if test "x$ENABLED_OPTFLAGS" = "xyes"
then :
  
        if test "$ENABLED_FASTMATH" = "yes"
        then
            AM_CFLAGS="$AM_CFLAGS $OPTIMIZE_FAST_CFLAGS"
            if test "$ENABLED_FASTHUGEMATH" = "yes"
            then
                AM_CFLAGS="$AM_CFLAGS $OPTIMIZE_HUGE_CFLAGS"
            fi
        else
            if (test "$ENABLED_SP" = "yes" || test "$ENABLED_SP_MATH_ALL" = "yes") && test "$ENABLED_SP_SMALL" = "no"
            then
                AM_CFLAGS="$AM_CFLAGS $OPTIMIZE_FAST_CFLAGS"
                if test "$ENABLED_FASTHUGEMATH" = "yes"
                then
                    AM_CFLAGS="$AM_CFLAGS $OPTIMIZE_HUGE_CFLAGS"
                    AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_SP_INT_LARGE_COMBA"
                fi
            else
                AM_CFLAGS="$AM_CFLAGS $OPTIMIZE_CFLAGS"
            fi
        fi
    
fi
    fi
fi

# ICC command line warning for non supported warning flags
if test "$CC" = "icc"
then
    AM_CFLAGS="$AM_CFLAGS -wd10006"
fi

# Expose HAVE___UINT128_T to options flags"
if test "$ac_cv_type___uint128_t" = "yes"
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE___UINT128_T=1"
fi

LIB_SOCKET_NSL
AX_HARDEN_CC_COMPILER_FLAGS

case $host_os in
    mingw*)
        # if mingw then link to ws2_32 for sockets, and crypt32
        LDFLAGS="$LDFLAGS -lws2_32"
        LIB_ADD="$LIB_ADD -lcrypt32"
        if test "$enable_shared" = "yes"
        then
            
printf "%s\n" "@%:@define WOLFSSL_DLL 1" >>confdefs.h

            if test "$enable_static" = "yes"
            then
                MINGW_LIB_WARNING="yes"
            fi
        fi ;;
esac

if test "$enable_shared" = "no"; then
    if test "$enable_static" = "yes"; then
        AM_CFLAGS="$AM_CFLAGS -DWOLFSSL_TEST_STATIC_BUILD"
    fi
fi

if test "x$ENABLED_LINUXKM" = "xyes"; then
    AX_SIMD_CC_COMPILER_FLAGS
    
    
    
    
    
    
    
    
    
    

    if test "$ENABLED_OPENSSLEXTRA" != "no" && test "$ENABLED_CRYPTONLY" = "no"; then
        as_fn_error $? "--enable-opensslextra without --enable-cryptonly is incompatible with --enable-linuxkm." "$LINENO" 5
    fi
    if test "$ENABLED_FILESYSTEM" = "yes"; then
        as_fn_error $? "--enable-filesystem is incompatible with --enable-linuxkm." "$LINENO" 5
    fi
    if test "$ENABLED_AFALG" = "yes"; then
        as_fn_error $? "--enable-afalg is incompatible with --enable-linuxkm." "$LINENO" 5
    fi
    if test "$ENABLED_DEVCRYPTO" = "yes"; then
        as_fn_error $? "--enable-devcrypto is incompatible with --enable-linuxkm." "$LINENO" 5
    fi
    if test "$ENABLED_PKCS11" = "yes"; then
        as_fn_error $? "--enable-pkcs11 is incompatible with --enable-linuxkm." "$LINENO" 5
    fi
    if test "$ENABLED_JNI" = "yes"; then
        as_fn_error $? "--enable-jni is incompatible with --enable-linuxkm." "$LINENO" 5
    fi
    if test "$ENABLED_16BIT" = "yes"; then
        as_fn_error $? "--enable-16bit is incompatible with --enable-linuxkm." "$LINENO" 5
    fi
    if test "$ENABLED_SINGLETHREADED" = "yes"; then
        as_fn_error $? "--enable-singlethreaded is incompatible with --enable-linuxkm." "$LINENO" 5
    fi
    if test "$ENABLED_VALGRIND" = "yes"; then
        as_fn_error $? "--enable-valgrind is incompatible with --enable-linuxkm." "$LINENO" 5
    fi
    if test "$ENABLED_FASTMATH" = "yes"; then
        as_fn_error $? "--enable-fastmath is incompatible with --enable-linuxkm (exceeds stack limit)." "$LINENO" 5
    fi
    if test "$ENABLED_LIBZ_RSA" = "yes"; then
        as_fn_error $? "--with-libz is incompatible with --enable-linuxkm." "$LINENO" 5
    fi
    if test "$ENABLED_IOPOOL" = "yes"; then
        as_fn_error $? "--enable-iopool is incompatible with --enable-linuxkm." "$LINENO" 5
    fi
    if test "$ENABLED_EXAMPLES" = "yes"; then
        as_fn_error $? "--enable-examples is incompatible with --enable-linuxkm." "$LINENO" 5
    fi
    if test "$ENABLED_SMALL_STACK" != "yes"; then
        as_fn_error $? "--enable-smallstack is required for --enable-linuxkm." "$LINENO" 5
    fi
    if test "$ENABLED_SP_MATH" = "no" && test "$ENABLED_SP_MATH_ALL" = "no" && test "$ENABLED_BIGNUM" != "no"; then
        as_fn_error $? "--enable-sp-math or --enable-sp-math-all is required for --enable-linuxkm." "$LINENO" 5
    fi
    if test "$ENABLED_STACKSIZE" != "no"; then
        as_fn_error $? "--enable-stacksize is incompatible with --enable-linuxkm." "$LINENO" 5
    fi
    if test "$ENABLED_STACKLOG" = "yes"; then
        as_fn_error $? "--enable-stacklog is incompatible with --enable-linuxkm." "$LINENO" 5
    fi
    if test "$ENABLED_COMPKEY" = "yes"; then
        as_fn_error $? "--enable-compkey is incompatible with --enable-linuxkm." "$LINENO" 5
    fi
fi

# The following AM_CONDITIONAL statements set flags for use in the Makefiles.
# Some of these affect build targets and objects, some trigger different
# test scripts for make check.
AM_CONDITIONAL(BUILD_DISTRO,test "x$ENABLED_DISTRO" = "xyes")
AM_CONDITIONAL(BUILD_ALL,test "x$ENABLED_ALL" = "xyes")
AM_CONDITIONAL(BUILD_TLS13,test "x$ENABLED_TLS13" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_RNG,test "x$ENABLED_RNG" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_SCTP,test "x$ENABLED_SCTP" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_SRTP,test "x$ENABLED_SRTP" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_MCAST,test "x$ENABLED_MCAST" = "xyes")
AM_CONDITIONAL(BUILD_IPV6,test "x$ENABLED_IPV6" = "xyes")
AM_CONDITIONAL(BUILD_LEANPSK,test "x$ENABLED_LEANPSK" = "xyes")
AM_CONDITIONAL(BUILD_LEANTLS,test "x$ENABLED_LEANTLS" = "xyes")
AM_CONDITIONAL(BUILD_LOWMEM,test "x$ENABLED_LOWRESOURCE" = "xyes")
AM_CONDITIONAL(BUILD_PKCALLBACKS,   test "x$ENABLED_PKCALLBACKS" = "xyes")
AM_CONDITIONAL(BUILD_CRYPTOAUTHLIB,test "x$ENABLED_CRYPTOAUTHLIB" = "xyes")
AM_CONDITIONAL(BUILD_SNIFFER,   test "x$ENABLED_SNIFFER"   = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_SNIFFTEST, test "x$ENABLED_SNIFFTEST" = "xyes")
AM_CONDITIONAL(BUILD_AESGCM,test "x$ENABLED_AESGCM" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_AESCCM,test "x$ENABLED_AESCCM" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_AESXTS,test "x$ENABLED_AESXTS" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_ARMASM,test "x$ENABLED_ARMASM" = "xyes")
AM_CONDITIONAL(BUILD_ARMASM_INLINE,test "x$ENABLED_ARMASM_INLINE" = "xyes")
AM_CONDITIONAL(BUILD_ARMASM_CRYPTO,test "x$ENABLED_ARMASM_CRYPTO" = "xyes")
AM_CONDITIONAL(BUILD_ARMASM_NEON,test "x$ENABLED_ARMASM_NEON" = "xyes")
AM_CONDITIONAL(BUILD_XILINX,test "x$ENABLED_XILINX" = "xyes")
AM_CONDITIONAL(BUILD_AESNI,test "x$ENABLED_AESNI" = "xyes")
AM_CONDITIONAL(BUILD_INTELASM,test "x$ENABLED_INTELASM" = "xyes")
AM_CONDITIONAL(BUILD_X86_ASM,test "x$ENABLED_X86_ASM" = "xyes")
AM_CONDITIONAL(BUILD_AFALG,test "x$ENABLED_AFALG" = "xyes")
AM_CONDITIONAL(BUILD_KCAPI,test "x$ENABLED_KCAPI" = "xyes")
AM_CONDITIONAL(BUILD_DEVCRYPTO,test "x$ENABLED_DEVCRYPTO" = "xyes")
AM_CONDITIONAL(BUILD_CAMELLIA,test "x$ENABLED_CAMELLIA" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_MD2,test "x$ENABLED_MD2" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_RIPEMD,test "x$ENABLED_RIPEMD" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_BLAKE2,test "x$ENABLED_BLAKE2" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_BLAKE2S,test "x$ENABLED_BLAKE2S" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_SHA512,test "x$ENABLED_SHA512" = "xyes" || test "x$ENABLED_SHA384" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_DSA,test "x$ENABLED_DSA" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_ECC,test "x$ENABLED_ECC" != "xno" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_ED25519,test "x$ENABLED_ED25519" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_ED25519_SMALL,test "x$ENABLED_ED25519_SMALL" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_FEMATH, test "x$ENABLED_FEMATH" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_GEMATH, test "x$ENABLED_GEMATH" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_CURVE25519,test "x$ENABLED_CURVE25519" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_CURVE25519_SMALL,test "x$ENABLED_CURVE25519_SMALL" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_ED448,test "x$ENABLED_ED448" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_ED448_SMALL,test "x$ENABLED_ED448_SMALL" = "xyes")
AM_CONDITIONAL(BUILD_FE448, test "x$ENABLED_FE448" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_GE448, test "x$ENABLED_GE448" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_CURVE448,test "x$ENABLED_CURVE448" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_CURVE448_SMALL,test "x$ENABLED_CURVE448_SMALL" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_WC_LMS,test "x$ENABLED_WC_LMS" != "xno" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_WC_XMSS,test "x$ENABLED_WC_XMSS" != "xno" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_WC_KYBER,test "x$ENABLED_WC_KYBER" != "xno" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_ECCSI,test "x$ENABLED_ECCSI" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_SAKKE,test "x$ENABLED_SAKKE" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_MEMORY,test "x$ENABLED_MEMORY" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_RSA,test "x$ENABLED_RSA" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_DH,test "x$ENABLED_DH" != "xno" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_ASN,test "x$ENABLED_ASN" != "xno" || test "x$ENABLED_RSA" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_AES,test "x$ENABLED_AES" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_CODING,test "x$ENABLED_CODING" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_RC4,test "x$ENABLED_ARC4" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_MD5,test "x$ENABLED_MD5" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_SHA,test "x$ENABLED_SHA" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_FIPS,test "x$ENABLED_FIPS" = "xyes")

AM_CONDITIONAL(BUILD_FIPS_V1,test "$HAVE_FIPS_VERSION" = 1)
AM_CONDITIONAL(BUILD_FIPS_V2,test "$HAVE_FIPS_VERSION" = 2 && test "$HAVE_FIPS_VERSION_MINOR" = 0)
AM_CONDITIONAL(BUILD_FIPS_RAND,test "$HAVE_FIPS_VERSION" = 2 && test "$HAVE_FIPS_VERSION_MINOR" = 1)
AM_CONDITIONAL(BUILD_FIPS_V5,test "$HAVE_FIPS_VERSION" = 5)
AM_CONDITIONAL(BUILD_FIPS_CURRENT,test "$HAVE_FIPS_VERSION" -ge 2 )
    # BUILD_FIPS_CURRENT is for builds after cert 2425.
AM_CONDITIONAL(BUILD_SIPHASH,test "x$ENABLED_SIPHASH" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_CMAC,test "x$ENABLED_CMAC" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_SELFTEST,test "x$ENABLED_SELFTEST" = "xyes")
AM_CONDITIONAL(BUILD_SHA224,test "x$ENABLED_SHA224" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_SHA3,test "x$ENABLED_SHA3" != "xno" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_POLY1305,test "x$ENABLED_POLY1305" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_CHACHA,test "x$ENABLED_CHACHA" = "xyes" || test "x$ENABLED_CHACHA" = "xnoasm" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_XCHACHA,test "x$ENABLED_XCHACHA" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_SM2,test "x$ENABLED_SM2" != "xno" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_SM3,test "x$ENABLED_SM3" != "xno" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_SM4,test "x$ENABLED_SM4" != "xno" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_INLINE,test "x$ENABLED_INLINE" = "xyes")
AM_CONDITIONAL(BUILD_OCSP,test "x$ENABLED_OCSP" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_OCSP_STAPLING,test "x$ENABLED_CERTIFICATE_STATUS_REQUEST" = "xyes")
AM_CONDITIONAL(BUILD_OCSP_STAPLING_V2,test "x$ENABLED_CERTIFICATE_STATUS_REQUEST_V2" = "xyes")
AM_CONDITIONAL(BUILD_CRL,test "x$ENABLED_CRL" != "xno" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_CRL_MONITOR,test "x$ENABLED_CRL_MONITOR" = "xyes")
AM_CONDITIONAL(BUILD_LIBLMS,test "x$ENABLED_LIBLMS" = "xyes")
AM_CONDITIONAL(BUILD_LIBXMSS,test "x$ENABLED_LIBXMSS" = "xyes")
AM_CONDITIONAL(BUILD_LIBOQS,test "x$ENABLED_LIBOQS" = "xyes")
AM_CONDITIONAL(BUILD_WNR,test "x$ENABLED_WNR" = "xyes")
AM_CONDITIONAL(BUILD_SRP,test "x$ENABLED_SRP" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(USE_VALGRIND,test "x$ENABLED_VALGRIND" = "xyes")
AM_CONDITIONAL(BUILD_MD4,test "x$ENABLED_MD4" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_PWDBASED,test "x$ENABLED_PWDBASED" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_SCRYPT,test "x$ENABLED_SCRYPT" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_CRYPTONLY,test "x$ENABLED_CRYPTONLY" = "xyes" && test "x$ENABLED_OPENSSLEXTRA" = "xno")
AM_CONDITIONAL(BUILD_FASTMATH,test "x$ENABLED_FASTMATH" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_HEAPMATH,test "x$ENABLED_HEAPMATH" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_EXAMPLE_SERVERS,test "x$ENABLED_EXAMPLES" = "xyes" && test "x$ENABLED_LEANTLS" = "xno")
AM_CONDITIONAL(BUILD_EXAMPLE_CLIENTS,test "x$ENABLED_EXAMPLES" = "xyes")
AM_CONDITIONAL(BUILD_EXAMPLE_ASN1,test "x$ENABLED_EXAMPLES" = "xyes" && test "x$ENABLED_ASN_PRINT" = "xyes" && test "x$ENABLED_ASN" = "xyes")
AM_CONDITIONAL(BUILD_TESTS,test "x$ENABLED_EXAMPLES" = "xyes")
AM_CONDITIONAL(BUILD_THREADED_EXAMPLES,test "x$ENABLED_SINGLETHREADED" = "xno" && test "x$ENABLED_EXAMPLES" = "xyes" && test "x$ENABLED_LEANTLS" = "xno")
AM_CONDITIONAL(BUILD_WOLFCRYPT_TESTS,test "x$ENABLED_CRYPT_TESTS" = "xyes")
AM_CONDITIONAL(BUILD_WOLFCRYPT_TESTS_LIBS,test "x$ENABLED_CRYPT_TESTS_LIBS" = "xyes")
AM_CONDITIONAL(BUILD_LIBZ,test "x$ENABLED_LIBZ" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_PKCS11,test "x$ENABLED_PKCS11" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_PKCS12,test "x$ENABLED_PKCS12" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_PKCS8,test "x$ENABLED_PKCS8" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_CAVIUM,test "x$ENABLED_CAVIUM" = "xyes")
AM_CONDITIONAL(BUILD_CAVIUM_V,test "x$ENABLED_CAVIUM_V" = "xyes")
AM_CONDITIONAL(BUILD_OCTEON_SYNC,test "x$ENABLED_OCTEON_SYNC" = "xyes")
AM_CONDITIONAL(BUILD_INTEL_QA,test "x$ENABLED_INTEL_QA" = "xyes")
AM_CONDITIONAL(BUILD_INTEL_QA_SYNC,test "x$ENABLED_INTEL_QA_SYNC" = "xyes")
INCLUDE_SP_INT="no"
AM_CONDITIONAL(BUILD_SP,test "x$ENABLED_SP" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_SP_C32, ( ( (test "$ENABLED_SP_RSA" = "yes" || test "$ENABLED_SP_DH" = "yes" \
                               || test "$ENABLED_SP_ECC" = "yes") && test "x$ENABLED_SP_ASM" = "xno") \
                             || test "x$ENABLED_USERSETTINGS" = "xyes") && test "x$ENABLED_64BIT" != "xyes")
AM_CONDITIONAL(BUILD_SP_C64, ( ( (test "$ENABLED_SP_RSA" = "yes" || test "$ENABLED_SP_DH" = "yes" \
                               || test "$ENABLED_SP_ECC" = "yes") && test "x$ENABLED_SP_ASM" = "xno") \
                             || test "x$ENABLED_USERSETTINGS" = "xyes") && test "x$ENABLED_32BIT" != "xyes")
AM_CONDITIONAL(BUILD_SP_ARM64,test "x$ENABLED_SP_ARM64_ASM" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_SP_ARM32,test "x$ENABLED_SP_ARM32_ASM" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_SP_ARM_THUMB,test "x$ENABLED_SP_ARM_THUMB_ASM" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_SP_ARM_CORTEX,test "x$ENABLED_SP_ARM_CORTEX_ASM" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_SP_X86_64,test "x$ENABLED_SP_X86_64_ASM" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_SP_INT,test "x$ENABLED_SP_MATH" = "xyes" || test "x$ENABLED_SP_MATH_ALL" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_COND_IF(BUILD_SP, INCLUDE_SP_INT="yes")
AM_COND_IF(BUILD_SP_INT, INCLUDE_SP_INT="yes")

AM_CONDITIONAL(BUILD_MCAPI,test "x$ENABLED_MCAPI" = "xyes")
AM_CONDITIONAL(BUILD_ASYNCCRYPT,test "x$ENABLED_ASYNCCRYPT" = "xyes")
AM_CONDITIONAL(BUILD_WOLFEVENT,test "x$ENABLED_ASYNCCRYPT" = "xyes")
AM_CONDITIONAL(BUILD_CRYPTOCB,test "x$ENABLED_CRYPTOCB" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_PSK,test "x$ENABLED_PSK" = "xyes")
AM_CONDITIONAL(BUILD_TRUST_PEER_CERT,test "x$ENABLED_TRUSTED_PEER_CERT" = "xyes")
AM_CONDITIONAL(BUILD_PKI,test "x$ENABLED_PKI" = "xyes")
AM_CONDITIONAL(BUILD_DES3,test "x$ENABLED_DES3" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_PKCS7,test "x$ENABLED_PKCS7" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_SMIME,test "x$ENABLED_SMIME" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_HASHFLAGS,test "x$ENABLED_HASHFLAGS" = "xyes")
AM_CONDITIONAL(BUILD_LINUXKM,test "$ENABLED_LINUXKM" = "yes")
AM_CONDITIONAL(BUILD_NO_LIBRARY,test "$ENABLED_NO_LIBRARY" = "yes")
AM_CONDITIONAL(BUILD_BENCHMARK,test "$ENABLED_BENCHMARK" = "yes")
AM_CONDITIONAL(BUILD_RC2,test "x$ENABLED_RC2" = "xyes")
AM_CONDITIONAL(BUILD_CAAM,test "x$ENABLED_CAAM" != "xno")
AM_CONDITIONAL(BUILD_QNXCAAM,test "x$ENABLED_CAAM_QNX" = "xyes")
AM_CONDITIONAL(BUILD_IOTSAFE,test "x$ENABLED_IOTSAFE" = "xyes")
AM_CONDITIONAL(BUILD_IOTSAFE_HWRNG,test "x$ENABLED_IOTSAFE_HWRNG" = "xyes")
AM_CONDITIONAL(BUILD_SE050,test "x$ENABLED_SE050" = "xyes")
AM_CONDITIONAL(BUILD_KDF,test "x$ENABLED_KDF" = "xyes")
AM_CONDITIONAL(BUILD_HMAC,test "x$ENABLED_HMAC" = "xyes")
AM_CONDITIONAL(BUILD_ERROR_STRINGS,test "x$ENABLED_ERROR_STRINGS" = "xyes")
AM_CONDITIONAL(BUILD_DO178,test "x$ENABLED_DO178" = "xyes")
AM_CONDITIONAL(BUILD_PSA,test "x$ENABLED_PSA" = "xyes")
AM_CONDITIONAL(BUILD_DTLS13,test "x$ENABLED_DTLS13" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_QUIC,test "x$ENABLED_QUIC" = "xyes")
AM_CONDITIONAL(BUILD_DTLS_CID,test "x$ENABLED_DTLS_CID" = "xyes")
AM_CONDITIONAL(BUILD_HPKE,test "x$ENABLED_HPKE" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_DTLS,test "x$ENABLED_DTLS" = "xyes" || test "x$ENABLED_USERSETTINGS" = "xyes")
AM_CONDITIONAL(BUILD_MAXQ10XX,test "x$ENABLED_MAXQ10XX" = "xyes")
AM_CONDITIONAL(BUILD_ARIA,test "x$ENABLED_ARIA" = "xyes")
AM_CONDITIONAL(BUILD_XILINX,test "x$ENABLED_XILINX" = "xyes")

if test "$ENABLED_REPRODUCIBLE_BUILD" != "yes" &&
   (test "$ax_enable_debug" = "yes" ||
        test "$ENABLED_STACKSIZE" != "no" ||
        (test "$ENABLED_LEANTLS" = "no" &&
             test "$ENABLED_LEANPSK" = "no" &&
             test "$ENABLED_LOWRESOURCE" = "no"))
then
    AM_CFLAGS="$AM_CFLAGS -DHAVE_WC_INTROSPECTION"
fi

if test "$ENABLED_REPRODUCIBLE_BUILD" != "yes"
then
    AM_CFLAGS="$AM_CFLAGS -include ${output_objdir}/.build_params"
fi

AM_CPPFLAGS="$AM_CPPFLAGS $EXTRA_CPPFLAGS"
AM_CFLAGS="$AM_CFLAGS $EXTRA_CFLAGS"
AM_CCASFLAGS="$AM_CCASFLAGS $EXTRA_CCASFLAGS"
AM_LDFLAGS="$AM_LDFLAGS $EXTRA_LDFLAGS"

CREATE_HEX_VERSION








# FINAL
ac_config_files="$ac_config_files stamp-h"

ac_config_files="$ac_config_files Makefile wolfssl/version.h wolfssl/options.h support/wolfssl.pc debian/control debian/changelog rpm/spec wolfcrypt/test/test_paths.h"

ac_config_files="$ac_config_files scripts/unit.test"


AX_CREATE_GENERIC_CONFIG
AX_AM_JOBSERVER(yes)

# See Automake 9.4.1 Built Sources Example



  ac_config_commands="$ac_config_commands wolfssl/wolfcrypt/async.h"



  ac_config_commands="$ac_config_commands wolfssl/wolfcrypt/fips.h"



  ac_config_commands="$ac_config_commands wolfssl/wolfcrypt/port/cavium/cavium_nitrox.h"



  ac_config_commands="$ac_config_commands wolfssl/wolfcrypt/port/intel/quickassist.h"



  ac_config_commands="$ac_config_commands wolfssl/wolfcrypt/port/intel/quickassist_mem.h"



cat >confcache <<\_ACEOF
# This file is a shell script that caches the results of configure
# tests run on this system so they can be shared between configure
# scripts and configure runs, see configure's option --config-cache.
# It is not useful on other systems.  If it contains results you don't
# want to keep, you may remove or edit it.
#
# config.status only pays attention to the cache file if you give it
# the --recheck option to rerun configure.
#
# 'ac_cv_env_foo' variables (set or unset) will be overridden when
# loading this file, other *unset* 'ac_cv_foo' will be assigned the
# following values.

_ACEOF

# The following way of writing the cache mishandles newlines in values,
# but we know of no workaround that is simple, portable, and efficient.
# So, we kill variables containing newlines.
# Ultrix sh set writes to stderr and can't be redirected directly,
# and sets the high bit in the cache file unless we assign to the vars.
(
  for ac_var in `(set) 2>&1 | sed -n 's/^\([a-zA-Z_][a-zA-Z0-9_]*\)=.*/\1/p'`; do
    eval ac_val=\$$ac_var
    case $ac_val in #(
    *${as_nl}*)
      case $ac_var in #(
      *_cv_*) { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: cache variable $ac_var contains a newline" >&5
printf "%s\n" "$as_me: WARNING: cache variable $ac_var contains a newline" >&2;} ;;
      esac
      case $ac_var in #(
      _ | IFS | as_nl) ;; #(
      BASH_ARGV | BASH_SOURCE) eval $ac_var= ;; #(
      *) { eval $ac_var=; unset $ac_var;} ;;
      esac ;;
    esac
  done

  (set) 2>&1 |
    case $as_nl`(ac_space=' '; set) 2>&1` in #(
    *${as_nl}ac_space=\ *)
      # 'set' does not quote correctly, so add quotes: double-quote
      # substitution turns \\\\ into \\, and sed turns \\ into \.
      sed -n \
	"s/'/'\\\\''/g;
	  s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1='\\2'/p"
      ;; #(
    *)
      # 'set' quotes correctly as required by POSIX, so do not add quotes.
      sed -n "/^[_$as_cr_alnum]*_cv_[_$as_cr_alnum]*=/p"
      ;;
    esac |
    sort
) |
  sed '
     /^ac_cv_env_/b end
     t clear
     :clear
     s/^\([^=]*\)=\(.*[{}].*\)$/test ${\1+y} || &/
     t end
     s/^\([^=]*\)=\(.*\)$/\1=${\1=\2}/
     :end' >>confcache
if diff "$cache_file" confcache >/dev/null 2>&1; then :; else
  if test -w "$cache_file"; then
    if test "x$cache_file" != "x/dev/null"; then
      { printf "%s\n" "$as_me:${as_lineno-$LINENO}: updating cache $cache_file" >&5
printf "%s\n" "$as_me: updating cache $cache_file" >&6;}
      if test ! -f "$cache_file" || test -h "$cache_file"; then
	cat confcache >"$cache_file"
      else
        case $cache_file in #(
        */* | ?:*)
	  mv -f confcache "$cache_file"$$ &&
	  mv -f "$cache_file"$$ "$cache_file" ;; #(
        *)
	  mv -f confcache "$cache_file" ;;
	esac
      fi
    fi
  else
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: not updating unwritable cache $cache_file" >&5
printf "%s\n" "$as_me: not updating unwritable cache $cache_file" >&6;}
  fi
fi
rm -f confcache

test "x$prefix" = xNONE && prefix=$ac_default_prefix
# Let make expand exec_prefix.
test "x$exec_prefix" = xNONE && exec_prefix='${prefix}'

DEFS=-DHAVE_CONFIG_H

ac_libobjs=
ac_ltlibobjs=
U=
for ac_i in : $LIB@&t@OBJS; do test "x$ac_i" = x: && continue
  # 1. Remove the extension, and $U if already installed.
  ac_script='s/\$U\././;s/\.o$//;s/\.obj$//'
  ac_i=`printf "%s\n" "$ac_i" | sed "$ac_script"`
  # 2. Prepend LIBOBJDIR.  When used with automake>=1.10 LIBOBJDIR
  #    will be set to the directory where LIBOBJS objects are built.
  as_fn_append ac_libobjs " \${LIBOBJDIR}$ac_i\$U.$ac_objext"
  as_fn_append ac_ltlibobjs " \${LIBOBJDIR}$ac_i"'$U.lo'
done
LIB@&t@OBJS=$ac_libobjs

LTLIBOBJS=$ac_ltlibobjs




: "${CONFIG_STATUS=./config.status}"
ac_write_fail=0
ac_clean_files_save=$ac_clean_files
ac_clean_files="$ac_clean_files $CONFIG_STATUS"
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: creating $CONFIG_STATUS" >&5
printf "%s\n" "$as_me: creating $CONFIG_STATUS" >&6;}
as_write_fail=0
cat >$CONFIG_STATUS <<_ASEOF || as_write_fail=1
#! $SHELL
# Generated by $as_me.
# Run this file to recreate the current configuration.
# Compiler output produced by configure, useful for debugging
# configure, is in config.log if it exists.

debug=false
ac_cs_recheck=false
ac_cs_silent=false

SHELL=\${CONFIG_SHELL-$SHELL}
export SHELL
_ASEOF
cat >>$CONFIG_STATUS <<\_ASEOF || as_write_fail=1
## -------------------- ##
## M4sh Initialization. ##
## -------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
if test ${ZSH_VERSION+y} && (emulate sh) >/dev/null 2>&1
then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else case e in @%:@(
  e) case `(set -o) 2>/dev/null` in @%:@(
  *posix*) :
    set -o posix ;; @%:@(
  *) :
     ;;
esac ;;
esac
fi



# Reset variables that may have inherited troublesome values from
# the environment.

# IFS needs to be set, to space, tab, and newline, in precisely that order.
# (If _AS_PATH_WALK were called with IFS unset, it would have the
# side effect of setting IFS to empty, thus disabling word splitting.)
# Quoting is to prevent editors from complaining about space-tab.
as_nl='
'
export as_nl
IFS=" ""	$as_nl"

PS1='$ '
PS2='> '
PS4='+ '

# Ensure predictable behavior from utilities with locale-dependent output.
LC_ALL=C
export LC_ALL
LANGUAGE=C
export LANGUAGE

# We cannot yet rely on "unset" to work, but we need these variables
# to be unset--not just set to an empty or harmless value--now, to
# avoid bugs in old shells (e.g. pre-3.0 UWIN ksh).  This construct
# also avoids known problems related to "unset" and subshell syntax
# in other old shells (e.g. bash 2.01 and pdksh 5.2.14).
for as_var in BASH_ENV ENV MAIL MAILPATH CDPATH
do eval test \${$as_var+y} \
  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
done

# Ensure that fds 0, 1, and 2 are open.
if (exec 3>&0) 2>/dev/null; then :; else exec 0</dev/null; fi
if (exec 3>&1) 2>/dev/null; then :; else exec 1>/dev/null; fi
if (exec 3>&2)            ; then :; else exec 2>/dev/null; fi

# The user is always right.
if ${PATH_SEPARATOR+false} :; then
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
      PATH_SEPARATOR=';'
  }
fi


# Find who we are.  Look in the path if we contain no directory separator.
as_myself=
case $0 in @%:@((
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in @%:@(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    test -r "$as_dir$0" && as_myself=$as_dir$0 && break
  done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as 'sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  printf "%s\n" "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  exit 1
fi



@%:@ as_fn_error STATUS ERROR [LINENO LOG_FD]
@%:@ ----------------------------------------
@%:@ Output "`basename @S|@0`: error: ERROR" to stderr. If LINENO and LOG_FD are
@%:@ provided, also output the error to LOG_FD, referencing LINENO. Then exit the
@%:@ script with STATUS, using 1 if that was 0.
as_fn_error ()
{
  as_status=$1; test $as_status -eq 0 && as_status=1
  if test "$4"; then
    as_lineno=${as_lineno-"$3"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: $2" >&$4
  fi
  printf "%s\n" "$as_me: error: $2" >&2
  as_fn_exit $as_status
} @%:@ as_fn_error


@%:@ as_fn_set_status STATUS
@%:@ -----------------------
@%:@ Set @S|@? to STATUS, without forking.
as_fn_set_status ()
{
  return $1
} @%:@ as_fn_set_status

@%:@ as_fn_exit STATUS
@%:@ -----------------
@%:@ Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
as_fn_exit ()
{
  set +e
  as_fn_set_status $1
  exit $1
} @%:@ as_fn_exit

@%:@ as_fn_unset VAR
@%:@ ---------------
@%:@ Portably unset VAR.
as_fn_unset ()
{
  { eval $1=; unset $1;}
}
as_unset=as_fn_unset

@%:@ as_fn_append VAR VALUE
@%:@ ----------------------
@%:@ Append the text in VALUE to the end of the definition contained in VAR. Take
@%:@ advantage of any shell optimizations that allow amortized linear growth over
@%:@ repeated appends, instead of the typical quadratic growth present in naive
@%:@ implementations.
if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null
then :
  eval 'as_fn_append ()
  {
    eval $1+=\$2
  }'
else case e in @%:@(
  e) as_fn_append ()
  {
    eval $1=\$$1\$2
  } ;;
esac
fi # as_fn_append

@%:@ as_fn_arith ARG...
@%:@ ------------------
@%:@ Perform arithmetic evaluation on the ARGs, and store the result in the
@%:@ global @S|@as_val. Take advantage of shells that can avoid forks. The arguments
@%:@ must be portable across @S|@(()) and expr.
if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null
then :
  eval 'as_fn_arith ()
  {
    as_val=$(( $* ))
  }'
else case e in @%:@(
  e) as_fn_arith ()
  {
    as_val=`expr "$@" || test $? -eq 1`
  } ;;
esac
fi # as_fn_arith


if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi

if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits


# Determine whether it's possible to make 'echo' print without a newline.
# These variables are no longer used directly by Autoconf, but are AC_SUBSTed
# for compatibility with existing Makefiles.
ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in @%:@(((((
-n*)
  case `echo 'xy\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  xy)  ECHO_C='\c';;
  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
       ECHO_T='	';;
  esac;;
*)
  ECHO_N='-n';;
esac

# For backward compatibility with old third-party macros, we provide
# the shell variables $as_echo and $as_echo_n.  New code should use
# AS_ECHO(["message"]) and AS_ECHO_N(["message"]), respectively.
as_@&t@echo='printf %s\n'
as_@&t@echo_n='printf %s'

rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir 2>/dev/null
fi
if (echo >conf$$.file) 2>/dev/null; then
  if ln -s conf$$.file conf$$ 2>/dev/null; then
    as_ln_s='ln -s'
    # ... but there are two gotchas:
    # 1) On MSYS, both 'ln -s file dir' and 'ln file dir' fail.
    # 2) DJGPP < 2.04 has no symlinks; 'ln -s' creates a wrapper executable.
    # In both cases, we have to default to 'cp -pR'.
    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
      as_ln_s='cp -pR'
  elif ln conf$$.file conf$$ 2>/dev/null; then
    as_ln_s=ln
  else
    as_ln_s='cp -pR'
  fi
else
  as_ln_s='cp -pR'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null


@%:@ as_fn_mkdir_p
@%:@ -------------
@%:@ Create "@S|@as_dir" as a directory, including parents if necessary.
as_fn_mkdir_p ()
{

  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || eval $as_mkdir_p || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`printf "%s\n" "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || as_fn_error $? "cannot create directory $as_dir"


} @%:@ as_fn_mkdir_p
if mkdir -p . 2>/dev/null; then
  as_mkdir_p='mkdir -p "$as_dir"'
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi


@%:@ as_fn_executable_p FILE
@%:@ -----------------------
@%:@ Test if FILE is an executable regular file.
as_fn_executable_p ()
{
  test -f "$1" && test -x "$1"
} @%:@ as_fn_executable_p
as_test_x='test -x'
as_executable_p=as_fn_executable_p

# Sed expression to map a string onto a valid CPP name.
as_sed_cpp="y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g"
as_tr_cpp="eval sed '$as_sed_cpp'" # deprecated

# Sed expression to map a string onto a valid variable name.
as_sed_sh="y%*+%pp%;s%[^_$as_cr_alnum]%_%g"
as_tr_sh="eval sed '$as_sed_sh'" # deprecated


exec 6>&1
## ----------------------------------- ##
## Main body of $CONFIG_STATUS script. ##
## ----------------------------------- ##
_ASEOF
test $as_write_fail = 0 && chmod +x $CONFIG_STATUS || ac_write_fail=1

cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
# Save the log message, to keep $0 and so on meaningful, and to
# report actual input values of CONFIG_FILES etc. instead of their
# values after options handling.
ac_log="
This file was extended by wolfssl $as_me 5.6.6, which was
generated by GNU Autoconf 2.72.  Invocation command line was

  CONFIG_FILES    = $CONFIG_FILES
  CONFIG_HEADERS  = $CONFIG_HEADERS
  CONFIG_LINKS    = $CONFIG_LINKS
  CONFIG_COMMANDS = $CONFIG_COMMANDS
  $ $0 $@

on `(hostname || uname -n) 2>/dev/null | sed 1q`
"

_ACEOF

case $ac_config_files in *"
"*) set x $ac_config_files; shift; ac_config_files=$*;;
esac

case $ac_config_headers in *"
"*) set x $ac_config_headers; shift; ac_config_headers=$*;;
esac


cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
# Files that config.status was made for.
config_files="$ac_config_files"
config_headers="$ac_config_headers"
config_commands="$ac_config_commands"

_ACEOF

cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
ac_cs_usage="\
'$as_me' instantiates files and other configuration actions
from templates according to the current configuration.  Unless the files
and actions are specified as TAGs, all are instantiated by default.

Usage: $0 [OPTION]... [TAG]...

  -h, --help       print this help, then exit
  -V, --version    print version number and configuration settings, then exit
      --config     print configuration, then exit
  -q, --quiet, --silent
                   do not print progress messages
  -d, --debug      don't remove temporary files
      --recheck    update $as_me by reconfiguring in the same conditions
      --file=FILE[:TEMPLATE] 
                   instantiate the configuration file FILE
      --header=FILE[:TEMPLATE] 
                   instantiate the configuration header FILE

Configuration files:
$config_files

Configuration headers:
$config_headers

Configuration commands:
$config_commands

Report bugs to <https://github.com/wolfssl/wolfssl/issues>.
wolfssl home page: <https://www.wolfssl.com>."

_ACEOF
ac_cs_config=`printf "%s\n" "$ac_configure_args" | sed "$ac_safe_unquote"`
ac_cs_config_escaped=`printf "%s\n" "$ac_cs_config" | sed "s/^ //; s/'/'\\\\\\\\''/g"`
cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
ac_cs_config='$ac_cs_config_escaped'
ac_cs_version="\\
wolfssl config.status 5.6.6
configured by $0, generated by GNU Autoconf 2.72,
  with options \\"\$ac_cs_config\\"

Copyright (C) 2023 Free Software Foundation, Inc.
This config.status script is free software; the Free Software Foundation
gives unlimited permission to copy, distribute and modify it."

ac_pwd='$ac_pwd'
srcdir='$srcdir'
INSTALL='$INSTALL'
test -n "\$AWK" || AWK=awk
_ACEOF

cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
# The default lists apply if the user does not specify any file.
ac_need_defaults=:
while test $# != 0
do
  case $1 in
  --*=?*)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=`expr "X$1" : 'X[^=]*=\(.*\)'`
    ac_shift=:
    ;;
  --*=)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=
    ac_shift=:
    ;;
  *)
    ac_option=$1
    ac_optarg=$2
    ac_shift=shift
    ;;
  esac

  case $ac_option in
  # Handling of the options.
  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
    ac_cs_recheck=: ;;
  --version | --versio | --versi | --vers | --ver | --ve | --v | -V )
    printf "%s\n" "$ac_cs_version"; exit ;;
  --config | --confi | --conf | --con | --co | --c )
    printf "%s\n" "$ac_cs_config"; exit ;;
  --debug | --debu | --deb | --de | --d | -d )
    debug=: ;;
  --file | --fil | --fi | --f )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`printf "%s\n" "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    '') as_fn_error $? "missing file argument" ;;
    esac
    as_fn_append CONFIG_FILES " '$ac_optarg'"
    ac_need_defaults=false;;
  --header | --heade | --head | --hea )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`printf "%s\n" "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    esac
    as_fn_append CONFIG_HEADERS " '$ac_optarg'"
    ac_need_defaults=false;;
  --he | --h)
    # Conflict between --help and --header
    as_fn_error $? "ambiguous option: '$1'
Try '$0 --help' for more information.";;
  --help | --hel | -h )
    printf "%s\n" "$ac_cs_usage"; exit ;;
  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
  | -silent | --silent | --silen | --sile | --sil | --si | --s)
    ac_cs_silent=: ;;

  # This is an error.
  -*) as_fn_error $? "unrecognized option: '$1'
Try '$0 --help' for more information." ;;

  *) as_fn_append ac_config_targets " $1"
     ac_need_defaults=false ;;

  esac
  shift
done

ac_configure_extra_args=

if $ac_cs_silent; then
  exec 6>/dev/null
  ac_configure_extra_args="$ac_configure_extra_args --silent"
fi

_ACEOF
cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
if \$ac_cs_recheck; then
  set X $SHELL '$0' $ac_configure_args \$ac_configure_extra_args --no-create --no-recursion
  shift
  \printf "%s\n" "running CONFIG_SHELL=$SHELL \$*" >&6
  CONFIG_SHELL='$SHELL'
  export CONFIG_SHELL
  exec "\$@"
fi

_ACEOF
cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
exec 5>>config.log
{
  echo
  sed 'h;s/./-/g;s/^.../@%:@@%:@ /;s/...$/ @%:@@%:@/;p;x;p;x' <<_ASBOX
@%:@@%:@ Running $as_me. @%:@@%:@
_ASBOX
  printf "%s\n" "$ac_log"
} >&5

_ACEOF
cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
_ACEOF

cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1

# Handling of arguments.
for ac_config_target in $ac_config_targets
do
  case $ac_config_target in
    "config.h") CONFIG_HEADERS="$CONFIG_HEADERS config.h:config.in" ;;
    "stamp-h") CONFIG_FILES="$CONFIG_FILES stamp-h" ;;
    "Makefile") CONFIG_FILES="$CONFIG_FILES Makefile" ;;
    "wolfssl/version.h") CONFIG_FILES="$CONFIG_FILES wolfssl/version.h" ;;
    "wolfssl/options.h") CONFIG_FILES="$CONFIG_FILES wolfssl/options.h" ;;
    "support/wolfssl.pc") CONFIG_FILES="$CONFIG_FILES support/wolfssl.pc" ;;
    "debian/control") CONFIG_FILES="$CONFIG_FILES debian/control" ;;
    "debian/changelog") CONFIG_FILES="$CONFIG_FILES debian/changelog" ;;
    "rpm/spec") CONFIG_FILES="$CONFIG_FILES rpm/spec" ;;
    "wolfcrypt/test/test_paths.h") CONFIG_FILES="$CONFIG_FILES wolfcrypt/test/test_paths.h" ;;
    "scripts/unit.test") CONFIG_FILES="$CONFIG_FILES scripts/unit.test" ;;
    "wolfssl/wolfcrypt/async.h") CONFIG_COMMANDS="$CONFIG_COMMANDS wolfssl/wolfcrypt/async.h" ;;
    "wolfssl/wolfcrypt/fips.h") CONFIG_COMMANDS="$CONFIG_COMMANDS wolfssl/wolfcrypt/fips.h" ;;
    "wolfssl/wolfcrypt/port/cavium/cavium_nitrox.h") CONFIG_COMMANDS="$CONFIG_COMMANDS wolfssl/wolfcrypt/port/cavium/cavium_nitrox.h" ;;
    "wolfssl/wolfcrypt/port/intel/quickassist.h") CONFIG_COMMANDS="$CONFIG_COMMANDS wolfssl/wolfcrypt/port/intel/quickassist.h" ;;
    "wolfssl/wolfcrypt/port/intel/quickassist_mem.h") CONFIG_COMMANDS="$CONFIG_COMMANDS wolfssl/wolfcrypt/port/intel/quickassist_mem.h" ;;

  *) as_fn_error $? "invalid argument: '$ac_config_target'" "$LINENO" 5;;
  esac
done


# If the user did not use the arguments to specify the items to instantiate,
# then the envvar interface is used.  Set only those that are not.
# We use the long form for the default assignment because of an extremely
# bizarre bug on SunOS 4.1.3.
if $ac_need_defaults; then
  test ${CONFIG_FILES+y} || CONFIG_FILES=$config_files
  test ${CONFIG_HEADERS+y} || CONFIG_HEADERS=$config_headers
  test ${CONFIG_COMMANDS+y} || CONFIG_COMMANDS=$config_commands
fi

# Have a temporary directory for convenience.  Make it in the build tree
# simply because there is no reason against having it here, and in addition,
# creating and moving files from /tmp can sometimes cause problems.
# Hook for its removal unless debugging.
# Note that there is a small window in which the directory will not be cleaned:
# after its creation but before its name has been assigned to '$tmp'.
$debug ||
{
  tmp= ac_tmp=
  trap 'exit_status=$?
  : "${ac_tmp:=$tmp}"
  { test ! -d "$ac_tmp" || rm -fr "$ac_tmp"; } && exit $exit_status
' 0
  trap 'as_fn_exit 1' 1 2 13 15
}
# Create a (secure) tmp directory for tmp files.

{
  tmp=`(umask 077 && mktemp -d "./confXXXXXX") 2>/dev/null` &&
  test -d "$tmp"
}  ||
{
  tmp=./conf$$-$RANDOM
  (umask 077 && mkdir "$tmp")
} || as_fn_error $? "cannot create a temporary directory in ." "$LINENO" 5
ac_tmp=$tmp

# Set up the scripts for CONFIG_FILES section.
# No need to generate them if there are no CONFIG_FILES.
# This happens for instance with './config.status config.h'.
if test -n "$CONFIG_FILES"; then


ac_cr=`echo X | tr X '\015'`
# On cygwin, bash can eat \r inside `` if the user requested igncr.
# But we know of no other shell where ac_cr would be empty at this
# point, so we can use a bashism as a fallback.
if test "x$ac_cr" = x; then
  eval ac_cr=\$\'\\r\'
fi
ac_cs_awk_cr=`$AWK 'BEGIN { print "a\rb" }' </dev/null 2>/dev/null`
if test "$ac_cs_awk_cr" = "a${ac_cr}b"; then
  ac_cs_awk_cr='\\r'
else
  ac_cs_awk_cr=$ac_cr
fi

echo 'BEGIN {' >"$ac_tmp/subs1.awk" &&
_ACEOF


{
  echo "cat >conf$$subs.awk <<_ACEOF" &&
  echo "$ac_subst_vars" | sed 's/.*/&!$&$ac_delim/' &&
  echo "_ACEOF"
} >conf$$subs.sh ||
  as_fn_error $? "could not make $CONFIG_STATUS" "$LINENO" 5
ac_delim_num=`echo "$ac_subst_vars" | grep -c '^'`
ac_delim='%!_!# '
for ac_last_try in false false false false false :; do
  . ./conf$$subs.sh ||
    as_fn_error $? "could not make $CONFIG_STATUS" "$LINENO" 5

  ac_delim_n=`sed -n "s/.*$ac_delim\$/X/p" conf$$subs.awk | grep -c X`
  if test $ac_delim_n = $ac_delim_num; then
    break
  elif $ac_last_try; then
    as_fn_error $? "could not make $CONFIG_STATUS" "$LINENO" 5
  else
    ac_delim="$ac_delim!$ac_delim _$ac_delim!! "
  fi
done
rm -f conf$$subs.sh

cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
cat >>"\$ac_tmp/subs1.awk" <<\\_ACAWK &&
_ACEOF
sed -n '
h
s/^/S["/; s/!.*/"]=/
p
g
s/^[^!]*!//
:repl
t repl
s/'"$ac_delim"'$//
t delim
:nl
h
s/\(.\{148\}\)..*/\1/
t more1
s/["\\]/\\&/g; s/^/"/; s/$/\\n"\\/
p
n
b repl
:more1
s/["\\]/\\&/g; s/^/"/; s/$/"\\/
p
g
s/.\{148\}//
t nl
:delim
h
s/\(.\{148\}\)..*/\1/
t more2
s/["\\]/\\&/g; s/^/"/; s/$/"/
p
b
:more2
s/["\\]/\\&/g; s/^/"/; s/$/"\\/
p
g
s/.\{148\}//
t delim
' <conf$$subs.awk | sed '
/^[^""]/{
  N
  s/\n//
}
' >>$CONFIG_STATUS || ac_write_fail=1
rm -f conf$$subs.awk
cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
_ACAWK
cat >>"\$ac_tmp/subs1.awk" <<_ACAWK &&
  for (key in S) S_is_set[key] = 1
  FS = ""

}
{
  line = $ 0
  nfields = split(line, field, "@")
  substed = 0
  len = length(field[1])
  for (i = 2; i < nfields; i++) {
    key = field[i]
    keylen = length(key)
    if (S_is_set[key]) {
      value = S[key]
      line = substr(line, 1, len) "" value "" substr(line, len + keylen + 3)
      len += length(value) + length(field[++i])
      substed = 1
    } else
      len += 1 + keylen
  }

  print line
}

_ACAWK
_ACEOF
cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
if sed "s/$ac_cr//" < /dev/null > /dev/null 2>&1; then
  sed "s/$ac_cr\$//; s/$ac_cr/$ac_cs_awk_cr/g"
else
  cat
fi < "$ac_tmp/subs1.awk" > "$ac_tmp/subs.awk" \
  || as_fn_error $? "could not setup config files machinery" "$LINENO" 5
_ACEOF

# VPATH may cause trouble with some makes, so we remove sole $(srcdir),
# ${srcdir} and @srcdir@ entries from VPATH if srcdir is ".", strip leading and
# trailing colons and then remove the whole line if VPATH becomes empty
# (actually we leave an empty line to preserve line numbers).
if test "x$srcdir" = x.; then
  ac_vpsub='/^[	 ]*VPATH[	 ]*=[	 ]*/{
h
s///
s/^/:/
s/[	 ]*$/:/
s/:\$(srcdir):/:/g
s/:\${srcdir}:/:/g
s/:@srcdir@:/:/g
s/^:*//
s/:*$//
x
s/\(=[	 ]*\).*/\1/
G
s/\n//
s/^[^=]*=[	 ]*$//
}'
fi

cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
fi # test -n "$CONFIG_FILES"

# Set up the scripts for CONFIG_HEADERS section.
# No need to generate them if there are no CONFIG_HEADERS.
# This happens for instance with './config.status Makefile'.
if test -n "$CONFIG_HEADERS"; then
cat >"$ac_tmp/defines.awk" <<\_ACAWK ||
BEGIN {
_ACEOF

# Transform confdefs.h into an awk script 'defines.awk', embedded as
# here-document in config.status, that substitutes the proper values into
# config.h.in to produce config.h.

# Create a delimiter string that does not exist in confdefs.h, to ease
# handling of long lines.
ac_delim='%!_!# '
for ac_last_try in false false :; do
  ac_tt=`sed -n "/$ac_delim/p" confdefs.h`
  if test -z "$ac_tt"; then
    break
  elif $ac_last_try; then
    as_fn_error $? "could not make $CONFIG_HEADERS" "$LINENO" 5
  else
    ac_delim="$ac_delim!$ac_delim _$ac_delim!! "
  fi
done

# For the awk script, D is an array of macro values keyed by name,
# likewise P contains macro parameters if any.  Preserve backslash
# newline sequences.

ac_word_re=[_$as_cr_Letters][_$as_cr_alnum]*
sed -n '
s/.\{148\}/&'"$ac_delim"'/g
t rset
:rset
s/^[	 ]*#[	 ]*define[	 ][	 ]*/ /
t def
d
:def
s/\\$//
t bsnl
s/["\\]/\\&/g
s/^ \('"$ac_word_re"'\)\(([^()]*)\)[	 ]*\(.*\)/P["\1"]="\2"\
D["\1"]=" \3"/p
s/^ \('"$ac_word_re"'\)[	 ]*\(.*\)/D["\1"]=" \2"/p
d
:bsnl
s/["\\]/\\&/g
s/^ \('"$ac_word_re"'\)\(([^()]*)\)[	 ]*\(.*\)/P["\1"]="\2"\
D["\1"]=" \3\\\\\\n"\\/p
t cont
s/^ \('"$ac_word_re"'\)[	 ]*\(.*\)/D["\1"]=" \2\\\\\\n"\\/p
t cont
d
:cont
n
s/.\{148\}/&'"$ac_delim"'/g
t clear
:clear
s/\\$//
t bsnlc
s/["\\]/\\&/g; s/^/"/; s/$/"/p
d
:bsnlc
s/["\\]/\\&/g; s/^/"/; s/$/\\\\\\n"\\/p
b cont
' <confdefs.h | sed '
s/'"$ac_delim"'/"\\\
"/g' >>$CONFIG_STATUS || ac_write_fail=1

cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
  for (key in D) D_is_set[key] = 1
  FS = ""
}
/^[\t ]*#[\t ]*(define|undef)[\t ]+$ac_word_re([\t (]|\$)/ {
  line = \$ 0
  split(line, arg, " ")
  if (arg[1] == "#") {
    defundef = arg[2]
    mac1 = arg[3]
  } else {
    defundef = substr(arg[1], 2)
    mac1 = arg[2]
  }
  split(mac1, mac2, "(") #)
  macro = mac2[1]
  prefix = substr(line, 1, index(line, defundef) - 1)
  if (D_is_set[macro]) {
    # Preserve the white space surrounding the "#".
    print prefix "define", macro P[macro] D[macro]
    next
  } else {
    # Replace #undef with comments.  This is necessary, for example,
    # in the case of _POSIX_SOURCE, which is predefined and required
    # on some systems where configure will not decide to define it.
    if (defundef == "undef") {
      print "/*", prefix defundef, macro, "*/"
      next
    }
  }
}
{ print }
_ACAWK
_ACEOF
cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
  as_fn_error $? "could not setup config headers machinery" "$LINENO" 5
fi # test -n "$CONFIG_HEADERS"


eval set X "  :F $CONFIG_FILES  :H $CONFIG_HEADERS    :C $CONFIG_COMMANDS"
shift
for ac_tag
do
  case $ac_tag in
  :[FHLC]) ac_mode=$ac_tag; continue;;
  esac
  case $ac_mode$ac_tag in
  :[FHL]*:*);;
  :L* | :C*:*) as_fn_error $? "invalid tag '$ac_tag'" "$LINENO" 5;;
  :[FH]-) ac_tag=-:-;;
  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;
  esac
  ac_save_IFS=$IFS
  IFS=:
  set x $ac_tag
  IFS=$ac_save_IFS
  shift
  ac_file=$1
  shift

  case $ac_mode in
  :L) ac_source=$1;;
  :[FH])
    ac_file_inputs=
    for ac_f
    do
      case $ac_f in
      -) ac_f="$ac_tmp/stdin";;
      *) # Look for the file first in the build tree, then in the source tree
	 # (if the path is not absolute).  The absolute path cannot be DOS-style,
	 # because $ac_f cannot contain ':'.
	 test -f "$ac_f" ||
	   case $ac_f in
	   [\\/$]*) false;;
	   *) test -f "$srcdir/$ac_f" && ac_f="$srcdir/$ac_f";;
	   esac ||
	   as_fn_error 1 "cannot find input file: '$ac_f'" "$LINENO" 5;;
      esac
      case $ac_f in *\'*) ac_f=`printf "%s\n" "$ac_f" | sed "s/'/'\\\\\\\\''/g"`;; esac
      as_fn_append ac_file_inputs " '$ac_f'"
    done

    # Let's still pretend it is 'configure' which instantiates (i.e., don't
    # use $as_me), people would be surprised to read:
    #    /* config.h.  Generated by config.status.  */
    configure_input='Generated from '`
	  printf "%s\n" "$*" | sed 's|^[^:]*/||;s|:[^:]*/|, |g'
	`' by configure.'
    if test x"$ac_file" != x-; then
      configure_input="$ac_file.  $configure_input"
      { printf "%s\n" "$as_me:${as_lineno-$LINENO}: creating $ac_file" >&5
printf "%s\n" "$as_me: creating $ac_file" >&6;}
    fi
    # Neutralize special characters interpreted by sed in replacement strings.
    case $configure_input in #(
    *\&* | *\|* | *\\* )
       ac_sed_conf_input=`printf "%s\n" "$configure_input" |
       sed 's/[\\\\&|]/\\\\&/g'`;; #(
    *) ac_sed_conf_input=$configure_input;;
    esac

    case $ac_tag in
    *:-:* | *:-) cat >"$ac_tmp/stdin" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5 ;;
    esac
    ;;
  esac

  ac_dir=`$as_dirname -- "$ac_file" ||
$as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$ac_file" : 'X\(//\)[^/]' \| \
	 X"$ac_file" : 'X\(//\)$' \| \
	 X"$ac_file" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X"$ac_file" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
  as_dir="$ac_dir"; as_fn_mkdir_p
  ac_builddir=.

case "$ac_dir" in
.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
*)
  ac_dir_suffix=/`printf "%s\n" "$ac_dir" | sed 's|^\.[\\/]||'`
  # A ".." for each directory in $ac_dir_suffix.
  ac_top_builddir_sub=`printf "%s\n" "$ac_dir_suffix" | sed 's|/[^\\/]*|/..|g;s|/||'`
  case $ac_top_builddir_sub in
  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
  esac ;;
esac
ac_abs_top_builddir=$ac_pwd
ac_abs_builddir=$ac_pwd$ac_dir_suffix
# for backward compatibility:
ac_top_builddir=$ac_top_build_prefix

case $srcdir in
  .)  # We are building in place.
    ac_srcdir=.
    ac_top_srcdir=$ac_top_builddir_sub
    ac_abs_top_srcdir=$ac_pwd ;;
  [\\/]* | ?:[\\/]* )  # Absolute name.
    ac_srcdir=$srcdir$ac_dir_suffix;
    ac_top_srcdir=$srcdir
    ac_abs_top_srcdir=$srcdir ;;
  *) # Relative name.
    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
    ac_top_srcdir=$ac_top_build_prefix$srcdir
    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
esac
ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix


  case $ac_mode in
  :F)
  #
  # CONFIG_FILE
  #

  case $INSTALL in
  [\\/$]* | ?:[\\/]* ) ac_INSTALL=$INSTALL ;;
  *) ac_INSTALL=$ac_top_build_prefix$INSTALL ;;
  esac
_ACEOF

cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
# If the template does not know about datarootdir, expand it.
# FIXME: This hack should be removed a few years after 2.60.
ac_datarootdir_hack=; ac_datarootdir_seen=
ac_sed_dataroot='
/datarootdir/ {
  p
  q
}
/@datadir@/p
/@docdir@/p
/@infodir@/p
/@localedir@/p
/@mandir@/p'
case `eval "sed -n \"\$ac_sed_dataroot\" $ac_file_inputs"` in
*datarootdir*) ac_datarootdir_seen=yes;;
*@datadir@*|*@docdir@*|*@infodir@*|*@localedir@*|*@mandir@*)
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&5
printf "%s\n" "$as_me: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&2;}
_ACEOF
cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
  ac_datarootdir_hack='
  s&@datadir@&$datadir&g
  s&@docdir@&$docdir&g
  s&@infodir@&$infodir&g
  s&@localedir@&$localedir&g
  s&@mandir@&$mandir&g
  s&\\\${datarootdir}&$datarootdir&g' ;;
esac
_ACEOF

# Neutralize VPATH when '$srcdir' = '.'.
# Shell code in configure.ac might set extrasub.
# FIXME: do we really want to maintain this feature?
cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
ac_sed_extra="$ac_vpsub
$extrasub
_ACEOF
cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
:t
/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
s|@configure_input@|$ac_sed_conf_input|;t t
s&@top_builddir@&$ac_top_builddir_sub&;t t
s&@top_build_prefix@&$ac_top_build_prefix&;t t
s&@srcdir@&$ac_srcdir&;t t
s&@abs_srcdir@&$ac_abs_srcdir&;t t
s&@top_srcdir@&$ac_top_srcdir&;t t
s&@abs_top_srcdir@&$ac_abs_top_srcdir&;t t
s&@builddir@&$ac_builddir&;t t
s&@abs_builddir@&$ac_abs_builddir&;t t
s&@abs_top_builddir@&$ac_abs_top_builddir&;t t
s&@INSTALL@&$ac_INSTALL&;t t
$ac_datarootdir_hack
"
eval sed \"\$ac_sed_extra\" "$ac_file_inputs" | $AWK -f "$ac_tmp/subs.awk" \
  >$ac_tmp/out || as_fn_error $? "could not create $ac_file" "$LINENO" 5

test -z "$ac_datarootdir_hack$ac_datarootdir_seen" &&
  { ac_out=`sed -n '/\${datarootdir}/p' "$ac_tmp/out"`; test -n "$ac_out"; } &&
  { ac_out=`sed -n '/^[	 ]*datarootdir[	 ]*:*=/p' \
      "$ac_tmp/out"`; test -z "$ac_out"; } &&
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file contains a reference to the variable 'datarootdir'
which seems to be undefined.  Please make sure it is defined" >&5
printf "%s\n" "$as_me: WARNING: $ac_file contains a reference to the variable 'datarootdir'
which seems to be undefined.  Please make sure it is defined" >&2;}

  rm -f "$ac_tmp/stdin"
  case $ac_file in
  -) cat "$ac_tmp/out" && rm -f "$ac_tmp/out";;
  *) rm -f "$ac_file" && mv "$ac_tmp/out" "$ac_file";;
  esac \
  || as_fn_error $? "could not create $ac_file" "$LINENO" 5
 ;;
  :H)
  #
  # CONFIG_HEADER
  #
  if test x"$ac_file" != x-; then
    {
      printf "%s\n" "/* $configure_input  */" >&1 \
      && eval '$AWK -f "$ac_tmp/defines.awk"' "$ac_file_inputs"
    } >"$ac_tmp/config.h" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5
    if diff "$ac_file" "$ac_tmp/config.h" >/dev/null 2>&1; then
      { printf "%s\n" "$as_me:${as_lineno-$LINENO}: $ac_file is unchanged" >&5
printf "%s\n" "$as_me: $ac_file is unchanged" >&6;}
    else
      rm -f "$ac_file"
      mv "$ac_tmp/config.h" "$ac_file" \
	|| as_fn_error $? "could not create $ac_file" "$LINENO" 5
    fi
  else
    printf "%s\n" "/* $configure_input  */" >&1 \
      && eval '$AWK -f "$ac_tmp/defines.awk"' "$ac_file_inputs" \
      || as_fn_error $? "could not create -" "$LINENO" 5
  fi
 ;;
  
  :C)  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: executing $ac_file commands" >&5
printf "%s\n" "$as_me: executing $ac_file commands" >&6;}
 ;;
  esac


  case $ac_file$ac_mode in
    "stamp-h":F) echo timestamp > stamp-h ;;
    "scripts/unit.test":F) chmod +x scripts/unit.test ;;
    "wolfssl/wolfcrypt/async.h":C) test ! -f $srcdir/wolfssl/wolfcrypt/async.h && >> $srcdir/wolfssl/wolfcrypt/async.h ;;
    "wolfssl/wolfcrypt/fips.h":C) test ! -f $srcdir/wolfssl/wolfcrypt/fips.h && >> $srcdir/wolfssl/wolfcrypt/fips.h ;;
    "wolfssl/wolfcrypt/port/cavium/cavium_nitrox.h":C) test ! -f $srcdir/wolfssl/wolfcrypt/port/cavium/cavium_nitrox.h && >> $srcdir/wolfssl/wolfcrypt/port/cavium/cavium_nitrox.h ;;
    "wolfssl/wolfcrypt/port/intel/quickassist.h":C) test ! -f $srcdir/wolfssl/wolfcrypt/port/intel/quickassist.h && >> $srcdir/wolfssl/wolfcrypt/port/intel/quickassist.h ;;
    "wolfssl/wolfcrypt/port/intel/quickassist_mem.h":C) test ! -f $srcdir/wolfssl/wolfcrypt/port/intel/quickassist_mem.h && >> $srcdir/wolfssl/wolfcrypt/port/intel/quickassist_mem.h ;;

  esac
done # for ac_tag


as_fn_exit 0
_ACEOF
ac_clean_files=$ac_clean_files_save

test $ac_write_fail = 0 ||
  as_fn_error $? "write failure creating $CONFIG_STATUS" "$LINENO" 5


# configure is writing to config.log, and then calls config.status.
# config.status does its own redirection, appending to config.log.
# Unfortunately, on DOS this fails, as config.log is still kept open
# by configure, so config.status won't be able to write to it; its
# output is simply discarded.  So we exec the FD to /dev/null,
# effectively closing config.log, so it can be properly (re)opened and
# appended to by config.status.  When coming back to configure, we
# need to make the FD available again.
if test "$no_create" != yes; then
  ac_cs_success=:
  ac_config_status_args=
  test "$silent" = yes &&
    ac_config_status_args="$ac_config_status_args --quiet"
  exec 5>/dev/null
  $SHELL $CONFIG_STATUS $ac_config_status_args || ac_cs_success=false
  exec 5>>config.log
  # Use ||, not &&, to avoid exiting from the if with $? = 1, which
  # would make configure fail if this is the last instruction.
  $ac_cs_success || as_fn_exit 1
fi
if test -n "$ac_unrecognized_opts" && test "$enable_option_checking" != no; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: unrecognized options: $ac_unrecognized_opts" >&5
printf "%s\n" "$as_me: WARNING: unrecognized options: $ac_unrecognized_opts" >&2;}
fi



if test "$ENABLED_MAKECLEAN" = "yes"
then
    # force make clean
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: ---" >&5
printf "%s\n" "$as_me: ---" >&6;}
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: Running make clean..." >&5
printf "%s\n" "$as_me: Running make clean..." >&6;}
    if test -z "$MAKE"; then
        MAKE="make"
    fi

    if test "$verbose" = "yes"; then
        $MAKE clean
    else
        $MAKE clean >/dev/null
    fi
fi

if test "$ENABLED_REPRODUCIBLE_BUILD" != "yes"
then
    ESCAPED_ARGS=$(echo "$ac_configure_args" | sed 's/\\/\\\\/g;s/\"/\\\"/g')
    ESCAPED_GLOBAL_CFLAGS=$(echo "$CPPFLAGS $AM_CPPFLAGS $CFLAGS $AM_CFLAGS" | sed 's/\\/\\\\/g;s/\"/\\\"/g')
    echo "#define LIBWOLFSSL_CONFIGURE_ARGS \"$ESCAPED_ARGS\"" > "${output_objdir}/.build_params" &&
        echo "#define LIBWOLFSSL_GLOBAL_CFLAGS \"$ESCAPED_GLOBAL_CFLAGS\" LIBWOLFSSL_GLOBAL_EXTRA_CFLAGS" >> "${output_objdir}/.build_params" ||
        as_fn_error $? "Couldn't create ${output_objdir}/.build_params." "$LINENO" 5
else
    rm -f "${output_objdir}/.build_params"
fi

# generate user options header
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: ---" >&5
printf "%s\n" "$as_me: ---" >&6;}
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: Generating user options header..." >&5
printf "%s\n" "$as_me: Generating user options header..." >&6;}

OPTION_FILE="wolfssl/options.h"
rm -f $OPTION_FILE

echo "/* wolfssl options.h" > $OPTION_FILE
echo " * generated from configure options" >> $OPTION_FILE
echo " *" >> $OPTION_FILE
echo " * Copyright (C) 2006-2023 wolfSSL Inc." >> $OPTION_FILE
echo " *" >> $OPTION_FILE
echo " * This file is part of wolfSSL. (formerly known as CyaSSL)" >> $OPTION_FILE
echo " *" >> $OPTION_FILE
echo " */" >> $OPTION_FILE

echo "" >> $OPTION_FILE
echo "#ifndef WOLFSSL_OPTIONS_H" >> $OPTION_FILE
echo "#define WOLFSSL_OPTIONS_H" >> $OPTION_FILE
echo "" >> $OPTION_FILE
echo "" >> $OPTION_FILE
echo "#ifdef __cplusplus" >> $OPTION_FILE
echo "extern \"C\" {" >> $OPTION_FILE
echo "#endif" >> $OPTION_FILE
echo "" >> $OPTION_FILE

# Check for supported command to trim option with.
# note: cut requires an argument to exit with success.
if colrm >/dev/null 2>&1 </dev/null; then
    TRIM="colrm 3"
elif cut --version >/dev/null 2>&1 </dev/null; then
    TRIM="cut -c1-2"
else
    as_fn_error $? "Could not find colrm or cut to make options file" "$LINENO" 5
fi

for option in $AM_CPPFLAGS $CPPFLAGS $AM_CFLAGS $CFLAGS; do
    opt_type=$(echo $option | $TRIM )
    case "$opt_type" in
    -D)
        option=$(echo "$option" | tr -d '\\')
        RHS_only=$(echo "$option" | sed 's/^-D//')
        noequalsign=$(echo "$RHS_only" | tr '=' ' ')
        if test "$noequalsign" = "NDEBUG" || test "$noequalsign" = "DEBUG"
        then
            if test "$verbose" = "yes"; then
                { printf "%s\n" "$as_me:${as_lineno-$LINENO}: not outputting (N)DEBUG to $OPTION_FILE" >&5
printf "%s\n" "$as_me: not outputting (N)DEBUG to $OPTION_FILE" >&6;}
            fi
            continue
        fi

        # allow user to ignore system options
        ignoresys=$(echo "$noequalsign" | grep '^_.*')
        if test -n "$ignoresys"
        then
            echo "#ifndef WOLFSSL_OPTIONS_IGNORE_SYS" >> $OPTION_FILE
        fi

        # note need to use both autotools-style [] quoting and shell-style ''
        # quoting for sed script with [] character set expression here.
        noarg=$(echo "$RHS_only" | sed 's/\(([^=)]*)\)\{0,1\}=.*//')
        echo "#undef  $noarg" >> $OPTION_FILE
        echo "#define $noequalsign" >> $OPTION_FILE

        if test -n "$ignoresys"
        then
            echo "#endif" >> $OPTION_FILE
        fi

        echo "" >> $OPTION_FILE
        ;;
    -U)
        RHS_only=$(echo $option | sed 's/^-U//')
        echo "#undef  $RHS_only" >> $OPTION_FILE
        echo "" >> $OPTION_FILE
        ;;
    *)
        if test "$verbose" = "yes"; then
            { printf "%s\n" "$as_me:${as_lineno-$LINENO}: option \"$option\" is not a preprocessor directive -- not saving to $OPTION_FILE" >&5
printf "%s\n" "$as_me: option \"$option\" is not a preprocessor directive -- not saving to $OPTION_FILE" >&6;}
        fi
        ;;
    esac
done

echo "" >> $OPTION_FILE
echo "#ifdef __cplusplus" >> $OPTION_FILE
echo "}" >> $OPTION_FILE
echo "#endif" >> $OPTION_FILE
echo "" >> $OPTION_FILE
echo "" >> $OPTION_FILE
echo "#endif /* WOLFSSL_OPTIONS_H */" >> $OPTION_FILE
echo "" >> $OPTION_FILE

if test "$ENABLED_OPENSSLEXTRA" = "yes" && test "$ENABLED_LINUXKM" = "no"
then
    SAVE_CFLAGS=$CFLAGS
    CFLAGS="$CFLAGS $DEFS -I. -I$srcdir"
    if test "$ENABLED_INTEL_QA" = "yes"
    then
        CFLAGS="$CFLAGS $QAT_FLAGS"
    fi
    build_pwd="$(pwd)"
    cd "$srcdir"
    openssl_headers=$(echo wolfssl/openssl/*.h)
    cd "$build_pwd"
    for header in $openssl_headers
    do
        as_ac_Header=`printf "%s\n" "ac_cv_header_$header" | sed "$as_sed_sh"`
ac_fn_c_check_header_compile "$LINENO" "$header" "$as_ac_Header" "
            #include <${OPTION_FILE}>
            extern int dummy_int_to_make_compiler_happy;
        
"
if eval test \"x\$"$as_ac_Header"\" = x"yes"
then :
  
else case e in @%:@(
  e) 
                as_fn_error $? "Header file inconsistency detected -- error including ${header}." "$LINENO" 5
             ;;
esac
fi

    done
    CFLAGS=$SAVE_CFLAGS
fi

if test "$silent" != "yes"; then

# output config summary
echo "---"
echo "Configuration summary for $PACKAGE_NAME version $VERSION"
echo ""
echo "   * Installation prefix:        $prefix"
echo "   * System type:                $host_vendor-$host_os"
echo "   * Host CPU:                   $host_cpu"
echo "   * C Compiler:                 $CC"
echo "   * C Flags:                    $CFLAGS"
echo "   * C++ Compiler:               $CXX"
echo "   * C++ Flags:                  $CXXFLAGS"
echo "   * CPP Flags:                  $CPPFLAGS"
echo "   * CCAS Flags:                 $CCASFLAGS"
echo "   * LD Flags:                   $LDFLAGS"
echo "   * LIB Flags:                  $LIB"
echo "   * Library Suffix:             $LIBSUFFIX"

test "$ENABLED_LINUXKM" = "yes" && \
echo "   * Linux Kernel Build Root:    $KERNEL_ROOT" && \
echo "   * Linux Kernel Build Arch:    $KERNEL_ARCH" && \
echo "   * fpu disable C flags:        $CFLAGS_FPU_DISABLE" && \
echo "   * fpu enable C flags:         $CFLAGS_FPU_ENABLE" && \
echo "   * SIMD disable C flags:       $CFLAGS_SIMD_DISABLE" && \
echo "   * SIMD enable C flags:        $CFLAGS_SIMD_ENABLE" && \
echo "   * No-auto-vectorize C flags:  $CFLAGS_AUTO_VECTORIZE_DISABLE" && \
echo "   * Auto-vectorize C flags:     $CFLAGS_AUTO_VECTORIZE_ENABLE" && \
echo "   * SIMD enable as flags:       $ASFLAGS_FPU_DISABLE_SIMD_ENABLE" && \
echo "   * FPU enable as flags:        $ASFLAGS_FPU_ENABLE_SIMD_DISABLE" && \
echo "   * SIMD+FPU disable as flags:  $ASFLAGS_FPUSIMD_DISABLE" && \
echo "   * SIMD+FPU enable as flags:   $ASFLAGS_FPUSIMD_ENABLE" && \
echo "   * Linux kernel module PIE:    $ENABLED_LINUXKM_PIE"
echo "   * Linux kernel module bench:  $ENABLED_LINUXKM_BENCHMARKS"

echo "   * Debug enabled:              $ax_enable_debug"
echo "   * Coverage enabled:           $ax_enable_coverage"
echo "   * Warnings as failure:        $ac_cv_warnings_as_errors"
echo "   * make -j:                    $enable_jobserver"
echo "   * VCS checkout:               $ac_cv_vcs_checkout"
echo
echo "   Features "
if test "$ENABLED_FIPS" = "yes"; then
echo "   * FIPS:                       $FIPS_VERSION"
else
echo "   * FIPS:                       $ENABLED_FIPS"
fi
echo "   * Single threaded:            $ENABLED_SINGLETHREADED"
echo "   * Filesystem:                 $ENABLED_FILESYSTEM"
echo "   * OpenSSH Build:              $ENABLED_OPENSSH"
echo "   * OpenSSL Extra API:          $ENABLED_OPENSSLEXTRA"
echo "   * OpenSSL Coexist:            $ENABLED_OPENSSLCOEXIST"
echo "   * Old Names:                  $ENABLED_OLDNAMES"
echo "   * Max Strength Build:         $ENABLED_MAXSTRENGTH"
echo "   * Distro Build:               $ENABLED_DISTRO"
echo "   * Reproducible Build:         $ENABLED_REPRODUCIBLE_BUILD"
echo "   * Side-channel Hardening:     $ENABLED_HARDEN"

echo "   * Single Precision Math:      $ENABLED_SP"
if test "$ENABLED_SP_MATH_ALL" != "no"
then
    ENABLED_SP_MATH_DESC="all"
else
    if test "$ENABLED_SP_MATH" != "no"
    then
        ENABLED_SP_MATH_DESC="restricted"
    else
        ENABLED_SP_MATH_DESC="no"
    fi
fi
echo "   * SP implementation:          $ENABLED_SP_MATH_DESC"
echo "   * Fast Math:                  $ENABLED_FASTMATH"
echo "   * Heap Math:                  $ENABLED_HEAPMATH"
echo "   * Assembly Allowed:           $ENABLED_ASM"
echo "   * sniffer:                    $ENABLED_SNIFFER"
echo "   * snifftest:                  $ENABLED_SNIFFTEST"
echo "   * ARC4:                       $ENABLED_ARC4"
echo "   * AES:                        $ENABLED_AES"
echo "   * AES-NI:                     $ENABLED_AESNI"
echo "   * AES-CBC:                    $ENABLED_AESCBC"
echo "   * AES-CBC length checks:      $ENABLED_AESCBC_LENGTH_CHECKS"
echo "   * AES-GCM:                    $ENABLED_AESGCM"
echo "   * AES-GCM streaming:          $ENABLED_AESGCM_STREAM"
echo "   * AES-CCM:                    $ENABLED_AESCCM"
echo "   * AES-CTR:                    $ENABLED_AESCTR"
echo "   * AES-CFB:                    $ENABLED_AESCFB"
echo "   * AES-OFB:                    $ENABLED_AESOFB"
echo "   * AES-XTS:                    $ENABLED_AESXTS"
echo "   * AES-SIV:                    $ENABLED_AESSIV"
echo "   * AES-EAX:                    $ENABLED_AESEAX"
echo "   * AES Bitspliced:             $ENABLED_AESBS"
echo "   * ARIA:                       $ENABLED_ARIA"
echo "   * DES3:                       $ENABLED_DES3"
echo "   * Camellia:                   $ENABLED_CAMELLIA"
echo "   * SM4-ECB:                    $ENABLED_SM4_ECB"
echo "   * SM4-CBC:                    $ENABLED_SM4_CBC"
echo "   * SM4-CTR:                    $ENABLED_SM4_CTR"
echo "   * SM4-GCM:                    $ENABLED_SM4_GCM"
echo "   * SM4-CCM:                    $ENABLED_SM4_CCM"
echo "   * NULL Cipher:                $ENABLED_NULL_CIPHER"
echo "   * MD2:                        $ENABLED_MD2"
echo "   * MD4:                        $ENABLED_MD4"
echo "   * MD5:                        $ENABLED_MD5"
echo "   * RIPEMD:                     $ENABLED_RIPEMD"
echo "   * SHA:                        $ENABLED_SHA"
echo "   * SHA-224:                    $ENABLED_SHA224"
echo "   * SHA-384:                    $ENABLED_SHA384"
echo "   * SHA-512:                    $ENABLED_SHA512"
echo "   * SHA3:                       $ENABLED_SHA3"
echo "   * SHAKE128:                   $ENABLED_SHAKE128"
echo "   * SHAKE256:                   $ENABLED_SHAKE256"
echo "   * SM3:                        $ENABLED_SM3"
echo "   * BLAKE2:                     $ENABLED_BLAKE2"
echo "   * BLAKE2S:                    $ENABLED_BLAKE2S"
echo "   * SipHash:                    $ENABLED_SIPHASH"
echo "   * CMAC:                       $ENABLED_CMAC"
echo "   * keygen:                     $ENABLED_KEYGEN"
echo "   * certgen:                    $ENABLED_CERTGEN"
echo "   * certreq:                    $ENABLED_CERTREQ"
echo "   * certext:                    $ENABLED_CERTEXT"
echo "   * certgencache:               $ENABLED_certgencache"
echo "   * CHACHA:                     $ENABLED_CHACHA"
echo "   * XCHACHA:                    $ENABLED_XCHACHA"
echo "   * Hash DRBG:                  $ENABLED_HASHDRBG"
echo "   * MmemUse Entropy:            $ENABLED_ENTROPY_MEMUSE"
echo "   * PWDBASED:                   $ENABLED_PWDBASED"
echo "   * Encrypted keys:             $ENABLED_ENCKEYS"
echo "   * scrypt:                     $ENABLED_SCRYPT"
echo "   * wolfCrypt Only:             $ENABLED_CRYPTONLY"
echo "   * HKDF:                       $ENABLED_HKDF"
echo "   * HPKE:                       $ENABLED_HPKE"
echo "   * X9.63 KDF:                  $ENABLED_X963KDF"
echo "   * SRTP-KDF:                   $ENABLED_SRTP_KDF"
echo "   * PSK:                        $ENABLED_PSK"
echo "   * Poly1305:                   $ENABLED_POLY1305"
echo "   * LEANPSK:                    $ENABLED_LEANPSK"
echo "   * LEANTLS:                    $ENABLED_LEANTLS"
echo "   * RSA:                        $ENABLED_RSA"
echo "   * RSA-PSS:                    $ENABLED_RSAPSS"
echo "   * DSA:                        $ENABLED_DSA"
echo "   * DH:                         $ENABLED_DH"
echo "   * DH Default Parameters:      $ENABLED_DHDEFAULTPARAMS"
echo "   * ECC:                        $ENABLED_ECC"
echo "   * ECC Custom Curves:          $ENABLED_ECCCUSTCURVES"
echo "   * ECC Minimum Bits:           $ENABLED_ECCMINSZ"
echo "   * FPECC:                      $ENABLED_FPECC"
echo "   * ECC_ENCRYPT:                $ENABLED_ECC_ENCRYPT"
echo "   * Brainpool:                  $ENABLED_BRAINPOOL"
echo "   * SM2:                        $ENABLED_SM2"
echo "   * CURVE25519:                 $ENABLED_CURVE25519"
echo "   * ED25519:                    $ENABLED_ED25519"
echo "   * ED25519 streaming:          $ENABLED_ED25519_STREAM"
echo "   * CURVE448:                   $ENABLED_CURVE448"
echo "   * ED448:                      $ENABLED_ED448"
echo "   * ED448 streaming:            $ENABLED_ED448_STREAM"
echo "   * LMS:                        $ENABLED_LMS"
echo "   * LMS wolfSSL impl:           $ENABLED_WC_LMS"
echo "   * XMSS:                       $ENABLED_XMSS"
echo "   * XMSS wolfSSL impl:          $ENABLED_WC_XMSS"
if test "$ENABLED_LIBXMSS" = "yes"; then
echo "   * XMSS_ROOT:                  $XMSS_ROOT"
fi
echo "   * KYBER:                      $ENABLED_KYBER"
echo "   * KYBER wolfSSL impl:         $ENABLED_WC_KYBER"
echo "   * ECCSI                       $ENABLED_ECCSI"
echo "   * SAKKE                       $ENABLED_SAKKE"
echo "   * ASN:                        $ENABLED_ASN"
echo "   * Anonymous cipher:           $ENABLED_ANON"
echo "   * CODING:                     $ENABLED_CODING"
echo "   * MEMORY:                     $ENABLED_MEMORY"
echo "   * I/O POOL:                   $ENABLED_IOPOOL"
echo "   * wolfSentry:                 $ENABLED_WOLFSENTRY"
echo "   * LIGHTY:                     $ENABLED_LIGHTY"
echo "   * WPA Supplicant:             $ENABLED_WPAS"
echo "   * HAPROXY:                    $ENABLED_HAPROXY"
echo "   * STUNNEL:                    $ENABLED_STUNNEL"
echo "   * tcpdump:                    $ENABLED_TCPDUMP"
echo "   * libssh2:                    $ENABLED_LIBSSH2"
echo "   * ntp:                        $ENABLED_NTP"
echo "   * rsyslog:                    $ENABLED_RSYSLOG"
echo "   * Apache httpd:               $ENABLED_APACHE_HTTPD"
echo "   * NGINX:                      $ENABLED_NGINX"
echo "   * OpenResty:                  $ENABLED_OPENRESTY"
echo "   * ASIO:                       $ENABLED_ASIO"
echo "   * LIBWEBSOCKETS:              $ENABLED_LIBWEBSOCKETS"
echo "   * Qt:                         $ENABLED_QT"
echo "   * Qt Unit Testing:            $ENABLED_QT_TEST"
echo "   * SIGNAL:                     $ENABLED_SIGNAL"
echo "   * chrony:                     $ENABLED_CHRONY"
echo "   * strongSwan:                 $ENABLED_STRONGSWAN"
echo "   * OpenLDAP:                   $ENABLED_OPENLDAP"
echo "   * hitch:                      $ENABLED_HITCH"
echo "   * memcached:                  $ENABLED_MEMCACHED"
echo "   * ERROR_STRINGS:              $ENABLED_ERROR_STRINGS"
echo "   * DTLS:                       $ENABLED_DTLS"
echo "   * DTLS v1.3:                  $ENABLED_DTLS13"
echo "   * SCTP:                       $ENABLED_SCTP"
echo "   * SRTP:                       $ENABLED_SRTP"
echo "   * Indefinite Length:          $ENABLED_BER_INDEF"
echo "   * Multicast:                  $ENABLED_MCAST"
echo "   * SSL v3.0 (Old):             $ENABLED_SSLV3"
echo "   * TLS v1.0 (Old):             $ENABLED_TLSV10"
echo "   * TLS v1.1 (Old):             $ENABLED_OLD_TLS"
echo "   * TLS v1.2:                   $ENABLED_TLSV12"
echo "   * TLS v1.3:                   $ENABLED_TLS13"
echo "   * Post-handshake Auth:        $ENABLED_TLS13_POST_AUTH"
echo "   * Early Data:                 $ENABLED_TLS13_EARLY_DATA"
echo "   * QUIC:                       $ENABLED_QUIC"
echo "   * Send State in HRR Cookie:   $ENABLED_SEND_HRR_COOKIE"
echo "   * OCSP:                       $ENABLED_OCSP"
echo "   * OCSP Stapling:              $ENABLED_CERTIFICATE_STATUS_REQUEST"
echo "   * OCSP Stapling v2:           $ENABLED_CERTIFICATE_STATUS_REQUEST_V2"
echo "   * CRL:                        $ENABLED_CRL"
echo "   * CRL-MONITOR:                $ENABLED_CRL_MONITOR"
echo "   * Persistent session cache:   $ENABLED_SAVESESSION"
echo "   * Persistent cert    cache:   $ENABLED_SAVECERT"
echo "   * Atomic User Record Layer:   $ENABLED_ATOMICUSER"
echo "   * Public Key Callbacks:       $ENABLED_PKCALLBACKS"
echo "   * libxmss:                    $ENABLED_LIBXMSS"
echo "   * liblms:                     $ENABLED_LIBLMS"
echo "   * liboqs:                     $ENABLED_LIBOQS"
echo "   * Whitewood netRandom:        $ENABLED_WNR"
echo "   * Server Name Indication:     $ENABLED_SNI"
echo "   * ALPN:                       $ENABLED_ALPN"
echo "   * Maximum Fragment Length:    $ENABLED_MAX_FRAGMENT"
echo "   * Trusted CA Indication:      $ENABLED_TRUSTED_CA"
echo "   * Truncated HMAC:             $ENABLED_TRUNCATED_HMAC"
echo "   * Supported Elliptic Curves:  $ENABLED_SUPPORTED_CURVES"
echo "   * FFDHE only in client:       $ENABLED_FFDHE_ONLY"
echo "   * Session Ticket:             $ENABLED_SESSION_TICKET"
echo "   * Extended Master Secret:     $ENABLED_EXTENDED_MASTER"
echo "   * Renegotiation Indication:   $ENABLED_RENEGOTIATION_INDICATION"
echo "   * Secure Renegotiation:       $ENABLED_SECURE_RENEGOTIATION"
echo "   * Fallback SCSV:              $ENABLED_FALLBACK_SCSV"
echo "   * Keying Material Exporter:   $ENABLED_KEYING_MATERIAL"
echo "   * All TLS Extensions:         $ENABLED_TLSX"
echo "   * S/MIME:                     $ENABLED_SMIME"
echo "   * PKCS#7:                     $ENABLED_PKCS7"
echo "   * PKCS#8:                     $ENABLED_PKCS8"
echo "   * PKCS#11:                    $ENABLED_PKCS11"
echo "   * PKCS#12:                    $ENABLED_PKCS12"
echo "   * wolfSSH:                    $ENABLED_WOLFSSH"
echo "   * wolfEngine:                 $ENABLED_WOLFENGINE"
echo "   * wolfTPM:                    $ENABLED_WOLFTPM"
echo "   * wolfCLU:                    $ENABLED_WOLFCLU"
echo "   * wolfSCEP:                   $ENABLED_WOLFSCEP"
echo "   * Secure Remote Password:     $ENABLED_SRP"
echo "   * Small Stack:                $ENABLED_SMALL_STACK"
echo "   * Linux Kernel Module:        $ENABLED_LINUXKM"
echo "   * valgrind unit tests:        $ENABLED_VALGRIND"
echo "   * LIBZ:                       $ENABLED_LIBZ"
echo "   * Examples:                   $ENABLED_EXAMPLES"
echo "   * Crypt tests:                $ENABLED_CRYPT_TESTS"
echo "   * Stack sizes in tests:       $ENABLED_STACKSIZE"
echo "   * Heap stats in tests:        $ENABLED_TRACKMEMORY"
echo "   * Asynchronous Crypto:        $ENABLED_ASYNCCRYPT"
echo "   * Asynchronous Crypto (sim):  $ENABLED_ASYNCCRYPT_SW"
echo "   * Cavium Nitrox:              $ENABLED_CAVIUM"
echo "   * Cavium Octeon (Sync):       $ENABLED_OCTEON_SYNC"
echo "   * Intel Quick Assist:         $ENABLED_INTEL_QA"
if test "$ENABLED_ARMASM_INLINE" = "yes"
then
    ENABLED_ARMASM="inline C"
fi
echo "   * ARM ASM:                    $ENABLED_ARMASM"
echo "   * ARM ASM SHA512/SHA3 Crypto  $ENABLED_ARMASM_SHA3"
echo "   * ARM ASM SM3/SM4 Crypto      $ENABLED_ARMASM_CRYPTO_SM4"
echo "   * AES Key Wrap:               $ENABLED_AESKEYWRAP"
echo "   * Write duplicate:            $ENABLED_WRITEDUP"
echo "   * Xilinx Hardware Acc.:       $ENABLED_XILINX"
echo "   * Inline Code:                $ENABLED_INLINE"
echo "   * Linux AF_ALG:               $ENABLED_AFALG"
echo "   * Linux KCAPI:                $ENABLED_KCAPI"
echo "   * Linux devcrypto:            $ENABLED_DEVCRYPTO"
echo "   * PK callbacks:               $ENABLED_PKCALLBACKS"
echo "   * Crypto callbacks:           $ENABLED_CRYPTOCB"
echo "   * i.MX CAAM:                  $ENABLED_CAAM"
echo "   * IoT-Safe:                   $ENABLED_IOTSAFE"
echo "   * IoT-Safe HWRNG:             $ENABLED_IOTSAFE_HWRNG"
echo "   * NXP SE050:                  $ENABLED_SE050"
echo "   * Maxim Integrated MAXQ10XX:  $ENABLED_MAXQ10XX"
echo "   * PSA:                        $ENABLED_PSA"
echo "   * System CA certs:            $ENABLED_SYS_CA_CERTS"
echo "   * Dual alg cert support:      $ENABLED_DUAL_ALG_CERTS"
echo "   * ERR Queues per Thread:      $ENABLED_ERRORQUEUEPERTHREAD"
echo "   * rwlock:                     $ENABLED_RWLOCK"
echo "   * keylog export:              $ENABLED_KEYLOG_EXPORT"
echo ""
echo "---"

echo "./configure flags: $(./config.status --config)"

fi # $silent != yes

################################################################################
# Show warnings at bottom so they are noticed
################################################################################

if test "$ENABLED_ASYNCCRYPT" = "yes" && ! test -s $srcdir/wolfcrypt/src/async.c
then
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: Make sure real async files are loaded. Contact wolfSSL for details on using the asynccrypt option." >&5
printf "%s\n" "$as_me: WARNING: Make sure real async files are loaded. Contact wolfSSL for details on using the asynccrypt option." >&2;}
fi

# MinGW static vs shared library
# Reference URL from libtool for MinGW is located at
# http://www.gnu.org/software/libtool/manual/libtool.html#Cygwin-to-MinGW-Cross
# this allows for not even having dllimport/dllexport on functions
# with recent libtools, only requiring it with global variables.
#
# The following warning is displayed here because if not using "contemporary GNU
# tools" there is the possibility of export/import issues.
# wolfSSL uses __declspec(dllexport) and "contemporary GNU tools" handle the
# case where both static and shared libraries are built.
#
# More can be found about the MinGW linker at
# https://sourceware.org/binutils/docs/ld/WIN32.html
if test "$MINGW_LIB_WARNING" = "yes"
then
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: Building with shared and static library at the same time on this system may cause export/import problems when using non contemporary GNU tools." >&5
printf "%s\n" "$as_me: WARNING: Building with shared and static library at the same time on this system may cause export/import problems when using non contemporary GNU tools." >&2;}
fi
   